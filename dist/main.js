/*!
 * Chimera UI Libraries - Build 0.39.0 (10/14/2025, 11:24:14)
 *         
 */
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 114);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(205);
} else {
  module.exports = require('./cjs/react.development.js');
}


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) {
  var ReactIs = require('react-is');

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(218)();
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(9);
var core = __webpack_require__(3);
var hide = __webpack_require__(22);
var redefine = __webpack_require__(26);
var ctx = __webpack_require__(24);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(39)('wks');
var uid = __webpack_require__(33);
var Symbol = __webpack_require__(9).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.useRegistered = exports.useURLState = exports.useLazyLoading = exports.useConfig = exports.useExpandable = exports.useWindowDimensions = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.debounce = debounce;

var _react = __webpack_require__(0);

var _general = __webpack_require__(6);

var _consonant = __webpack_require__(104);

var _contexts = __webpack_require__(105);

var _constants = __webpack_require__(14);

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable */
function debounce(fn, wait) {
    var timeout = void 0;

    var cancel = function cancel() {
        if (timeout) {
            clearTimeout(timeout);
        }
    };

    // Return non-arrow func to preserve this context
    var debounceFunc = function debounceFunc() {
        var _this = this;

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        var functionCall = function functionCall() {
            return fn.apply(_this, args);
        };

        clearTimeout(timeout);
        timeout = setTimeout(functionCall, wait);
    };

    debounceFunc.cancel = cancel;

    return debounceFunc;
};
/* eslint-enable */

/**
 * @typedef {function(): {Int, Int}} WindowDimensionsState - Current Window Dimensions
 * @description — Returns Current Window Dimensions
 *
 * @type {function(): {Int, Int}} WindowDimensions
 */
var useWindowDimensions = exports.useWindowDimensions = function useWindowDimensions() {
    return {
        width: window.innerWidth,
        height: window.innerHeight
    };
};

/**
 * @typedef {String} OpenDropdownState - Id of a selected dropdown
 * @description — Passed in Context Provider So All Nested Components can be in sync
 *
 * @typedef {Function} OpenDropdownStateSetter - handleToggle sets dropdown state
 * @description - This handles keeping multiple popup states in sync
 *
 * @type {[String, Function]} OpenDropdown
 */
var useExpandable = exports.useExpandable = function useExpandable(dropdownId) {
    var _useContext = (0, _react.useContext)(_contexts.ExpandableContext),
        openDropdown = _useContext.value,
        setOpenDropdown = _useContext.setValue;

    var handleToggle = (0, _react.useCallback)(function (e) {
        e.stopPropagation();
        if (openDropdown === dropdownId) {
            setOpenDropdown(null);
        } else {
            setOpenDropdown(dropdownId);
        }
    }, [setOpenDropdown, openDropdown]);

    return [openDropdown, handleToggle];
};

/**
 * @typedef {Function} ConfigStateSetter
 * @description - Configs are grabbed from Authoring Dialog and passed into React Component
 *
 * @type {[Number, Function]} Config
 */
var useConfig = exports.useConfig = function useConfig() {
    var config = (0, _react.useContext)(_contexts.ConfigContext);
    return (0, _react.useCallback)((0, _consonant.makeConfigGetter)(config), [config]);
};

/**
 * @typedef {Image} LazyLoadedImageState
 * @description — Has image as state after image is lazy loaded
 *
 * @typedef {Function} LazyLoadedImageStateSetter
 * @description - Sets state once image is lazy loaded
 *
 * @type {[Image]} LazyLoadedImage
 */
var useLazyLoading = exports.useLazyLoading = function useLazyLoading(imageRef, image) {
    var options = {
        rootMargin: _constants.ROOT_MARGIN_DEFAULT
    };

    var _useState = (0, _react.useState)(''),
        _useState2 = _slicedToArray(_useState, 2),
        lazyLoadImage = _useState2[0],
        setLazyLoadImage = _useState2[1];

    var _useState3 = (0, _react.useState)(''),
        _useState4 = _slicedToArray(_useState3, 2),
        intersectionImage = _useState4[0],
        setIntersectionImage = _useState4[1];

    var imageObserver = new IntersectionObserver(function (elements) {
        if (elements[0].intersectionRatio !== 0) {
            setIntersectionImage(image);
        }
    }, options);

    (0, _react.useEffect)(function () {
        var img = void 0;
        if (intersectionImage) {
            img = new Image();

            img.src = intersectionImage;
            img.onload = function () {
                setLazyLoadImage(intersectionImage);
            };
        }
        return function () {
            if (img) {
                img.onload = function () {};
            }
        };
    }, [intersectionImage]);

    (0, _react.useEffect)(function () {
        if (imageRef.current) {
            imageObserver.observe(imageRef.current);
        }
        return function () {
            imageObserver.unobserve(imageRef.current);
        };
    }, [imageRef]);

    return [lazyLoadImage];
};

/**
 * Create a state that is sync with url search param.
 *
 * @type {Object, Function, Function]} urlState, handleSetQuery, handleClearQuery
 */
var useURLState = exports.useURLState = function useURLState() {
    var _window = window,
        _window$location = _window.location,
        search = _window$location.search,
        pathname = _window$location.pathname,
        hash = _window$location.hash;

    var _useState5 = (0, _react.useState)(_general.qs.parse(search)),
        _useState6 = _slicedToArray(_useState5, 2),
        urlState = _useState6[0],
        setUrlState = _useState6[1];

    var handleSetQuery = (0, _react.useCallback)(function (key, value) {
        setUrlState(function (origin) {
            if (!value || Array.isArray(value) && !value.length) {
                var cloneOrigin = _extends({}, origin);
                delete cloneOrigin[key];

                return cloneOrigin;
            }

            return _extends({}, origin, _defineProperty({}, key, value));
        });
    }, []);

    var handleClearQuery = (0, _react.useCallback)(function () {
        setUrlState({});
    }, []);

    (0, _react.useEffect)(function () {
        var searchString = _general.qs.stringify(urlState, { array: 'comma' });
        var urlString = '' + pathname + (searchString ? '?' : '') + searchString + hash;

        window.history.replaceState(null, '', urlString);
    }, [urlState]);

    return [urlState, handleSetQuery, handleClearQuery];
};

var useRegistered = exports.useRegistered = function useRegistered() {
    var _useState7 = (0, _react.useState)(false),
        _useState8 = _slicedToArray(_useState7, 2),
        registered = _useState8[0],
        setRegistered = _useState8[1];

    function isRegisteredForEvent() {
        var fedsData = (0, _general.getByPath)(window, 'feds.data', null);
        var eventName = (0, _general.getByPath)(fedsData, 'eventName', null);
        var eventData = eventName && fedsData[eventName] ? fedsData[eventName] : null;
        var isUserRegistered = eventData ? eventData.isRegistered : null;

        var isRegisteredForMax = (0, _general.getByPath)(fedsData, 'isRegisteredForMax', null);

        return !!(isUserRegistered || isRegisteredForMax);
    }

    (0, _react.useEffect)(function () {
        if (!registered) {
            var fedsUtilities = (0, _general.getByPath)(window, 'feds.utilities', null);
            var getEventData = fedsUtilities ? fedsUtilities.getEventData : null;
            if (getEventData) {
                getEventData().then(function () {
                    var response = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                    var isRegistered = response.isRegistered;

                    if (isRegistered) {
                        setRegistered(true);
                    }
                }).catch(function () {
                    var newIsRegistered = isRegisteredForEvent();
                    if (newIsRegistered) {
                        setRegistered(newIsRegistered);
                    }
                });
            }
        }
    }, [registered]);

    return registered;
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.removeMarkDown = exports.sanitizeEventFilter = exports.getSearchParam = exports.getGlobalNavHeight = exports.getLinkTarget = exports.getEventBanner = exports.getCurrentDate = exports.isDateAfterInterval = exports.isDateBeforeInterval = exports.isDateWithinInterval = exports.qs = exports.mergeDeep = exports.setByPath = exports.debounce = exports.getSelectedItemsCount = exports.getByPath = exports.template = exports.getEndNumber = exports.getStartNumber = exports.getPageStartEnd = exports.generateRange = exports.stopPropagation = exports.isAtleastOneFilterSelected = exports.isNullish = exports.parseToPrimitive = exports.isObject = exports.mapObject = exports.sanitizeText = exports.sortByKey = exports.intersection = exports.isSuperset = exports.chainFromIterable = exports.chain = exports.removeDuplicatesByKey = exports.truncateList = exports.truncateString = exports.readInclusionsFromLocalStorage = exports.readBookmarksFromLocalStorage = exports.saveBookmarksToLocalStorage = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.getTransitions = getTransitions;

var _priorityQueue = __webpack_require__(212);

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Saves a card to local storage
 * @param {Number} bookmarksValue - The id of the card to save
 * @return {Void}
 */
var saveBookmarksToLocalStorage = exports.saveBookmarksToLocalStorage = function saveBookmarksToLocalStorage(bookmarksValue) {
    localStorage.setItem('bookmarks', JSON.stringify(bookmarksValue, null, 2));
};

/**
 * Returns all cards saved in local storage
 * @return {Array} - All saved bookmarks
 */
var readBookmarksFromLocalStorage = exports.readBookmarksFromLocalStorage = function readBookmarksFromLocalStorage() {
    var bookmarks = JSON.parse(localStorage.getItem('bookmarks'));
    return Array.isArray(bookmarks) ? bookmarks : [];
};

var readInclusionsFromLocalStorage = exports.readInclusionsFromLocalStorage = function readInclusionsFromLocalStorage() {
    var favorites = JSON.parse(localStorage.getItem('chimera.favorites')) || [];
    var schedule = JSON.parse(localStorage.getItem('chimera.schedule')) || [];
    var lastWatched = localStorage.getItem('chimera.lastWatched') || '';

    return new Set([].concat(favorites, [lastWatched], schedule));
};

/**
 * Helper method to truncate strings
 * @param {String} str - The string to truncate
 * @param {Number} num - How much to truncate
 * @return {String} - The truncated string
 */
var truncateString = exports.truncateString = function truncateString(str, num) {
    if (str.length <= num) return str;
    return str.slice(0, num) + '...';
};

/**
 * Helper method to truncate a list of cards
 * @param {Number} limit - How much to truncate by
 * @param {Array} list - What to truncate
 * @return {Array} - The truncated list
 */
var truncateList = exports.truncateList = function truncateList(limit, list) {
    // No limit, return all;
    if (limit < 0) return list;

    // Slice received data to required q-ty;
    return list.slice(0, limit);
};

/**
 * Helper method to remove duplicate cards from list
 * @param {Array} list - The list of cards
 * @param {key} key - What key to search for duplicates for
 * @return {Array} - A list of cards with no duplicates
 */
var removeDuplicatesByKey = exports.removeDuplicatesByKey = function removeDuplicatesByKey(list, key) {
    var newList = [];
    var ids = new Set();
    list.forEach(function (item) {
        if (!ids.has(item[key])) {
            newList.push(item);
            ids.add(item[key]);
        }
    });
    return newList;
};

/**
 * Helper method that chains lists together
 * @param {Any} args - Any set of args
 * @example chain(['A', 'B', 'C'], ['D', 'E', 'F']) --> ['A' 'B' 'C' 'D' 'E' 'F']
 */
var chain = exports.chain = function chain() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
    }

    return args.reduce(function (a, b) {
        return a.concat(b);
    }, []);
};

/**
 * Helper method that chains iterables together
 * @param {Any} args - Any set of iterable arguments
 * @example chainFromIterable(someIterable) --> ['A' 'B' 'C' 'D' 'E' 'F']
 */
var chainFromIterable = exports.chainFromIterable = function chainFromIterable(args) {
    return chain.apply(undefined, _toConsumableArray(args));
};

/**
 * Helper method to determine wheether set A is a superset of set B
 * @param {Set} superset - The first set
 * @param {Set} subset - The second set
 * @return {Boolean} - Whether set A is a superset of set B
 */
var isSuperset = exports.isSuperset = function isSuperset(superset, subset) {
    // eslint-disable-next-line no-restricted-syntax
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = subset[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var elem = _step.value;

            if (!superset.has(elem)) {
                return false;
            }
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }

    return true;
};

/**
 * Helper method to do determine whether the two sets have an intersection
 * @param {Set} setA - The first set
 * @param {Set} setB - The second set
 * @return {Boolean} - Whether there is an intersection of elements between the sets
 */
var intersection = exports.intersection = function intersection(setA, setB) {
    var intersectionSet = new Set();
    // eslint-disable-next-line no-restricted-syntax
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
        for (var _iterator2 = setB[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var elem = _step2.value;

            if (setA.has(elem)) {
                intersectionSet.add(elem);
            }
        }
    } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
            }
        } finally {
            if (_didIteratorError2) {
                throw _iteratorError2;
            }
        }
    }

    return intersectionSet;
};

/**
 * Helper method to sort by keys
 * @param {Iterable} iterable - The iterable object
 * @param {Function} keyFunc - The function to apply
 */
var sortByKey = exports.sortByKey = function sortByKey(iterable, keyFunc) {
    return [].concat(_toConsumableArray(iterable)).sort(function (a, b) {
        if (keyFunc(a) < keyFunc(b)) return -1;
        if (keyFunc(a) > keyFunc(b)) return 1;
        return 0;
    });
};

var allowedChars = /[a-zA-Z0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s.]/g;

/**
 * Returns cleaned up text
 * don't allow urls
 * @param {String} text - The text so sanitize
 * @return {String} - The cleaned up text
 */
var sanitizeText = exports.sanitizeText = function sanitizeText(text) {
    if (!text) return '';
    var sanitized = text.toLowerCase().trim();
    // remove any invalid chars
    var matchedAllowedChars = sanitized.match(allowedChars);
    sanitized = matchedAllowedChars ? matchedAllowedChars.join('') : '';
    return sanitized;
};

/**
 * For a given object, applies a function to key in that object
 * @param {Object} object - The object to apply the function to
 * @param {Function} func - The function to apply to the entries in the object
 * @return {Object} - The new object
 */
var mapObject = exports.mapObject = function mapObject(object, func) {
    var newObj = {};
    var keys = Object.keys(object);

    keys.forEach(function (key) {
        newObj[key] = func(object[key]);
    });

    return newObj;
};

/**
 * Determines whether the passed in value is an object or not
 * @param {Any} val - Start value in the range array;
 * @return {Boolean} - Whether the passed in value is nullish or not
 */
var isObject = exports.isObject = function isObject(val) {
    return !!val && val.constructor === Object;
};

/**
 * Support method so HTL/Sightly can pass authored properties to React
 * @param {Object} value - Start value in the range array;
 * @return {Object} - Authored config used by react component
 */
var parseToPrimitive = exports.parseToPrimitive = function parseToPrimitive(value) {
    if (isObject(value)) {
        return mapObject(value, parseToPrimitive);
    } else if (Array.isArray(value)) {
        return value.map(parseToPrimitive);
    }

    try {
        return parseToPrimitive(JSON.parse(value));
    } catch (e) {
        return value;
    }
};

/**
 * Determines whether the passed in value is nullish or not
 * @param {Any} val - Start value in the range array;
 * @return {Boolean} - Whether the passed in value is nullish or not
 */
var isNullish = exports.isNullish = function isNullish(val) {
    return val === undefined || val === null || Number.isNaN(val);
};

var isAtleastOneFilterSelected = exports.isAtleastOneFilterSelected = function isAtleastOneFilterSelected(filters) {
    return chainFromIterable(filters.map(function (f) {
        return f.items;
    })).some(function (item) {
        return item.selected;
    });
};

/**
 * Helper method to stop propagation for events
 * @param {Event} e - The event to stop propagation for
 * @return {Void}
 */
var stopPropagation = exports.stopPropagation = function stopPropagation(e) {
    return e.stopPropagation();
};

/**
 * Return a range of numbers from [start, ... , end];
 * @param {number} startVal - Start value in the range array;
 * @param {number} end - End value in the range array;
 * @return {Array}
 */
var generateRange = exports.generateRange = function generateRange(startVal, end) {
    var start = startVal;
    var step = 1;
    var range = [];

    if (end < start) {
        step = -step;
    }

    while (step > 0 ? end >= start : end <= start) {
        range.push(start);
        start += step;
    }

    return range;
};

/**
 * Gets what start and end numbers should be for a given page
 * @param {number} pageCount - Total pages to display
 * @param {number} currentPageNumber - Current page user is on
 * @param {number} totalPages - Total number of pages available
 * @return {Array} - The start and end page numbers
 */
var getPageStartEnd = exports.getPageStartEnd = function getPageStartEnd(currentPageNumber, pageCount, totalPages) {
    var halfPageCount = Math.floor(pageCount / 2);
    var start = void 0;
    var end = void 0;

    if (totalPages <= pageCount + 1) {
        // show all pages
        start = 1;
        end = totalPages;
    } else {
        start = Math.min(Math.max(1, currentPageNumber - halfPageCount), totalPages - pageCount);
        end = Math.max(Math.min(currentPageNumber + halfPageCount, totalPages), pageCount + 1);
    }

    return [start, end];
};

/**
 * Gets the start number for Paginator Component
 * @param {Number} currentPageNumber - Current page the user is on
 * @param {Number} showItemsPerPage - How many items to show per page
 * @returns {Number} - The start number for Paginator Component
 */
var getStartNumber = exports.getStartNumber = function getStartNumber(currentPageNumber, showItemsPerPage) {
    if (currentPageNumber === 1) return 1;
    return currentPageNumber * showItemsPerPage - (showItemsPerPage - 1);
};

/**
 * Gets the end number for Paginator Component
 * @param {Number} currentPageNumber - Current page the user is on
 * @param {Number} showItemsPerPage - How many items to show per page
 * @param {Number} totalResults - Total count of cards in collection
 * @returns {Number} - The end number for Paginator Component
 */
var getEndNumber = exports.getEndNumber = function getEndNumber(currentPageNumber, showItemsPerPage, totalResults) {
    var res = currentPageNumber * showItemsPerPage;
    return res < totalResults ? res : totalResults;
};

/**
 * Gets the end number for Paginator Component
 * @param {string} text - template string like a '{0} {1}'
 * @param {object} props - object with props to replace part of text in brackets
 * @returns {string} - ('{placeholderKey}', { placeholderKey: 'placeholderValue' })
 *  => 'placeholderValue'
 */
var template = exports.template = function template() {
    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var props = arguments[1];

    if (!props) return text;

    var regExp = /{([A-z]*)}/gi;
    var replacer = function replacer(fullMatch, key) {
        return props[key] || fullMatch;
    };

    return text.replace(regExp, replacer);
};

/**
 * Gets the object/path/defaultValue and return object value by this path
 * @param {Object} object - object to get value
 * @param {String} path - path to searched value
 * @param {any} defaultValue - will return when no value was found
 * @returns {any} - searched value
 */
var getByPath = exports.getByPath = function getByPath(object, path, defaultValue) {
    if (!object || !path) return defaultValue;

    var result = object;
    var chunks = path.split('.');

    for (var index = 0; index < chunks.length; index += 1) {
        var chunk = chunks[index];

        /* eslint-disable-next-line no-prototype-builtins */
        if (result != null && result.hasOwnProperty(chunk)) {
            result = result[chunk];
        } else {
            result = defaultValue;
            break;
        }
    }

    return result;
};

/**
 * Return sum of the selected filters
 * @param {items} array - filter items
 * @returns {number} - selected items count
 */
var getSelectedItemsCount = exports.getSelectedItemsCount = function getSelectedItemsCount(items) {
    return items.filter(function (_ref) {
        var selected = _ref.selected;
        return Boolean(selected);
    }).length;
};

/**
 * Func to make debounced functions
 * @param {Function} func - target function
 * @param {number} timeout - debounce delay
 * @returns {func} - debounced function
 */
var debounce = exports.debounce = function debounce(func) {
    var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    var timer = void 0;

    return function () {
        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
        }

        clearTimeout(timer);

        timer = setTimeout(function () {
            func.apply(undefined, args);
        }, timeout);
    };
};

/**
 * Set object value by path
 * @param {Object} object - target object
 * @param {string} path - destination path
 * @param {any} value - value which should be assign
 */
var setByPath = exports.setByPath = function setByPath(object, path, value) {
    if (!object || !path) return;

    var chunks = path.split('.');
    var withoutLast = chunks.slice(0, -1);
    var lastChunk = chunks[chunks.length - 1];

    var target = withoutLast.reduce(function (accumulator, chunk) {
        if (!isObject(accumulator[chunk])) {
            accumulator[chunk] = {};
        }
        return accumulator[chunk];
    }, object);

    target[lastChunk] = value;
};

/**
 * Deep merge objects without undefined values
 * @param {Object} target - target object
 * @param {...Object} sources - objects to merge
 * @return {Obect} merge object
 */
var mergeDeep = exports.mergeDeep = function mergeDeep(target) {
    for (var _len3 = arguments.length, sources = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        sources[_key3 - 1] = arguments[_key3];
    }

    if (!sources.length) return target;

    var source = sources.shift();

    if (isObject(target) && isObject(source)) {
        var keys = Object.keys(source);

        keys.forEach(function (key) {
            if (isObject(source[key])) {
                if (!target[key]) target[key] = {};

                mergeDeep(target[key], source[key]);
            } else if (source[key] !== undefined) {
                Object.assign(target, _defineProperty({}, key, source[key]));
            }
        });
    }

    return mergeDeep.apply(undefined, [target].concat(sources));
};

var isCaasGroup = function isCaasGroup(group) {
    return group.indexOf('ch_') === 0;
};

/**
 * Methods to create/parse queryString
 */
var qs = exports.qs = {
    parse: function parse(string) {
        var searchParams = new URLSearchParams(string);

        return [].concat(_toConsumableArray(searchParams.keys())).reduce(function (accumulator, key) {
            if (!accumulator[key]) {
                var value = searchParams.getAll(key);

                if (isCaasGroup(key)) {
                    if (value.length === 1) {
                        var _value = value,
                            _value2 = _slicedToArray(_value, 1),
                            firstItem = _value2[0];
                        /* istanbul ignore if */


                        if (firstItem.includes('|')) {
                            value = firstItem.split('|');
                        }
                    }
                    accumulator[key] = decodeURIComponent(value);
                } else {
                    accumulator[key] = value;
                }
            }

            return accumulator;
        }, {});
    },
    stringify: function stringify(obj) {
        var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            array = _ref2.array;

        var searchParams = new URLSearchParams();
        Object.entries(obj).forEach(function (_ref3) {
            var _ref4 = _slicedToArray(_ref3, 2),
                key = _ref4[0],
                value = _ref4[1];

            if (isCaasGroup(key)) {
                if (Array.isArray(value)) {
                    if (array === 'comma') {
                        searchParams.append(key, encodeURIComponent(value));
                    } else {
                        searchParams.append(key, encodeURIComponent(value.join('|')));
                    }
                } else {
                    searchParams.append(key, encodeURIComponent(value));
                }
            } else {
                searchParams.append(key, value);
            }
        });

        return searchParams.toString();
    }
};

var isDateWithinInterval = exports.isDateWithinInterval = function isDateWithinInterval(currentDate, startDate, endDate) {
    var curr = Date.parse(currentDate);
    var start = Date.parse(startDate);
    var end = Date.parse(endDate);

    return start <= curr && end > curr;
};

var isDateBeforeInterval = exports.isDateBeforeInterval = function isDateBeforeInterval(currentDate, startDate) {
    var curr = Date.parse(currentDate);
    var start = Date.parse(startDate);

    return curr < start;
};
/* istanbul ignore next */
var isDateAfterInterval = exports.isDateAfterInterval = function isDateAfterInterval(currentDate, endDate) {
    var curr = Date.parse(currentDate);
    var end = Date.parse(endDate);

    return curr > end;
};

var getCurrentDate = exports.getCurrentDate = function getCurrentDate() {
    var urlParams = new URLSearchParams(window.location.search);
    var servertime = parseInt(urlParams.get('servertime'), 10);
    var timeSinceArrival = performance.now();
    var currDate = servertime ? new Date(servertime + timeSinceArrival) : new Date();
    return currDate;
};

var getEventBanner = exports.getEventBanner = function foo(startDate, endDate, bannerMap) {
    var currDate = getCurrentDate();
    /* istanbul ignore if */
    if (isDateWithinInterval(currDate, startDate, endDate)) {
        return bannerMap.live || {
            backgroundColor: '',
            description: '',
            fontColor: '',
            icon: ''
        };
    } else if (isDateBeforeInterval(currDate, startDate)) {
        return bannerMap.upcoming || {
            backgroundColor: '',
            description: '',
            fontColor: '',
            icon: ''
        };
    }
    return bannerMap.onDemand || {
        backgroundColor: '',
        description: '',
        fontColor: '',
        icon: ''
    };
};

function getTransitions(cardsPtr) {
    var cards = [].concat(_toConsumableArray(cardsPtr));
    var currentDate = getCurrentDate();
    var transitions = new _priorityQueue.MinPriorityQueue();

    /* eslint-disable no-plusplus */
    for (var i = 0; i < cards.length; i++) {
        var priority = Date.parse(cards[i].startDate) - currentDate;
        /* istanbul ignore if */
        if (priority && priority > 0) {
            transitions.enqueue(cards[i], priority);
        }
        var endPriority = Date.parse(Date.parse(cards[i].endDate) - currentDate);
        /* istanbul ignore if */
        if (cards[i].endDate && endPriority > 0) {
            transitions.enqueue(null, endPriority);
        }
    }
    return transitions;
}

var getLinkTarget = exports.getLinkTarget = function getLinkTarget(link) {
    var ctaAction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var domain = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window.location.hostname;

    if (ctaAction || link.startsWith('#')) {
        return ctaAction;
    }
    var target = '_blank';
    try {
        var _ref5 = new URL(link),
            _ref5$hostname = _ref5.hostname,
            linkHostName = _ref5$hostname === undefined ? '' : _ref5$hostname;

        if (domain === linkHostName) {
            target = '_self';
        }
    } catch (e) {
        /* eslint-disable-line no-empty */
    }
    return target;
};

var getGlobalNavHeight = exports.getGlobalNavHeight = function getGlobalNavHeight() {
    var header = document.querySelector('header');
    var offSet = 20; // margin above card collection
    /* istanbul ignore else */
    if (!header) return offSet;

    var isBacom = header.getAttribute('daa-lh') && header.getAttribute('daa-lh').includes('bacom');
    var headerWrapper = isBacom ? header : document.querySelector('.feds-header-wrapper');

    return isBacom || headerWrapper && headerWrapper.classList.contains('feds-header-wrapper--sticky') ? header.offsetHeight + offSet : offSet;
};

var getSearchParam = exports.getSearchParam = function getSearchParam(url, param) {
    if (!url || !url.startsWith('http') || !param) return null;
    var urlObj = new URL(url);
    return urlObj.searchParams.get(param);
};

var sanitizeEventFilter = exports.sanitizeEventFilter = function sanitizeEventFilter(rawEventFilter) {
    if (!rawEventFilter || rawEventFilter.indexOf('all') > -1) return [];
    if (Array.isArray(rawEventFilter)) return rawEventFilter;
    return [rawEventFilter];
};

var removeMarkDown = exports.removeMarkDown = function removeMarkDown() {
    var md = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    if (!md) return '';
    var text = md.toString() || '';
    return text.replace(/<[^>]*>/g, '').replaceAll('{**', '').replaceAll('**}', '').replaceAll('{*', '').replaceAll('*}', '');
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = '';

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (arg) {
				classes = appendClass(classes, parseValue(arg));
			}
		}

		return classes;
	}

	function parseValue (arg) {
		if (typeof arg === 'string' || typeof arg === 'number') {
			return arg;
		}

		if (typeof arg !== 'object') {
			return '';
		}

		if (Array.isArray(arg)) {
			return classNames.apply(null, arg);
		}

		if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
			return arg.toString();
		}

		var classes = '';

		for (var key in arg) {
			if (hasOwn.call(arg, key) && arg[key]) {
				classes = appendClass(classes, key);
			}
		}

		return classes;
	}

	function appendClass (value, newClass) {
		if (!newClass) {
			return value;
		}
	
		if (value) {
			return value + ' ' + newClass;
		}
	
		return value + newClass;
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 9 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(15)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(8);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(11);
var IE8_DOM_DEFINE = __webpack_require__(68);
var toPrimitive = __webpack_require__(31);
var dP = Object.defineProperty;

exports.f = __webpack_require__(10) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(20);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Minimal viewport width to fit desktops/laptops
 * @type {Number}
 */
var DESKTOP_MIN_WIDTH = exports.DESKTOP_MIN_WIDTH = 1200;

/**
 * Minimal viewport width to fit tablets
 * @type {Number}
 */
var TABLET_MIN_WIDTH = exports.TABLET_MIN_WIDTH = 768;

/**
 * Maximum allowed top filters displayed
 * before "More Filters" button shows up
 * @type {Number}
 */
var MAX_TRUNCATED_FILTERS = exports.MAX_TRUNCATED_FILTERS = 3;

/**
 * Minimum top filters needed to display blurred effect
 * on filters wrapper
 * @type {Number}
 */
var MIN_FILTERS_SHOW_BG = exports.MIN_FILTERS_SHOW_BG = 3;

/**
 * Maximum allowed card description length
 * after which a truncation will take place
 * @type {Number}
 */
var TRUNCATE_TEXT_QTY = exports.TRUNCATE_TEXT_QTY = 200;

/**
 * Quantity of the pagination items to display
 * for mobile and desktop breakpoints
 * @type {Object}
 */
var PAGINATION_COUNT = exports.PAGINATION_COUNT = {
    DESKTOP: 10,
    MOBILE: 4
};

/**
 * Available filtering types
 * @type {Object}
 */
var FILTER_TYPES = exports.FILTER_TYPES = {
    AND: 'and',
    OR: 'or',
    XOR: 'xor'
};

/**
 * Available filter panel types
 * @type {Object}
 */
var FILTER_PANEL = exports.FILTER_PANEL = {
    LEFT: 'left',
    TOP: 'top',
    EVENTS: 'events'
};

/**
 * Available sorting types
 * @type {Object}
 */
var SORT_TYPES = exports.SORT_TYPES = {
    DATEASC: 'dateasc',
    DATEDESC: 'datedesc',
    MODIFIEDDESC: 'modifieddesc',
    MODIFIEDASC: 'modifiedasc',
    EVENTSORT: 'eventsort',
    FEATURED: 'featured',
    TITLEASC: 'titleasc',
    TITLEDESC: 'titledesc',
    RANDOM: 'random'
};

var EVENT_TIMING_IDS = exports.EVENT_TIMING_IDS = {
    LIVE: '8as8/hafk',
    ONDEMAND: '8as8/hyb6',
    UPCOMING: '8as8/iabx'
};

/**
 * Possible Locations of the Sort Popup
 * @type {String}
 */
var SORT_POPUP_LOCATION = exports.SORT_POPUP_LOCATION = {
    LEFT: 'left',
    RIGHT: 'right'
};

/**
 * Available infobit types
 * @type {Object}
 */
var INFOBIT_TYPE = exports.INFOBIT_TYPE = {
    PRICE: 'price',
    BUTTON: 'button',
    ICON_TEXT: 'icon-with-text',
    LINK_ICON: 'link-with-icon',
    TEXT: 'text',
    ICON: 'icon',
    LINK: 'link',
    PROGRESS: 'progress-bar',
    RATING: 'rating',
    BOOKMARK: 'bookmark',
    DATE: 'date-interval',
    GATED: 'gated'
};

/**
 * Available themes class names
 * @type {Object}
 */
var THEME_TYPE = exports.THEME_TYPE = {
    LIGHT: 'light',
    DARK: 'dark',
    DARKEST: 'darkest'
};

/**
 * Default authoring constants
 * @type {Object}
 */
var DEFAULT_CONFIG = exports.DEFAULT_CONFIG = {
    collection: {
        mode: '',
        layout: {
            type: '3up',
            gutter: '4x',
            container: '32Margin'
        },
        button: {
            style: ''
        },
        resultsPerPage: 9,
        endpoint: '',
        title: '',
        totalCardLimit: -1,
        cardStyle: '',
        bladeCard: {
            reverse: false,
            lightText: false,
            transparent: false
        },
        displayTotalResults: true,
        totalResultsText: '{} results',
        i18n: {
            prettyDateIntervalFormat: '{LLL} {dd} | {timeRange} {timeZone}',
            totalResultsText: '{total} results',
            title: '',
            onErrorTitle: 'Sorry there was a system error.',
            onErrorDescription: 'Please try reloading the page or try coming back to the page another time.',
            sortByAria: 'Sort by {key}',
            removeFilterAria: 'Remove {filter} filter',
            removeAllFiltersAria: 'Remove {num} {filter} filters',
            playVideo: 'Play, {cardTitle}'
        }
    },
    featuredCards: [],
    hideCtaIds: [],
    hideCtaTags: [],
    header: {
        enabled: false
    },
    filterPanel: {
        enabled: true,
        eventFilter: '',
        type: 'left',
        filters: [],
        clearAllFiltersText: 'Clear all',
        clearFilterText: 'Clear',
        filterLogic: 'and',
        leftPanelHeader: 'Refine the results',
        topPanel: {
            mobile: {
                blurFilters: true
            }
        }
    },
    sort: {
        enabled: true,
        defaultSort: 'featured',
        options: []
    },
    pagination: {
        enabled: true,
        type: 'loadMore',
        loadMoreButton: {
            style: 'primary',
            useThemeThree: false
        },
        paginatorQuantityText: 'Showing {}-{} of {} Results',
        paginatorPrevLabel: 'Previous',
        paginatorNextLabel: 'Next',
        loadMoreButtonText: 'Load more',
        loadMoreQuantityText: '{} of {} displayed'
    },
    bookmarks: {
        enabled: true,
        bookmarkOnlyCollection: false,
        cardSavedIcon: '',
        cardUnsavedIcon: '',
        selectBookmarksIcon: '',
        unselectBookmarksIcon: '',
        saveCardText: 'Save card',
        unsaveCardText: 'Unsave card',
        bookmarksFilterTitle: 'My favorites'
    },
    search: {
        enabled: true,
        inputPlaceholderText: 'Search here...',
        leftPanelTitle: 'Search',
        searchFields: ['title', 'description'],
        i18n: {
            noResultsTitle: 'No results found',
            noResultsDescription: 'We couldn\u2019t find any results for your {query}.{break}\n            Check your spelling or try broadening your search.'
        }
    },
    language: 'en',
    headers: []
};

/**
 * Default number of cards to display per page
 * @type {Number}
 */
var DEFAULT_SHOW_ITEMS_PER_PAGE = exports.DEFAULT_SHOW_ITEMS_PER_PAGE = 8;

/**
 * Available card types
 * @type {Object}
 */
var CARD_STYLES = exports.CARD_STYLES = {
    CARD: 'card',
    CUSTOM: 'custom-card'
};

/**
 * Available grid types
 * @type {Object}
 */
var GRID_TYPE = exports.GRID_TYPE = {
    TWO_UP: '2up',
    THREE_UP: '3up',
    FOUR_UP: '4up',
    FIVE_UP: '5up'
};

/**
 * Available gutter sizes
 * @type {Object}
 */
var GUTTER_SIZE = exports.GUTTER_SIZE = {
    GUTTER_1_X: '1x',
    GUTTER_2_X: '2x',
    GUTTER_3_X: '3x',
    GUTTER_4_X: '4x'
};

/**
 * Available layout container types
 * @type {Object}
 */
var LAYOUT_CONTAINER = exports.LAYOUT_CONTAINER = {
    SIZE_83_VW: '83Percent',
    SIZE_1200_PX: '1200MaxWidth',
    SIZE_1600_PX: '1600MaxWidth',
    SIZE_100_VW_32_MARGIN: '32Margin',
    CAROUSEL: 'carousel',
    CATEGORIES: 'categories'
};

/**
 * Available loader sizes
 * @type {Object}
 */
var LOADER_SIZE = exports.LOADER_SIZE = {
    MEDIUM: 'medium',
    BIG: 'big'
};

/**
 * Used for lazy-loading - lets the lazy load of the image
 * start before it is scrolled into the viewport.
 * @type {String}
 */
var ROOT_MARGIN_DEFAULT = exports.ROOT_MARGIN_DEFAULT = '500px';
var ONE_SECOND_DELAY = exports.ONE_SECOND_DELAY = 1000;

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(2);
var core = __webpack_require__(3);
var fails = __webpack_require__(15);
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(50);
var defined = __webpack_require__(20);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(34);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.configType = exports.sortOptionType = exports.filterType = exports.filterItemType = undefined;

var _propTypes = __webpack_require__(1);

var _card = __webpack_require__(37);

var CollectionResultPerPageType = [_propTypes.string, _propTypes.number];

var CollectionTotalCardLimitType = [_propTypes.string, _propTypes.number];

var CollectionDisplayTotalResultsType = [_propTypes.bool, _propTypes.string];

var CollectionType = {
    title: _propTypes.string,
    endpoint: _propTypes.string,
    cardStyle: _propTypes.string,
    totalResultsText: _propTypes.string,
    resultsPerPage: (0, _propTypes.oneOfType)(CollectionResultPerPageType),
    totalCardLimit: (0, _propTypes.oneOfType)(CollectionTotalCardLimitType),
    displayTotalResults: (0, _propTypes.oneOfType)(CollectionDisplayTotalResultsType)
};

var FeaturedCardsType = [_propTypes.string, (0, _propTypes.arrayOf)((0, _propTypes.shape)(_card.cardType)), (0, _propTypes.arrayOf)(_propTypes.string)];

var EnabledType = [_propTypes.bool, _propTypes.string];

var HeaderType = {
    enabled: (0, _propTypes.oneOfType)(EnabledType)
};

var filterItemType = exports.filterItemType = {
    id: _propTypes.string,
    label: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.number])
};

var filterType = exports.filterType = {
    id: _propTypes.string,
    group: _propTypes.string,
    items: (0, _propTypes.arrayOf)((0, _propTypes.shape)(filterItemType))
};

var FiltersType = [_propTypes.string, (0, _propTypes.arrayOf)((0, _propTypes.shape)(filterType))];

var FilterPanelType = {
    type: _propTypes.string,
    filterLogic: _propTypes.string,
    clearFilterText: _propTypes.string,
    leftPanelHeader: _propTypes.string,
    clearAllFiltersText: _propTypes.string,
    enabled: (0, _propTypes.oneOfType)(EnabledType),
    filters: (0, _propTypes.oneOfType)(FiltersType)
};

var PaginationType = {
    type: _propTypes.string,
    paginatorPrevLabel: _propTypes.string,
    paginatorNextLabel: _propTypes.string,
    loadMoreButtonText: _propTypes.string,
    enabled: (0, _propTypes.oneOfType)(EnabledType),
    loadMoreQuantityText: _propTypes.string,
    paginatorQuantityText: _propTypes.string
};

var BookmarksType = {
    saveCardText: _propTypes.string,
    cardSavedIcon: _propTypes.string,
    unsaveCardText: _propTypes.string,
    cardUnsavedIcon: _propTypes.string,
    selectBookmarksIcon: _propTypes.string,
    enabled: (0, _propTypes.oneOfType)(EnabledType),
    bookmarksFilterTitle: _propTypes.string,
    unselectBookmarksIcon: _propTypes.string
};

var SearchFieldType = [_propTypes.string, (0, _propTypes.arrayOf)(_propTypes.string)];

var SearchType = {
    leftPanelTitle: _propTypes.string,
    inputPlaceholderText: _propTypes.string,
    enabled: (0, _propTypes.oneOfType)(EnabledType),
    searchFields: (0, _propTypes.oneOfType)(SearchFieldType)
};

var sortOptionType = exports.sortOptionType = {
    sort: _propTypes.string,
    label: _propTypes.string
};

var SortType = {
    enabled: (0, _propTypes.oneOfType)(EnabledType),
    options: (0, _propTypes.oneOfType)([_propTypes.string, (0, _propTypes.arrayOf)((0, _propTypes.shape)(sortOptionType))])
};

var configType = exports.configType = {
    sort: (0, _propTypes.shape)(SortType),
    search: (0, _propTypes.shape)(SearchType),
    header: (0, _propTypes.shape)(HeaderType),
    bookmarks: (0, _propTypes.shape)(BookmarksType),
    collection: (0, _propTypes.shape)(CollectionType),
    pagination: (0, _propTypes.shape)(PaginationType),
    filterPanel: (0, _propTypes.shape)(FilterPanelType),
    featuredCards: (0, _propTypes.oneOfType)(FeaturedCardsType)
};

/***/ }),
/* 20 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sanitizeStr = exports.getFeaturedCards = exports.getRandomSort = exports.getUpdatedCardBookmarkData = exports.processCards = exports.joinCardSets = exports.getCardsMatchingSearch = exports.getEventSort = exports.getDateDescSort = exports.getDateAscSort = exports.getFeaturedSort = exports.getModifiedAscSort = exports.getModifiedDescSort = exports.getTitleDescSort = exports.getTitleAscSort = exports.hasTag = exports.getCardsMatchingQuery = exports.highlightCard = exports.getFilteredCards = exports.getActivePanels = exports.getActiveFilterIds = exports.getBookmarkedCards = exports.getCollectionCards = exports.getTotalPages = exports.getNumCardsToShow = exports.shouldDisplayPaginator = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _immer = __webpack_require__(272);

var _immer2 = _interopRequireDefault(_immer);

var _rendering = __webpack_require__(38);

var _general = __webpack_require__(6);

var _constants = __webpack_require__(14);

var _eventSort = __webpack_require__(273);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Needs to be explicitly called by immer - Needed for IE 11 support
 * @type {Function}
 */
(0, _immer.enableES5)();

/**
 * Determines whether paginator component should display
 * @param {Boolean} enabled - Authored flag whether component should display or not
 * @param {Number} totalCardLimit - Authored limit for how many cards should display
 * @param {Number} totalResults - Total cards in collection
 * @returns {Boolean} - Whether Paginator should display or not
 */
var shouldDisplayPaginator = exports.shouldDisplayPaginator = function shouldDisplayPaginator(enabled, totalCardLimit, totalResults) {
    var totalCardLimitNotZero = totalCardLimit > 0;
    var cardLengthExceedsDisplayLimit = totalResults > totalCardLimit;

    return enabled && totalCardLimitNotZero && !cardLengthExceedsDisplayLimit;
};

/**
 * Determines how many cards to show
 * @param {Number} resultsPerPage - How many cards should show per page (Authored Field)
 * @param {Number} currentPage - Current page user is on
 * @param {Number} totalResults - Total cards in collection
 * @returns {Number} - Number of cards to show
 */
var getNumCardsToShow = exports.getNumCardsToShow = function getNumCardsToShow(resultsPerPage, currentPage, totalResults) {
    return Math.min(resultsPerPage * currentPage, totalResults);
};

/**
 * Gets Total Page Count (For Paginator Component)
 * @param {Number} resultsPerPage - How many cards should show per page (Authored Field)
 * @param {Number} totalResults - Total cards in collection
 * @returns {Number} - Total number of pages
 */
var getTotalPages = exports.getTotalPages = function getTotalPages(resultsPerPage, totalResults) {
    if (resultsPerPage === 0) return 0;
    return Math.ceil(totalResults / resultsPerPage);
};

/**
 * Determines whether to show collection cards or bookmarked cards only
 * (If author chooses bookmarks only collection)

 * @param {Boolean} showBookmarksOnly - Authored Flag to Force Card Collection To
 * Only Show Bookmarks
 * @param {Array} bookmarkedCards - Bookmarked cards only
 * @param {Array} collectionCards - All cards
 * @returns {Array} - Which collection of cards to show
 */
var getCollectionCards = exports.getCollectionCards = function getCollectionCards(showBookmarksOnly, bookmarkedCards, collectionCards) {
    return showBookmarksOnly ? bookmarkedCards : collectionCards;
};

/**
 * Filter to get all bookmarked cards
 * @param {Array} collectionCards - All cards
 * @returns {Array} - All bookmarked cards
 */
var getBookmarkedCards = exports.getBookmarkedCards = function getBookmarkedCards(collectionCards) {
    return collectionCards.filter(function (card) {
        return card.isBookmarked;
    });
};

/**
 * Gets all filters checked by a user
 * @param {Array} filters - All filters on page
 * @returns {Array} - All checked filters by user
 */
var getActiveFilterIds = exports.getActiveFilterIds = function getActiveFilterIds(filters) {
    return (0, _general.chainFromIterable)(filters.map(function (f) {
        return f.items;
    })).filter(function (item) {
        return item.selected;
    }).map(function (item) {
        return item.id;
    });
};

/**
 * Gets all filter panels with filters checked by a user
 * @param {Array} activeFilters - All filters checked
 * @returns {Set} - Set of filter panels with filters checked on the page
 */
var getActivePanels = exports.getActivePanels = function getActivePanels(activeFilters) {
    return new Set(activeFilters.map(function (filter) {
        return filter.replace(/\/.*$/, '');
    }));
};

/**
 * Helper method to dermine whether author chose XOR or AND type filtering
 * @param {String} filterType - Filter used in collection
 * @param {Object} filterTypes - All possible filters
 * @returns {Boolean} - Whether collection is using a XOR or AND type filtering
 */
var getUsingXorAndFilter = function getUsingXorAndFilter(filterType, filterTypes) {
    return filterType === filterTypes.XOR || filterType === filterTypes.AND;
};

/**
 * Helper method to dermine whether author chose OR type filtering
 * @param {String} filterType - Filter used in collection
 * @param {Object} filterTypes - All possible filters
 * @returns {Boolean} - Whether collection is using OR type filtering
 */
var getUsingOrFilter = function getUsingOrFilter(filterType, filterTypes) {
    return filterType === filterTypes.OR;
};

/**
 * Helper method to determine whether we are doing event filtering from the side bar tags
 * @param {Set} activeFilterSet
 * @returns {Boolean} - Whether collection has an event filter
 */
var getUsingTimingFilter = function getUsingTimingFilter(activeFiltersSet) {
    return activeFiltersSet.has(_constants.EVENT_TIMING_IDS.LIVE) || activeFiltersSet.has(_constants.EVENT_TIMING_IDS.ONDEMAND) || activeFiltersSet.has(_constants.EVENT_TIMING_IDS.UPCOMING);
};

/**
 * Helper method to determine whether the card is within event timing
 * @param {Object} card
 * @param {Set} timing
 * @returns {Boolean} - whether the card falls within selected timing options
 */
var checkEventTiming = function checkEventTiming(card, timing) {
    var curMs = Date.now();
    // Times in milliseconds
    var startMs = (0, _eventSort.convertDateStrToMs)(card.startDate);
    var endMs = (0, _eventSort.convertDateStrToMs)(card.endDate);
    // Timed categories
    var isTimed = !!(startMs && endMs);
    var isUpComing = isTimed ? (0, _eventSort.defineIsUpcoming)(curMs, startMs) : false;
    var isOnDemand = isTimed && !isUpComing ? (0, _eventSort.defineIsOnDemand)(curMs, endMs) : false;
    var isLive = !!(isTimed && !isUpComing && !isOnDemand && startMs);

    // if you have timing filters active and there is no timing on the card it should be rejected
    if (!isTimed) return false;
    if (timing.has(_constants.EVENT_TIMING_IDS.UPCOMING) && isUpComing) return true;else if (timing.has(_constants.EVENT_TIMING_IDS.ONDEMAND) && isOnDemand) return true;else if (timing.has(_constants.EVENT_TIMING_IDS.LIVE) && isLive) return true;
    return false;
};

/**
 * Will return all cards that match a set of filters
 * @param {Array} cards - All cards in the collection
 * @param {Array} activeFilters - All filters selected by user
 * @param {Array} activePanels - Active filters panels selected by user
 * @param {String} filterType - Filter used in collection
 * @param {Object} filterTypes - All possible filters
 * @returns {Array} - All cards that match filter options
 */
// eslint-disable-next-line max-len
var getFilteredCards = exports.getFilteredCards = function getFilteredCards(cards, activeFilters, activePanels, filterType, filterTypes, categories) {
    var activeFiltersSet = new Set(activeFilters);
    var timingSet = (0, _general.intersection)(activeFiltersSet, new Set([_constants.EVENT_TIMING_IDS.LIVE, _constants.EVENT_TIMING_IDS.ONDEMAND, _constants.EVENT_TIMING_IDS.UPCOMING]));
    var usingXorAndFilter = getUsingXorAndFilter(filterType, filterTypes);
    var usingOrFilter = getUsingOrFilter(filterType, filterTypes);
    var usingTimingFilter = getUsingTimingFilter(activeFiltersSet);
    // remove the time elements from the active filter set before you actually filter
    timingSet.forEach(function (filter) {
        return activeFiltersSet.delete(filter);
    });

    var temp = [];
    var set = new Set();
    if (categories && categories.length) {
        for (var i = 0; i < cards.length; i++) {
            var card = cards[i];
            for (var j = 0; j < categories.length; j++) {
                var category = categories[j];
                for (var k = 0; k < card.tags.length; k++) {
                    var currTag = card.tags[k];
                    if (currTag.id.includes(category) && !set.has(card.id)) {
                        set.add(card.id);
                        temp.push(card);
                    }
                }
            }
        }
        /* eslint-disable-next-line no-param-reassign */
        cards = temp;
    }

    if (activeFiltersSet.size === 0 && !usingTimingFilter) return cards;

    return cards.filter(function (card) {
        if (!card.tags && !usingTimingFilter) {
            return false;
        } else if (usingTimingFilter && !checkEventTiming(card, timingSet)) {
            return false;
        } else if (usingTimingFilter && checkEventTiming(card, timingSet) && activeFiltersSet.size === 0) {
            // if the only filters being performed are about event timing
            return true;
        }
        // you proceed to check the other tags in the cards after the time filter checks
        var tagIds = new Set(card.tags.map(function (tag) {
            return tag.id;
        }));

        if (usingXorAndFilter) {
            return (0, _general.isSuperset)(tagIds, activeFiltersSet);
        } else if (usingOrFilter && activePanels.size < 2) {
            return (0, _general.intersection)(tagIds, activeFiltersSet).size;
        } else if (usingOrFilter) {
            // check if card' tags panels include all panels with selected filters
            var tagPanels = new Set(card.tags.map(function (tag) {
                return tag.id.replace(/\/.*$/, '');
            }));
            if (!(0, _general.isSuperset)(tagPanels, activePanels)) return false;

            // check if card' tags include all panels with selected filters
            var allPanelsMatch = true;
            // eslint-disable-next-line no-restricted-syntax

            var _loop = function _loop(panel) {
                var filtersCheckedInPanel = new Set([].concat(_toConsumableArray(activeFiltersSet)).filter(function (id) {
                    return id.includes(panel, 0);
                }));
                if (!(0, _general.intersection)(tagIds, filtersCheckedInPanel).size) {
                    allPanelsMatch = false;
                }
            };

            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = activePanels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var panel = _step.value;

                    _loop(panel);
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            return allPanelsMatch;
        }
        throw new Error('Unrecognized filter type: ' + filterType);
    });
};

/**
 * If a card matches a search query, this method will highlight it
 * @param {Array} baseCard - Card to highlight
 * @param {Array} searchField - Field that matches Query
 * @param {String} query - The users search query
 * @returns {Card} The highlighted caard
 */
var highlightCard = exports.highlightCard = function highlightCard(baseCard, searchField, query) {
    return (0, _immer2.default)(baseCard, function (draftCard) {
        var searchFieldValue = (0, _general.getByPath)(draftCard, searchField, null);
        if (searchFieldValue === null || searchFieldValue === '') return;
        var highlightedSearchFieldValue = (0, _rendering.HighlightSearchField)(searchFieldValue, query);
        // Write highlights to separate fields for title and description to avoid string coercion
        if (searchField === 'contentArea.title') {
            (0, _general.setByPath)(draftCard, 'contentArea.highlightedTitle', highlightedSearchFieldValue);
        } else if (searchField === 'contentArea.description') {
            (0, _general.setByPath)(draftCard, 'contentArea.highlightedDescription', highlightedSearchFieldValue);
        } else {
            (0, _general.setByPath)(draftCard, searchField, highlightedSearchFieldValue);
        }
    });
};

/**
 * If a card matches a search query, this method will highlight it
 * @param {Array} searchField - Field that matches Query
 * @param {Array} card - Card to check
 * @param {String} query - The users search query
 * @returns {Boolean} If the card matches the user's search query
 */
var cardMatchesQuery = function cardMatchesQuery(searchField, card, searchQuery) {
    var searchFieldValue = (0, _general.getByPath)(card, searchField, '');
    var cleanSearchFieldValue = (0, _general.sanitizeText)(searchFieldValue);
    return cleanSearchFieldValue.includes(searchQuery);
};

/**
 * Helper to implement Set() data structure w/ Vanilla Arrays
 * Would've used new Set(), but polyfill has bug in IE11 converting Array.from(new Set())
 *
 * @param {Array} cards
 * @return {Array} - Unique Card Set from Cards (filtering based off unique card ids)
 */
var getUniqueCardSet = function getUniqueCardSet(cards) {
    var uniqueCardSet = [];
    cards.forEach(function (card) {
        var cardNotInSet = uniqueCardSet.findIndex(function (element) {
            return element.id === card.id;
        }) <= -1;
        if (cardNotInSet) {
            uniqueCardSet.push(card);
        }
    });
    return uniqueCardSet;
};

/**
 * Gets all cards that matches a users search query
 * @param {Array} cards - All cards in the card collection
 * @param {Array} searchFields - All authored search fields to check
 * @param {String} query - The users search query
 * @returns {Array} - All cards that match the user's query for a given set of search fields
 */
var getCardsMatchingQuery = exports.getCardsMatchingQuery = function getCardsMatchingQuery(cards, searchFields, query) {
    var cardsMatchingQuery = [];
    cards.forEach(function (card) {
        searchFields.forEach(function (searchField) {
            if (cardMatchesQuery(searchField, card, query)) {
                cardsMatchingQuery.push(card);
            }
        });
    });
    return getUniqueCardSet(cardsMatchingQuery);
};
/**
 * @func hasTag
 * @desc Does current entity have a specific tag?
 * @param {RegExp} compare a regEx pattern to test for
 * @param {Array} tags an array of tags
 */
var hasTag = exports.hasTag = function hasTag(compare) {
    var tags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

    if (!tags.length || compare.constructor.name !== 'RegExp') return false;

    return tags.some(function () {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref$id = _ref.id,
            id = _ref$id === undefined ? '' : _ref$id;

        return id && compare.test(id);
    });
};

/**
 * Returns all cards title sorted (A-Z)
 * @param {Array} cards - All cards in the card collection
 * @returns {Array} - All cards sorted by title
 */
var getTitleAscSort = exports.getTitleAscSort = function getTitleAscSort(cards) {
    return cards.sort(function (cardOne, cardTwo) {
        var cardOneTitle = (0, _general.getByPath)(cardOne, 'contentArea.title');
        var cardTwoTitle = (0, _general.getByPath)(cardTwo, 'contentArea.title');
        return cardOneTitle.localeCompare(cardTwoTitle);
    });
};

/**
 * Returns all cards title sorted (Z-A)
 * @param {Array} cards - All cards in the card collection
 * @returns {Array} - All cards sorted by title
 */
var getTitleDescSort = exports.getTitleDescSort = function getTitleDescSort(cards) {
    return getTitleAscSort(cards).reverse();
};

/**
 * Returns all cards sorted by date modified newest to oldest
 * @param {Array} cards - All cards in the card collection
 * @returns {Array} - All cards sorted by title
 */
var getModifiedDescSort = exports.getModifiedDescSort = function getModifiedDescSort(cards) {
    return cards.sort(function (cardOne, cardTwo) {
        var cardOneModDate = (0, _general.getByPath)(cardOne, 'modifiedDate');
        var cardTwoModDate = (0, _general.getByPath)(cardTwo, 'modifiedDate');
        if (cardOneModDate && cardTwoModDate) {
            return cardTwoModDate.localeCompare(cardOneModDate);
        }
        return 0;
    });
};

/**
 * Returns all cards sorted by date modified oldest to newest
 * @param {Array} cards - All cards in the card collection
 * @returns {Array} - All cards sorted by title
 */
var getModifiedAscSort = exports.getModifiedAscSort = function getModifiedAscSort(cards) {
    return getModifiedDescSort(cards).reverse();
};

/**
 * Returns all cards Featured sorted
 * This just returns the original cards returned by Chimera IO
 * Chimera IO is responsible for handling featured sort
 * @param {Array} cards - All cards in the card collection
 * @returns {Array} - Cards in the original order given by Chimera IO
 */
var getFeaturedSort = exports.getFeaturedSort = function getFeaturedSort(cards) {
    return cards;
};

/**
 * Returns all Cards Date Sorted (Old To New)
 * @param {Array} cards - All cards in the card collection
 * @returns {Array} - All cards sorted by Date
 */
var getDateAscSort = exports.getDateAscSort = function getDateAscSort(cards) {
    return cards.sort(function (cardOne, cardTwo) {
        var cardOneDate = (0, _general.getByPath)(cardOne, 'cardDate');
        var cardTwoDate = (0, _general.getByPath)(cardTwo, 'cardDate');
        if (cardOneDate && cardTwoDate) {
            if (cardOneDate !== cardTwoDate) {
                return cardOneDate.localeCompare(cardTwoDate);
            }
            return (cardOne.id || '').localeCompare(cardTwo.id || '');
        }
        return 0;
    });
};

/**
 * Returns all Cards Date Sorted (New To Old)
 * @param {Array} cards - All cards in the card collection
 * @returns {Array} - All cards sorted by Date
 */
var getDateDescSort = exports.getDateDescSort = function getDateDescSort(cards) {
    return getDateAscSort(cards).reverse();
};

/**
 * Convert a path string like 'footer[0].left[1].startTime'
 * into an array of keys: ['footer','0','left','1','startTime'].
 */
function parsePathString(pathString) {
    if (pathString) {
        return pathString.replace(/\[(\d+)\]/g, '.$1').split('.');
    }
    return '';
}

/**
 * Safely get a nested property from an object
 * using a path string with dot/bracket notation.
 * e.g. safeGet(card, 'footer[0].left[1].startTime', '')
 */
function safeGet(obj, pathString, defaultVal) {
    var parts = parsePathString(pathString);
    var current = obj;

    for (var i = 0; i < parts.length; i++) {
        if (current == null || (typeof current === 'undefined' ? 'undefined' : _typeof(current)) !== 'object') {
            return defaultVal;
        }
        var key = parts[i];
        if (!(key in current)) {
            return defaultVal;
        }
        current = current[key];
    }

    return current == null ? defaultVal : current;
}

/**
 * @func getEventSort
 * @desc This method, if needed, sets up Timing features for a collection
 (1) Has to check each card for card.contentArea.dateDetailText.startTime
 || endTime, if neither the card gets pushed to back of stack.
 (2) There are six categories for consideration
 a. Live: Current Time > Start Time && Current Time < End Time
 b. Upcoming: Current Time < Start Time and does not have
 "OnDemand scheduled" tag which cannot show until it is onDemand
 c. "OnDemand scheduled": UpComing, and has "OnDemand scheduled" tag,
 will not be seen until it is OnDemand.
 d. OnDemand: Current Time > End Time, does not have "Live Expired" tag
 e. Live Expired: OnDemand, has "live-expired" tag, and is no longer shown.
 f. All other cards, not having startTime || endTime.
 * @param {Array} cards - All cards in the card collection
 * @param {Object} urlState - URL search/query Params.
 * @returns {Array} visibleCards
 */
var getEventSort = exports.getEventSort = function getEventSort() {
    var cards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var eventFilter = arguments[1];

    var transformedCards = cards.map(function (card) {
        return {
            id: card.id,
            startDate: safeGet(card, 'footer[0].left[1].startTime', safeGet(card, 'contentArea.dateDetailText.startTime', '')),
            endDate: safeGet(card, 'footer[0].left[1].endTime', safeGet(card, 'contentArea.dateDetailText.endTime', '')),
            tags: card.tags || [],
            cardDate: card.cardDate || '',
            contentArea: card.contentArea || {},
            createdDate: card.createdDate || '',
            ctaLink: card.ctaLink || '',
            description: card.description || '',
            footer: card.footer || [],
            initial: card.initial || {},
            isBookmarked: card.isBookmarked || false,
            modifiedDate: card.modifiedDate || '',
            overlayLink: card.overlayLink || '',
            overlays: card.overlays || {},
            showCard: card.showCard || {},
            search: card.search || {},
            styles: card.styles || {}
        };
    });

    var result = (0, _eventSort.eventTiming)(transformedCards, eventFilter);

    return {
        visibleSessions: result.visibleSessions,
        nextTransitionMs: result.nextTransitionMs
    };
};
/**
 * Gets all cards that matches a users search query
 * @param {String} query - The users search query
 * @param {Array} cards - All cards in the card collection
 * @param {Array} searchFields - All authored search fields to check
 * @returns {Array} - All cards that match the user's query for a given set of search fields
 */
var getCardsMatchingSearch = exports.getCardsMatchingSearch = function getCardsMatchingSearch(query, cards, searchFields) {
    if (!query) {
        return cards;
    }
    var searchQuery = (0, _general.sanitizeText)(query);
    var cardsMatchingQuery = getCardsMatchingQuery(cards, searchFields, searchQuery);
    return cardsMatchingQuery;
};

/**
 * Joins two sets of cards
 * @param {Array} cardSetOne - Set one of cards to join
 * @param {Array} cardSetTwo - Set two of cards to join
 * @returns {Array} - Cards sets one and two joined
 */
var joinCardSets = exports.joinCardSets = function joinCardSets(cardSetOne, cardSetTwo) {
    return cardSetOne.concat(cardSetTwo);
};

/**
 * Processes featured cards with raw cards received from API response
 * @param {Array} featuredCards - Authored Featured Cards
 * @param {Array} rawCards - Cards from API response
 * @returns {Array} - Set of cards processed
 */
var processCards = exports.processCards = function processCards(featuredCards, rawCards) {
    return (0, _general.removeDuplicatesByKey)(joinCardSets(featuredCards, rawCards), 'id');
};

/**
 * Helper method for effect that adds bookmark meta data to cards
 * @param {Array} cards - All cards in card collection
 * @param {Array} bookmarkedCardIds - All bookmarked card ids
 * @returns {Array} - Cards with bookmark meta data
 */
var getUpdatedCardBookmarkData = exports.getUpdatedCardBookmarkData = function getUpdatedCardBookmarkData(cards, bookmarkedCardIds) {
    return cards.map(function (card) {
        return _extends({}, card, {
            isBookmarked: bookmarkedCardIds.some(function (i) {
                return i === card.id;
            })
        });
    });
};

var cache = new Map();

/**
 * Returns a random number from [start, bound)
 * @param {int} start - Starting bound (inclusive)
 * @param {int} end - Ending bound (exclusive)
 * @returns {int} - A random integer between [start, bound)
 */
function getRandom(start, end) {
    return Math.floor(Math.random() * (end - start)) + start;
}

/**
 * Returns a random sample of sampleSize from an array stream
 * @param {Array} stream - An array of items to select a random sample from
 * @param {int} sampleSize - The size of the random sample
 * @returns {Array} - A random sample from the array stream
 */
function reservoirSample(stream, sampleSize) {
    var reservoir = [];
    /* eslint-disable-next-line no-restricted-syntax */
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
        for (var _iterator2 = Object.entries(stream)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var _ref2 = _step2.value;

            var _ref3 = _slicedToArray(_ref2, 2);

            var i = _ref3[0];
            var val = _ref3[1];

            if (reservoir.length < sampleSize) {
                reservoir.push(val);
            } else {
                var random = getRandom(0, i + 1);
                if (random < sampleSize) {
                    reservoir[random] = val;
                }
            }
        }
    } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
            }
        } finally {
            if (_didIteratorError2) {
                throw _iteratorError2;
            }
        }
    }

    return reservoir;
}

/**
 * Returns the input array randomly shuffled using the Fisher-Yates algorithm.
 *
 * @param {Array} arr - Array to be shuffled
 * @returns {Array} - The shuffled array
 */
function fischerYatesShuffle(arr) {
    var currentIndex = arr.length;
    var randomIndex = void 0;
    while (currentIndex !== 0) {
        randomIndex = getRandom(0, currentIndex);
        /* eslint-disable-next-line no-plusplus */
        currentIndex--;
        var _ref4 = [arr[randomIndex], arr[currentIndex]];
        arr[currentIndex] = _ref4[0];
        arr[randomIndex] = _ref4[1];
    }
    return arr;
}

/**
 * Returns an an array of randomly sorted cards.
 *
 * If the cards for a given card collection have already been sorted, return from cache.
 * Otherwise sort randomly and cache result.
 *
 * @param {Array} cards - cards to be randomly sorted
 * @param {int} id - Id of the card collection the cards belong to.
 * @param {int} sampleSize - sample size used for the random sample
 * @returns {Array} - An array of randomly sorted cards
 */
var getRandomSort = exports.getRandomSort = function getRandomSort(cards, id, sampleSize, reservoirSize) {
    if (!cache.get(id)) {
        var stream = fischerYatesShuffle(cards.slice(0, reservoirSize));
        var randomSample = reservoirSample(stream, sampleSize);
        cache.set(id, randomSample);
    }
    return cache.get(id);
};

var getFeaturedCards = exports.getFeaturedCards = function getFeaturedCards(ids, cards) {
    var ans = [];
    /* eslint-disable no-restricted-syntax */
    var _iteratorNormalCompletion3 = true;
    var _didIteratorError3 = false;
    var _iteratorError3 = undefined;

    try {
        for (var _iterator3 = ids[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var id = _step3.value;
            var _iteratorNormalCompletion4 = true;
            var _didIteratorError4 = false;
            var _iteratorError4 = undefined;

            try {
                for (var _iterator4 = cards[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                    var card = _step4.value;

                    if (card.id === id) {
                        var c = JSON.parse(JSON.stringify(card)); // Deep clone using JSON methods
                        c.isFeatured = true;
                        ans.push(c);
                    }
                }
            } catch (err) {
                _didIteratorError4 = true;
                _iteratorError4 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion4 && _iterator4.return) {
                        _iterator4.return();
                    }
                } finally {
                    if (_didIteratorError4) {
                        throw _iteratorError4;
                    }
                }
            }
        }
    } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion3 && _iterator3.return) {
                _iterator3.return();
            }
        } finally {
            if (_didIteratorError3) {
                throw _iteratorError3;
            }
        }
    }

    return ans;
};

/**
 * Returns an sanitized (html friendly) string
 *
 * If the string conatins '&amp;' it will be replaced with '&'
 * if the string contains '&lt;' it will be replaced with '<'
 * if the string contains '&gt;' it will be replaced with '>'
 *
 * @param {str} str - string to be sanitized
 * @returns {str} - satinized string
 */
var sanitizeStr = exports.sanitizeStr = function sanitizeStr(str) {
    return str.replaceAll('&amp;', '&').replaceAll('&lt;', '<').replaceAll('&gt;', '>');
};

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(12);
var createDesc = __webpack_require__(32);
module.exports = __webpack_require__(10) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 23 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(28);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(35);
var createDesc = __webpack_require__(32);
var toIObject = __webpack_require__(17);
var toPrimitive = __webpack_require__(31);
var has = __webpack_require__(23);
var IE8_DOM_DEFINE = __webpack_require__(68);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(10) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(9);
var hide = __webpack_require__(22);
var has = __webpack_require__(23);
var SRC = __webpack_require__(33)('src');
var $toString = __webpack_require__(119);
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(3).inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 29 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(71);
var enumBugKeys = __webpack_require__(53);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(8);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 33 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 34 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 35 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(29);
var TAG = __webpack_require__(4)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.bannerMapType = exports.cardType = exports.footerType = exports.overlaysType = exports.contentAreaType = exports.stylesType = exports.footerRightType = exports.footerCenterType = exports.footerLeftType = exports.tagsType = undefined;

var _propTypes = __webpack_require__(1);

var appliesToType = {
    id: _propTypes.string
};

var showCardType = {
    from: _propTypes.string,
    until: _propTypes.string
};

var tagsType = exports.tagsType = {
    id: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.number])
};
var searchType = {};

var footerLeftType = exports.footerLeftType = {
    src: _propTypes.string,
    type: _propTypes.string,
    term: _propTypes.string,
    text: _propTypes.string,
    label: _propTypes.string,
    price: _propTypes.string,
    color: _propTypes.string,
    linkHint: _propTypes.string,
    percentage: _propTypes.string,
    openInNewTab: _propTypes.bool,
    srcAltText: _propTypes.string,
    totalStars: _propTypes.number,
    starsFilled: _propTypes.number,
    saveCardIcon: _propTypes.string,
    cardSaveText: _propTypes.string,
    unsaveCardIcon: _propTypes.string,
    cardUnsaveText: _propTypes.string,
    completionText: _propTypes.string
};

var footerCenterType = exports.footerCenterType = {
    src: _propTypes.string,
    type: _propTypes.string,
    href: _propTypes.string,
    text: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.number])
};

var footerRightType = exports.footerRightType = {
    src: _propTypes.string,
    type: _propTypes.string,
    style: _propTypes.string,
    endTime: _propTypes.string,
    startTime: _propTypes.string,
    text: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.number])
};

var overlaysBannerType = {
    icon: _propTypes.string,
    fontColor: _propTypes.string,
    description: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array]),
    backgroundColor: _propTypes.string
};

var overlaysLogoType = {
    src: _propTypes.string,
    alt: _propTypes.string,
    borderColor: _propTypes.string,
    backgroundColor: _propTypes.string
};

var overlaysLabelType = {
    description: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array])
};

var overlaysVideoButtonType = {
    url: _propTypes.string
};

var stylesType = exports.stylesType = {
    typeOverride: _propTypes.string,
    backgroundImage: _propTypes.string
};

var contentAreaType = exports.contentAreaType = {
    detailText: _propTypes.string,
    title: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array]),
    description: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array]),
    dateDetailText: (0, _propTypes.shape)({
        endTime: _propTypes.string,
        startTime: _propTypes.string
    })
};

var overlaysType = exports.overlaysType = {
    logo: (0, _propTypes.shape)(overlaysLogoType),
    label: (0, _propTypes.shape)(overlaysLabelType),
    banner: (0, _propTypes.shape)(overlaysBannerType),
    videoButton: (0, _propTypes.shape)(overlaysVideoButtonType)
};

var footerType = exports.footerType = {
    divider: _propTypes.bool,
    isFluid: _propTypes.bool,
    left: (0, _propTypes.arrayOf)((0, _propTypes.shape)(footerLeftType)),
    right: (0, _propTypes.arrayOf)((0, _propTypes.shape)(footerRightType)),
    center: (0, _propTypes.arrayOf)((0, _propTypes.shape)(footerCenterType))
};

var cardType = exports.cardType = {
    id: _propTypes.string,
    title: _propTypes.string,
    cardDate: _propTypes.string,
    styles: (0, _propTypes.shape)(stylesType),
    search: (0, _propTypes.shape)(searchType),
    showCard: (0, _propTypes.shape)(showCardType),
    overlays: (0, _propTypes.shape)(overlaysType),
    tags: (0, _propTypes.arrayOf)((0, _propTypes.shape)(tagsType)),
    footer: (0, _propTypes.arrayOf)((0, _propTypes.shape)(footerType)),
    contentArea: (0, _propTypes.shape)(contentAreaType),
    appliesTo: (0, _propTypes.arrayOf)((0, _propTypes.shape)(appliesToType))
};

var bannerMapType = exports.bannerMapType = {
    live: (0, _propTypes.shape)({
        description: _propTypes.string,
        backgroundColor: _propTypes.string,
        fontColor: _propTypes.string,
        icon: _propTypes.string
    }),
    upcoming: (0, _propTypes.shape)({
        description: _propTypes.string,
        backgroundColor: _propTypes.string,
        fontColor: _propTypes.string,
        icon: _propTypes.string
    }),
    onDemand: (0, _propTypes.shape)({
        description: _propTypes.string,
        backgroundColor: _propTypes.string,
        fontColor: _propTypes.string,
        icon: _propTypes.string
    }),
    register: (0, _propTypes.shape)({
        description: _propTypes.string,
        backgroundColor: _propTypes.string,
        fontColor: _propTypes.string,
        icon: _propTypes.string
    })
};

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RenderTotalResults = exports.RenderDisplayMsg = exports.HighlightSearchField = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _cuid = __webpack_require__(66);

var _cuid2 = _interopRequireDefault(_cuid);

var _general = __webpack_require__(6);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Handles highlighting search results on search
 * @param {String} text - Search Text
 * @param {String} value - Values to highlight
 * @returns {String []} - HTML with text highlighting
 */
var HighlightSearchField = exports.HighlightSearchField = function HighlightSearchField(text, value) {
    var parts = (0, _general.removeMarkDown)(text).split(new RegExp('(' + value + ')', 'gi'));
    return parts.map(function (part) {
        return part.toLowerCase() === value ? _react2.default.createElement(
            'span',
            {
                'data-testid': 'consonant-SearchResult',
                className: 'consonant-SearchResult',
                key: (0, _cuid2.default)() },
            part
        ) : part;
    });
};

/**
 * Handles generating HTML for errors
 * @param {String} text - Error Text
 * @param {String} value - Values to modify
 * @returns {String []} - HTML to render users on page error
 */
var RenderDisplayMsg = exports.RenderDisplayMsg = function RenderDisplayMsg(text, value) {
    var arr = text.split(new RegExp('({query}|{break})', 'gi')).filter(function (item) {
        return item;
    });
    return arr.map(function (item) {
        switch (item.toLowerCase()) {
            case '{query}':
                return _react2.default.createElement(
                    'strong',
                    {
                        key: (0, _cuid2.default)() },
                    value
                );
            case '{break}':
                return _react2.default.createElement('br', {
                    key: (0, _cuid2.default)() });
            default:
                return _react2.default.createElement(
                    'span',
                    {
                        key: (0, _cuid2.default)() },
                    item
                );
        }
    });
};

/**
 * Handles generating HTML for total results text
 * @param {String} text - Text
 * @param {String} value - Values to modify
 * @returns {String []} - HTML to render total results text
 */
var RenderTotalResults = exports.RenderTotalResults = function RenderTotalResults(text, value) {
    var arr = text.split(new RegExp('({total})', 'gi')).filter(function (item) {
        return item;
    });
    return arr.map(function (item) {
        return item.toLowerCase() === '{total}' ? _react2.default.createElement(
            'strong',
            { key: (0, _cuid2.default)() },
            value
        ) : _react2.default.createElement(
            'span',
            { key: (0, _cuid2.default)() },
            item
        );
    });
};

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(3);
var global = __webpack_require__(9);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(27) ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 40 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(11);
var dPs = __webpack_require__(75);
var enumBugKeys = __webpack_require__(53);
var IE_PROTO = __webpack_require__(52)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(49)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(76).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(12).f;
var has = __webpack_require__(23);
var TAG = __webpack_require__(4)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(23);
var toObject = __webpack_require__(13);
var IE_PROTO = __webpack_require__(52)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(33)('meta');
var isObject = __webpack_require__(8);
var has = __webpack_require__(23);
var setDesc = __webpack_require__(12).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(15)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Forced replacement prototype accessors methods
module.exports = __webpack_require__(27) || !__webpack_require__(15)(function () {
  var K = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call
  __defineSetter__.call(null, K, function () { /* empty */ });
  delete __webpack_require__(9)[K];
});


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var classof = __webpack_require__(36);
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(184);
var redefine = __webpack_require__(26);
var hide = __webpack_require__(22);
var fails = __webpack_require__(15);
var defined = __webpack_require__(20);
var wks = __webpack_require__(4);
var regexpExec = __webpack_require__(61);

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var loadLana = exports.loadLana = function loadLana() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    if (window.lana) return;

    var lanaError = function lanaError(e) {
        if (window.lana && window.lana.logImpl) {
            window.lana.logImpl(e.reason || e.error || e.message, { errorType: 'i' });
        }
    };

    var lanaLoaded = false;

    window.lana = {
        logImpl: function logImpl() {
            var _console;

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            (_console = console).log.apply(_console, ['Lana not yet loaded, logging to console:'].concat(args));
        },
        log: function () {
            var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                var _window$lana;

                var _args = arguments;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (lanaLoaded) {
                                    _context.next = 12;
                                    break;
                                }

                                window.removeEventListener('error', lanaError);
                                window.removeEventListener('unhandledrejection', lanaError);
                                _context.prev = 3;
                                _context.next = 6;
                                return fetch('www.caas.com/libs/utils/lana.js');

                            case 6:
                                lanaLoaded = true;
                                _context.next = 12;
                                break;

                            case 9:
                                _context.prev = 9;
                                _context.t0 = _context['catch'](3);

                                console.error('Failed to load Lana:', _context.t0);

                            case 12:
                                return _context.abrupt('return', (_window$lana = window.lana).logImpl.apply(_window$lana, _args));

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, undefined, [[3, 9]]);
            }));

            function log() {
                return _ref.apply(this, arguments);
            }

            return log;
        }(),
        debug: false,
        options: options
    };
    window.addEventListener('error', lanaError);
    window.addEventListener('unhandledrejection', lanaError);
};

var logLana = exports.logLana = function logLana() {
    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        message = _ref2.message,
        tags = _ref2.tags,
        _ref2$e = _ref2.e,
        e = _ref2$e === undefined ? '' : _ref2$e,
        _ref2$sampleRate = _ref2.sampleRate,
        sampleRate = _ref2$sampleRate === undefined ? 1 : _ref2$sampleRate;

    var msg = message + ' | referer: ' + window.location.href + ' | ' + (e.reason || e.error || e.message || e);
    if (window.lana && typeof window.lana.log === 'function') {
        window.lana.log(msg, {
            clientId: 'chimera',
            sampleRate: sampleRate,
            tags: tags
        });
    }
};

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(8);
var document = __webpack_require__(9).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(29);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(4)('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(22)(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(39)('keys');
var uid = __webpack_require__(33);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 53 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 54 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(71);
var hiddenKeys = __webpack_require__(53).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(11);
var aFunction = __webpack_require__(28);
var SPECIES = __webpack_require__(4)('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(28);

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(9);
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__(11);
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var at = __webpack_require__(74)(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpFlags = __webpack_require__(59);

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

const { MinHeap } = __webpack_require__(214);
const { MaxHeap } = __webpack_require__(215);
const { CustomHeap } = __webpack_require__(216);

exports.MinHeap = MinHeap;
exports.MaxHeap = MaxHeap;
exports.CustomHeap = CustomHeap;


/***/ }),
/* 63 */
/***/ (function(module, exports) {

/**
 * @license MIT
 * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>
 *
 * @class
 * @abstract
 */
class Heap {
  /**
   * Creates a heap instance
   * @param {array<string|number|object>} nodes
   * @param {string|number|object} [leaf]
   * @returns {number}
   */
  constructor(nodes, leaf) {
    this._nodes = Array.isArray(nodes) ? nodes : [];
    this._leaf = leaf || null;
  }

  /**
   * Checks if a parent has a left child
   * @private
   * @param {number} parentIndex
   * @returns {boolean}
   */
  _hasLeftChild(parentIndex) {
    const leftChildIndex = (parentIndex * 2) + 1;
    return leftChildIndex < this.size();
  }

  /**
   * Checks if a parent has a right child
   * @private
   * @param {number} parentIndex
   * @returns {boolean}
   */
  _hasRightChild(parentIndex) {
    const rightChildIndex = (parentIndex * 2) + 2;
    return rightChildIndex < this.size();
  }

  /**
   * Returns heap node's key
   * @private
   * @param {object|number|string} node
   * @returns {number|string}
   */
  _getKey(node) {
    if (typeof node === 'object') return node.key;
    return node;
  }

  /**
   * Swaps two nodes in the heap
   * @private
   * @param {number} i
   * @param {number} j
   */
  _swap(i, j) {
    const temp = this._nodes[i];
    this._nodes[i] = this._nodes[j];
    this._nodes[j] = temp;
  }

  /**
   * Compares parent & child nodes
   * and returns true if they are in right positions
   *
   * @private
   * @param {object|number|string} parent
   * @param {object|number|string} child
   * @returns {boolean}
   */
  _compare(parentNode, childNode) {
    return this._compareKeys(
      this._getKey(parentNode),
      this._getKey(childNode)
    );
  }

  /**
   * Checks if parent and child nodes should be swapped
   * @private
   * @param {number} parentIndex
   * @param {number} childIndex
   * @returns {boolean}
   */
  _shouldSwap(parentIndex, childIndex) {
    if (parentIndex < 0 || parentIndex >= this.size()) return false;
    if (childIndex < 0 || childIndex >= this.size()) return false;

    return !this._compare(
      this._nodes[parentIndex],
      this._nodes[childIndex]
    );
  }

  /**
   * Bubbles a node from a starting index up in the heap
   * @param {number} startingIndex
   * @public
   */
  heapifyUp(startingIndex) {
    let childIndex = startingIndex;
    let parentIndex = Math.floor((childIndex - 1) / 2);

    while (this._shouldSwap(parentIndex, childIndex)) {
      this._swap(parentIndex, childIndex);
      childIndex = parentIndex;
      parentIndex = Math.floor((childIndex - 1) / 2);
    }
  }

  /**
   * Compares left and right & children of a parent
   * @private
   * @param {number} parentIndex
   * @returns {number} - a child's index
   */
  _compareChildrenOf(parentIndex) {
    if (
      !this._hasLeftChild(parentIndex)
      && !this._hasRightChild(parentIndex)
    ) {
      return -1;
    }

    const leftChildIndex = (parentIndex * 2) + 1;
    const rightChildIndex = (parentIndex * 2) + 2;

    if (!this._hasLeftChild(parentIndex)) {
      return rightChildIndex;
    }

    if (!this._hasRightChild(parentIndex)) {
      return leftChildIndex;
    }

    const isLeft = this._compare(
      this._nodes[leftChildIndex],
      this._nodes[rightChildIndex]
    );

    return isLeft ? leftChildIndex : rightChildIndex;
  }

  /**
   * Pushes a node from a starting index down in the heap
   * @private
   */
  _heapifyDown(startingIndex) {
    let parentIndex = startingIndex;
    let childIndex = this._compareChildrenOf(parentIndex);

    while (this._shouldSwap(parentIndex, childIndex)) {
      this._swap(parentIndex, childIndex);
      parentIndex = childIndex;
      childIndex = this._compareChildrenOf(parentIndex);
    }
  }

  /**
   * Removes and returns the root node in the heap
   * @public
   * @returns {object}
   */
  extractRoot() {
    if (this.isEmpty()) return null;

    const root = this.root();
    this._nodes[0] = this._nodes[this.size() - 1];
    this._nodes.pop();
    this._heapifyDown(0);

    if (root === this._leaf) {
      this._leaf = this.root();
    }

    return root;
  }

  /**
   * Pushes a node with down in the heap before an index
   * @private
   * @param {number} index
   */
  _heapifyDownUntil(index) {
    let parentIndex = 0;
    let leftChildIndex = 1;
    let rightChildIndex = 2;
    let childIndex;

    while (leftChildIndex < index) {
      childIndex = this._compareChildrenBefore(
        index,
        leftChildIndex,
        rightChildIndex
      );

      if (this._shouldSwap(parentIndex, childIndex)) {
        this._swap(parentIndex, childIndex);
      }

      parentIndex = childIndex;
      leftChildIndex = (parentIndex * 2) + 1;
      rightChildIndex = (parentIndex * 2) + 2;
    }
  }

  /**
   * Returns a shallow copy of the heap
   * @protected
   * @param {class} HeapType
   * @returns {Heap}
   */
  _clone(HeapType) {
    return new HeapType(this._nodes.slice(), this._leaf);
  }

  /**
   * Sorts the heap by swapping root with all nodes and fixing positions
   * @public
   * @returns {array} the sorted nodes
   */
  sort() {
    for (let i = this.size() - 1; i > 0; i -= 1) {
      this._swap(0, i);
      this._heapifyDownUntil(i);
    }

    return this._nodes;
  }

  /**
   * Inserts a node in the right position into the heap
   * @public
   * @param {number|string} key
   * @param {any} [value]
   * @returns {Heap}
   */
  insert(key, value) {
    const newNode = value !== undefined ? { key, value } : key;
    this._nodes.push(newNode);
    this.heapifyUp(this.size() - 1);
    if (this._leaf === null || !this._compare(newNode, this._leaf)) {
      this._leaf = newNode;
    }
    return this;
  }

  /**
   * Fixes all positions of the nodes in the heap
   * @public
   * @returns {Heap}
   */
  fix() {
    for (let i = 0; i < this.size(); i += 1) {
      this.heapifyUp(i);
    }
    return this;
  }

  /**
   * Verifies that the heap is valid
   * @public
   * @returns {boolean}
   */
  isValid() {
    const isValidRecursive = (parentIndex) => {
      let isValidLeft = true;
      let isValidRight = true;

      if (this._hasLeftChild(parentIndex)) {
        const leftChildIndex = (parentIndex * 2) + 1;
        isValidLeft = this._compare(
          this._nodes[parentIndex],
          this._nodes[leftChildIndex]
        );

        if (!isValidLeft) {
          return false;
        }

        isValidLeft = isValidRecursive(leftChildIndex);
      }

      if (this._hasRightChild(parentIndex)) {
        const rightChildIndex = (parentIndex * 2) + 2;
        isValidRight = this._compare(
          this._nodes[parentIndex],
          this._nodes[rightChildIndex]
        );

        if (!isValidRight) {
          return false;
        }

        isValidRight = isValidRecursive(rightChildIndex);
      }

      return isValidLeft && isValidRight;
    };

    return isValidRecursive(0);
  }

  /**
   * Returns the root node in the heap
   * @public
   * @returns {object|number|string|null}
   */
  root() {
    if (this.isEmpty()) return null;
    return this._nodes[0];
  }

  /**
   * Returns a leaf node in the heap
   * @public
   * @returns {object|number|string|null}
   */
  leaf() {
    return this._leaf;
  }

  /**
   * Returns the number of nodes in the heap
   * @public
   * @returns {number}
   */
  size() {
    return this._nodes.length;
  }

  /**
   * Checks if the heap is empty
   * @public
   * @returns {boolean}
   */
  isEmpty() {
    return this.size() === 0;
  }

  /**
   * Clears the heap
   * @public
   */
  clear() {
    this._nodes = [];
    this._leaf = null;
  }

  /**
   * Convert a list of items into a heap
   * @protected
   * @static
   * @param {array} array
   * @param {class} HeapType
   * @returns {Heap}
   */
  static _heapify(list, HeapType) {
    if (!Array.isArray(list)) {
      throw new Error('.heapify expects an array');
    }

    return new HeapType(list).fix();
  }

  /**
   * Checks if a list of items is a valid heap
   * @protected
   * @static
   * @param {array} array
   * @param {class} HeapType
   * @returns {boolean}
   */
  static _isHeapified(list, HeapType) {
    return new HeapType(list).isValid();
  }
}

exports.Heap = Heap;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>
 * @license MIT
 */

const { CustomHeap } = __webpack_require__(62);

/**
 * @class PriorityQueue
 */
class PriorityQueue {
  /**
   * Creates a priority queue
   * @public
   * @params {object} [options]
   */
  constructor(options = {}) {
    const { priority, compare } = options;
    if (compare) {
      if (typeof compare !== 'function') {
        throw new Error('.constructor expects a valid compare function');
      }
      this._compare = compare;
      this._heap = new CustomHeap(this._compare);
    } else {
      if (priority !== undefined && typeof priority !== 'function') {
        throw new Error('.constructor expects a valid priority function');
      }

      this._priority = priority || ((el) => +el);
    }
  }

  /**
   * @private
   * @returns {object}
   */
  _getElementWithPriority(node) {
    return {
      priority: node.key,
      element: node.value
    };
  }

  /**
   * @public
   * @returns {number}
   */
  size() {
    return this._heap.size();
  }

  /**
   * @public
   * @returns {boolean}
   */
  isEmpty() {
    return this._heap.isEmpty();
  }

  /**
   * Returns an element with highest priority in the queue
   * @public
   * @returns {object}
   */
  front() {
    if (this.isEmpty()) return null;

    if (this._compare) {
      return this._heap.root();
    }

    return this._getElementWithPriority(this._heap.root());
  }

  /**
   * Returns an element with lowest priority in the queue
   * @public
   * @returns {object}
   */
  back() {
    if (this.isEmpty()) return null;

    if (this._compare) {
      return this._heap.leaf();
    }

    return this._getElementWithPriority(this._heap.leaf());
  }

  /**
   * Adds an element to the queue
   * @public
   * @param {any} element
   * @param {number} p - priority
   * @throws {Error} if priority is not a valid number
   */
  enqueue(element, p) {
    if (this._compare) {
      this._heap.insert(element);
      return this;
    }

    if (p && Number.isNaN(+p)) {
      throw new Error('.enqueue expects a numeric priority');
    }

    if (Number.isNaN(+p) && Number.isNaN(this._priority(element))) {
      throw new Error(
        '.enqueue expects a numeric priority '
        + 'or a constructor callback that returns a number'
      );
    }

    const priority = !Number.isNaN(+p) ? p : this._priority(element);
    this._heap.insert(+priority, element);
    return this;
  }

  /**
   * Removes and returns an element with highest priority in the queue
   * @public
   * @returns {object}
   */
  dequeue() {
    if (this.isEmpty()) return null;

    if (this._compare) {
      return this._heap.extractRoot();
    }

    return this._getElementWithPriority(this._heap.extractRoot());
  }

  /**
   * Returns a sorted list of elements from highest to lowest priority
   * @public
   * @returns {array}
   */
  toArray() {
    if (this._compare) {
      return this._heap.clone().sort().reverse();
    }

    return this._heap
      .clone()
      .sort()
      .map((n) => this._getElementWithPriority(n))
      .reverse();
  }

  /**
   * Clears the queue
   * @public
   */
  clear() {
    this._heap.clear();
  }
}

exports.PriorityQueue = PriorityQueue;


/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElementType", function() { return ElementType; });
/* harmony export (immutable) */ __webpack_exports__["isTag"] = isTag;
/** Types of elements found in htmlparser2's DOM */
var ElementType;
(function (ElementType) {
    /** Type for the root element of a document */
    ElementType["Root"] = "root";
    /** Type for Text */
    ElementType["Text"] = "text";
    /** Type for <? ... ?> */
    ElementType["Directive"] = "directive";
    /** Type for <!-- ... --> */
    ElementType["Comment"] = "comment";
    /** Type for <script> tags */
    ElementType["Script"] = "script";
    /** Type for <style> tags */
    ElementType["Style"] = "style";
    /** Type for Any tag */
    ElementType["Tag"] = "tag";
    /** Type for <![CDATA[ ... ]]> */
    ElementType["CDATA"] = "cdata";
    /** Type for <!doctype ...> */
    ElementType["Doctype"] = "doctype";
})(ElementType || (ElementType = {}));
/**
 * Tests whether an element is a tag or not.
 *
 * @param elem Element to test
 */
function isTag(elem) {
    return (elem.type === ElementType.Tag ||
        elem.type === ElementType.Script ||
        elem.type === ElementType.Style);
}
// Exports for backwards compatibility
/** Type for the root element of a document */
const Root = ElementType.Root;
/* harmony export (immutable) */ __webpack_exports__["Root"] = Root;

/** Type for Text */
const Text = ElementType.Text;
/* harmony export (immutable) */ __webpack_exports__["Text"] = Text;

/** Type for <? ... ?> */
const Directive = ElementType.Directive;
/* harmony export (immutable) */ __webpack_exports__["Directive"] = Directive;

/** Type for <!-- ... --> */
const Comment = ElementType.Comment;
/* harmony export (immutable) */ __webpack_exports__["Comment"] = Comment;

/** Type for <script> tags */
const Script = ElementType.Script;
/* harmony export (immutable) */ __webpack_exports__["Script"] = Script;

/** Type for <style> tags */
const Style = ElementType.Style;
/* harmony export (immutable) */ __webpack_exports__["Style"] = Style;

/** Type for Any tag */
const Tag = ElementType.Tag;
/* harmony export (immutable) */ __webpack_exports__["Tag"] = Tag;

/** Type for <![CDATA[ ... ]]> */
const CDATA = ElementType.CDATA;
/* harmony export (immutable) */ __webpack_exports__["CDATA"] = CDATA;

/** Type for <!doctype ...> */
const Doctype = ElementType.Doctype;
/* harmony export (immutable) */ __webpack_exports__["Doctype"] = Doctype;



/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * cuid.js
 * Collision-resistant UID generator for browsers and node.
 * Sequential for fast db lookups and recency sorting.
 * Safe for element IDs and server-side lookups.
 *
 * Extracted from CLCTR
 *
 * Copyright (c) Eric Elliott 2012
 * MIT License
 */

var fingerprint = __webpack_require__(241);
var pad = __webpack_require__(111);
var getRandomValue = __webpack_require__(242);

var c = 0,
  blockSize = 4,
  base = 36,
  discreteValues = Math.pow(base, blockSize);

function randomBlock () {
  return pad((getRandomValue() *
    discreteValues << 0)
    .toString(base), blockSize);
}

function safeCounter () {
  c = c < discreteValues ? c : 0;
  c++; // this is not subliminal
  return c - 1;
}

function cuid () {
  // Starting with a lowercase letter makes
  // it HTML element ID friendly.
  var letter = 'c', // hard-coded allows for sequential access

    // timestamp
    // warning: this exposes the exact date and time
    // that the uid was created.
    timestamp = (new Date().getTime()).toString(base),

    // Prevent same-machine collisions.
    counter = pad(safeCounter().toString(base), blockSize),

    // A few chars to generate distinct ids for different
    // clients (so different computers are far less
    // likely to generate the same id)
    print = fingerprint(),

    // Grab some more chars from Math.random()
    random = randomBlock() + randomBlock();

  return letter + timestamp + counter + print + random;
}

cuid.slug = function slug () {
  var date = new Date().getTime().toString(36),
    counter = safeCounter().toString(36).slice(-4),
    print = fingerprint().slice(0, 1) +
      fingerprint().slice(-1),
    random = randomBlock().slice(-2);

  return date.slice(-2) +
    counter + print + random;
};

cuid.isCuid = function isCuid (stringToCheck) {
  if (typeof stringToCheck !== 'string') return false;
  if (stringToCheck.startsWith('c')) return true;
  return false;
};

cuid.isSlug = function isSlug (stringToCheck) {
  if (typeof stringToCheck !== 'string') return false;
  var stringLength = stringToCheck.length;
  if (stringLength >= 7 && stringLength <= 10) return true;
  return false;
};

cuid.fingerprint = fingerprint;

module.exports = cuid;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isAuthor = isAuthor;
exports.isEditor = isEditor;
function isAuthor() {
    return typeof window.Granite !== 'undefined';
}

function isEditor() {
    // This is wrapped in a try block to catch a DOMException that can be thrown
    // if the page is loaded in a cross domain iframe.
    try {
        return window.parent.location.href.indexOf('/editor.html/') >= 0;
    } catch (e) {
        return false;
    }
}

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(10) && !__webpack_require__(15)(function () {
  return Object.defineProperty(__webpack_require__(49)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(17);
var toLength = __webpack_require__(18);
var toAbsoluteIndex = __webpack_require__(120);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(2);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(122) });


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(23);
var toIObject = __webpack_require__(17);
var arrayIndexOf = __webpack_require__(69)(false);
var IE_PROTO = __webpack_require__(52)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(24);
var IObject = __webpack_require__(50);
var toObject = __webpack_require__(13);
var toLength = __webpack_require__(18);
var asc = __webpack_require__(125);
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(29);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(34);
var defined = __webpack_require__(20);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(12);
var anObject = __webpack_require__(11);
var getKeys = __webpack_require__(30);

module.exports = __webpack_require__(10) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(9).document;
module.exports = document && document.documentElement;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(11);
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(54);
var ITERATOR = __webpack_require__(4)('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(12);
var createDesc = __webpack_require__(32);

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(36);
var ITERATOR = __webpack_require__(4)('iterator');
var Iterators = __webpack_require__(54);
module.exports = __webpack_require__(3).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(4)('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(2);
var $entries = __webpack_require__(83)(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(10);
var getKeys = __webpack_require__(30);
var toIObject = __webpack_require__(17);
var isEnum = __webpack_require__(35).f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || isEnum.call(O, key)) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(2);
var $values = __webpack_require__(83)(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.10 Object.is(value1, value2)
var $export = __webpack_require__(2);
$export($export.S, 'Object', { is: __webpack_require__(86) });


/***/ }),
/* 86 */
/***/ (function(module, exports) {

// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(4);


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(17);
var gOPN = __webpack_require__(55).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

// all object keys, includes non-enumerable and symbols
var gOPN = __webpack_require__(55);
var gOPS = __webpack_require__(40);
var anObject = __webpack_require__(11);
var Reflect = __webpack_require__(9).Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(12);
var gOPD = __webpack_require__(25);
var ownKeys = __webpack_require__(89);
var toIObject = __webpack_require__(17);

module.exports = function define(target, mixin) {
  var keys = ownKeys(toIObject(mixin));
  var length = keys.length;
  var i = 0;
  var key;
  while (length > i) dP.f(target, key = keys[i++], gOPD.f(mixin, key));
  return target;
};


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__(8);
var cof = __webpack_require__(29);
var MATCH = __webpack_require__(4)('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(27);
var global = __webpack_require__(9);
var ctx = __webpack_require__(24);
var classof = __webpack_require__(36);
var $export = __webpack_require__(2);
var isObject = __webpack_require__(8);
var aFunction = __webpack_require__(28);
var anInstance = __webpack_require__(171);
var forOf = __webpack_require__(172);
var speciesConstructor = __webpack_require__(56);
var task = __webpack_require__(93).set;
var microtask = __webpack_require__(174)();
var newPromiseCapabilityModule = __webpack_require__(57);
var perform = __webpack_require__(94);
var userAgent = __webpack_require__(58);
var promiseResolve = __webpack_require__(95);
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(4)('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(175)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(42)($Promise, PROMISE);
__webpack_require__(176)(PROMISE);
Wrapper = __webpack_require__(3)[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(81)(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(24);
var invoke = __webpack_require__(173);
var html = __webpack_require__(76);
var cel = __webpack_require__(49);
var global = __webpack_require__(9);
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(29)(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),
/* 94 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(11);
var isObject = __webpack_require__(8);
var newPromiseCapability = __webpack_require__(57);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__(18);
var repeat = __webpack_require__(193);
var defined = __webpack_require__(20);

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(2);
var defined = __webpack_require__(20);
var fails = __webpack_require__(15);
var spaces = __webpack_require__(198);
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 *
 *
 * @author Jerry Bendy <jerry@icewingcc.com>
 * @licence MIT
 *
 */

(function(self) {
    'use strict';

    var nativeURLSearchParams = self.URLSearchParams ? self.URLSearchParams : null,
        isSupportObjectConstructor = nativeURLSearchParams && (new nativeURLSearchParams({a: 1})).toString() === 'a=1',
        // There is a bug in safari 10.1 (and earlier) that incorrectly decodes `%2B` as an empty space and not a plus.
        decodesPlusesCorrectly = nativeURLSearchParams && (new nativeURLSearchParams('s=%2B').get('s') === '+'),
        __URLSearchParams__ = "__URLSearchParams__",
        prototype = URLSearchParamsPolyfill.prototype,
        iterable = !!(self.Symbol && self.Symbol.iterator);

    if (nativeURLSearchParams && isSupportObjectConstructor && decodesPlusesCorrectly) {
        return;
    }


    /**
     * Make a URLSearchParams instance
     *
     * @param {object|string|URLSearchParams} search
     * @constructor
     */
    function URLSearchParamsPolyfill(search) {
        search = search || "";

        // support construct object with another URLSearchParams instance
        if (search instanceof URLSearchParams || search instanceof URLSearchParamsPolyfill) {
            search = search.toString();
        }
        this [__URLSearchParams__] = parseToDict(search);
    }


    /**
     * Appends a specified key/value pair as a new search parameter.
     *
     * @param {string} name
     * @param {string} value
     */
    prototype.append = function(name, value) {
        appendTo(this [__URLSearchParams__], name, value);
    };

    /**
     * Deletes the given search parameter, and its associated value,
     * from the list of all search parameters.
     *
     * @param {string} name
     */
    prototype.delete = function(name) {
        delete this [__URLSearchParams__] [name];
    };

    /**
     * Returns the first value associated to the given search parameter.
     *
     * @param {string} name
     * @returns {string|null}
     */
    prototype.get = function(name) {
        var dict = this [__URLSearchParams__];
        return name in dict ? dict[name][0] : null;
    };

    /**
     * Returns all the values association with a given search parameter.
     *
     * @param {string} name
     * @returns {Array}
     */
    prototype.getAll = function(name) {
        var dict = this [__URLSearchParams__];
        return name in dict ? dict [name].slice(0) : [];
    };

    /**
     * Returns a Boolean indicating if such a search parameter exists.
     *
     * @param {string} name
     * @returns {boolean}
     */
    prototype.has = function(name) {
        return name in this [__URLSearchParams__];
    };

    /**
     * Sets the value associated to a given search parameter to
     * the given value. If there were several values, delete the
     * others.
     *
     * @param {string} name
     * @param {string} value
     */
    prototype.set = function set(name, value) {
        this [__URLSearchParams__][name] = ['' + value];
    };

    /**
     * Returns a string containg a query string suitable for use in a URL.
     *
     * @returns {string}
     */
    prototype.toString = function() {
        var dict = this[__URLSearchParams__], query = [], i, key, name, value;
        for (key in dict) {
            name = encode(key);
            for (i = 0, value = dict[key]; i < value.length; i++) {
                query.push(name + '=' + encode(value[i]));
            }
        }
        return query.join('&');
    };

    // There is a bug in Safari 10.1 and `Proxy`ing it is not enough.
    var forSureUsePolyfill = !decodesPlusesCorrectly;
    var useProxy = (!forSureUsePolyfill && nativeURLSearchParams && !isSupportObjectConstructor && self.Proxy)
    /*
     * Apply polifill to global object and append other prototype into it
     */
    self.URLSearchParams = useProxy ?
        // Safari 10.0 doesn't support Proxy, so it won't extend URLSearchParams on safari 10.0
        new Proxy(nativeURLSearchParams, {
            construct: function(target, args) {
                return new target((new URLSearchParamsPolyfill(args[0]).toString()));
            }
        }) :
        URLSearchParamsPolyfill;


    var USPProto = self.URLSearchParams.prototype;

    USPProto.polyfill = true;

    /**
     *
     * @param {function} callback
     * @param {object} thisArg
     */
    USPProto.forEach = USPProto.forEach || function(callback, thisArg) {
        var dict = parseToDict(this.toString());
        Object.getOwnPropertyNames(dict).forEach(function(name) {
            dict[name].forEach(function(value) {
                callback.call(thisArg, value, name, this);
            }, this);
        }, this);
    };

    /**
     * Sort all name-value pairs
     */
    USPProto.sort = USPProto.sort || function() {
        var dict = parseToDict(this.toString()), keys = [], k, i, j;
        for (k in dict) {
            keys.push(k);
        }
        keys.sort();

        for (i = 0; i < keys.length; i++) {
            this.delete(keys[i]);
        }
        for (i = 0; i < keys.length; i++) {
            var key = keys[i], values = dict[key];
            for (j = 0; j < values.length; j++) {
                this.append(key, values[j]);
            }
        }
    };

    /**
     * Returns an iterator allowing to go through all keys of
     * the key/value pairs contained in this object.
     *
     * @returns {function}
     */
    USPProto.keys = USPProto.keys || function() {
        var items = [];
        this.forEach(function(item, name) {
            items.push(name);
        });
        return makeIterator(items);
    };

    /**
     * Returns an iterator allowing to go through all values of
     * the key/value pairs contained in this object.
     *
     * @returns {function}
     */
    USPProto.values = USPProto.values || function() {
        var items = [];
        this.forEach(function(item) {
            items.push(item);
        });
        return makeIterator(items);
    };

    /**
     * Returns an iterator allowing to go through all key/value
     * pairs contained in this object.
     *
     * @returns {function}
     */
    USPProto.entries = USPProto.entries || function() {
        var items = [];
        this.forEach(function(item, name) {
            items.push([name, item]);
        });
        return makeIterator(items);
    };


    if (iterable) {
        USPProto[self.Symbol.iterator] = USPProto[self.Symbol.iterator] || USPProto.entries;
    }


    function encode(str) {
        var replace = {
            '!': '%21',
            "'": '%27',
            '(': '%28',
            ')': '%29',
            '~': '%7E',
            '%20': '+',
            '%00': '\x00'
        };
        return encodeURIComponent(str).replace(/[!'\(\)~]|%20|%00/g, function(match) {
            return replace[match];
        });
    }

    function decode(str) {
        return decodeURIComponent(str.replace(/\+/g, ' '));
    }

    function makeIterator(arr) {
        var iterator = {
            next: function() {
                var value = arr.shift();
                return {done: value === undefined, value: value};
            }
        };

        if (iterable) {
            iterator[self.Symbol.iterator] = function() {
                return iterator;
            };
        }

        return iterator;
    }

    function parseToDict(search) {
        var dict = {};

        if (typeof search === "object") {
            for (var key in search) {
                if (search.hasOwnProperty(key)) {
                    appendTo(dict, key, search[key])
                }
            }

        } else {
            // remove first '?'
            if (search.indexOf("?") === 0) {
                search = search.slice(1);
            }

            var pairs = search.split("&");
            for (var j = 0; j < pairs.length; j++) {
                var value = pairs [j],
                    index = value.indexOf('=');

                if (-1 < index) {
                    appendTo(dict, decode(value.slice(0, index)), decode(value.slice(index + 1)));

                } else {
                    if (value) {
                        appendTo(dict, decode(value), '');
                    }
                }
            }
        }

        return dict;
    }

    function appendTo(dict, name, value) {
        var val = typeof value === 'string' ? value : (
            value !== null && value !== undefined && typeof value.toString === 'function' ? value.toString() : JSON.stringify(value)
        )

        if (name in dict) {
            dict[name].push(val);
        } else {
            dict[name] = [val];
        }
    }

})(typeof global !== 'undefined' ? global : (typeof window !== 'undefined' ? window : this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(99)))

/***/ }),
/* 99 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (false) {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(206);
} else {
  module.exports = require('./cjs/react-dom.development.js');
}


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "DOMModel", {
  enumerable: true,
  get: function get() {
    return _DOMModel.default;
  }
});
Object.defineProperty(exports, "DOMRegistry", {
  enumerable: true,
  get: function get() {
    return _DOMRegistry.default;
  }
});
Object.defineProperty(exports, "createRDC", {
  enumerable: true,
  get: function get() {
    return _createRDC.default;
  }
});

var _DOMModel = _interopRequireDefault(__webpack_require__(209));

var _DOMRegistry = _interopRequireDefault(__webpack_require__(210));

var _createRDC = _interopRequireDefault(__webpack_require__(211));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

__webpack_require__(220);

var _lana = __webpack_require__(48);

var _Popup = __webpack_require__(221);

var _Popup2 = _interopRequireDefault(_Popup);

var _Search = __webpack_require__(222);

var _Search2 = _interopRequireDefault(_Search);

var _Loader = __webpack_require__(223);

var _Loader2 = _interopRequireDefault(_Loader);

var _general = __webpack_require__(6);

var _config = __webpack_require__(19);

var _CardsCarousel = __webpack_require__(224);

var _CardsCarousel2 = _interopRequireDefault(_CardsCarousel);

var _View = __webpack_require__(276);

var _View2 = _interopRequireDefault(_View);

var _LoadMore = __webpack_require__(277);

var _LoadMore2 = _interopRequireDefault(_LoadMore);

var _Bookmarks = __webpack_require__(278);

var _Bookmarks2 = _interopRequireDefault(_Bookmarks);

var _Paginator = __webpack_require__(279);

var _Paginator2 = _interopRequireDefault(_Paginator);

var _Grid = __webpack_require__(106);

var _Grid2 = _interopRequireDefault(_Grid);

var _CardFilterer = __webpack_require__(280);

var _CardFilterer2 = _interopRequireDefault(_CardFilterer);

var _Panel = __webpack_require__(282);

var _Panel2 = _interopRequireDefault(_Panel);

var _Panel3 = __webpack_require__(287);

var _Panel4 = _interopRequireDefault(_Panel3);

var _JsonProcessor = __webpack_require__(297);

var _JsonProcessor2 = _interopRequireDefault(_JsonProcessor);

var _hooks = __webpack_require__(5);

var _Info = __webpack_require__(298);

var _constants = __webpack_require__(14);

var _contexts = __webpack_require__(105);

var _consonant = __webpack_require__(104);

var _Helpers = __webpack_require__(21);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Consonant Card Collection
 * Config is implicitly populated by authors
 *
 * @component
 * @example
 * const config = {
    collection: {},
    featuredCards: [{}],
    filterPanel: {},
    hideCtaIds: [{}],
    hideCtaTags: [{}],
    sort: {},
    pagination: {},
    bookmarks: {},
    search: {},
    language: ''
 * }
 * return (
 *   <Container config={config}/>
 * )
 */
var Container = function Container(props) {
    var config = props.config;

    var getConfig = (0, _consonant.makeConfigGetter)(config);
    var filterGroupPrefix = 'ch_';
    var searchPrefix = 'sh_';
    var CARD_HASH_LENGTH = 10;
    var BODY = document.body;

    /**
     **** Authored Configs ****
     */
    var filterPanelEnabled = getConfig('filterPanel', 'enabled');
    var filterPanelType = getConfig('filterPanel', 'type');
    var paginationType = getConfig('pagination', 'type');
    var paginationIsEnabled = getConfig('pagination', 'enabled');
    var resultsPerPage = getConfig('collection', 'resultsPerPage');
    var onlyShowBookmarks = getConfig('bookmarks', 'leftFilterPanel.bookmarkOnlyCollection');
    var authoredFilters = getConfig('filterPanel', 'filters');
    var filterLogic = getConfig('filterPanel', 'filterLogic').toLowerCase().trim();
    var totalCardLimit = getConfig('collection', 'totalCardsToShow');
    var sampleSize = getConfig('collection', 'reservoir.sample');
    var reservoirSize = getConfig('collection', 'reservoir.pool');
    var searchFields = getConfig('search', 'searchFields');
    var sortOptions = getConfig('sort', 'options');
    var defaultSort = getConfig('sort', 'defaultSort');
    var defaultSortOption = (0, _consonant.getDefaultSortOption)(config, defaultSort);
    var featuredCards = getConfig('featuredCards', '').toString().replace(/\[|\]/g, '').replace(/`/g, '').split(',');
    // eslint-disable-next-line no-use-before-define,max-len
    featuredCards = featuredCards.concat(featuredCards.map(function (id) {
        return rollingHash(id, CARD_HASH_LENGTH);
    }));
    var hideCtaIds = getConfig('hideCtaIds', '').toString().replace(/\[|\]/g, '').replace(/`/g, '').split(',');
    // eslint-disable-next-line no-use-before-define
    hideCtaIds = hideCtaIds.concat(hideCtaIds.map(function (id) {
        return rollingHash(id, CARD_HASH_LENGTH);
    }));
    var hideCtaTags = getConfig('hideCtaTags', '').toString().replace(/\[|\]/g, '').replace(/`/g, '').split(',');
    var leftPanelSearchPlaceholder = getConfig('search', 'i18n.leftFilterPanel.searchPlaceholderText');
    var topPanelSearchPlaceholder = getConfig('search', 'i18n.topFilterPanel.searchPlaceholderText');
    var searchPlaceholderText = getConfig('search', 'i18n.filterInfo.searchPlaceholderText');
    var noResultsTitle = getConfig('search', 'i18n.noResultsTitle');
    var noResultsDescription = getConfig('search', 'i18n.noResultsDescription');
    var apiFailureTitle = getConfig('collection', 'i18n.onErrorTitle');
    var apiFailureDescription = getConfig('collection', 'i18n.onErrorDescription');
    var isLazy = getConfig('collection', 'lazyload');
    var trackImpressions = getConfig('analytics', 'trackImpressions');
    var collectionIdentifier = getConfig('analytics', 'collectionIdentifier');
    var targetEnabled = getConfig('target', 'enabled');
    var useLastViewedSession = getConfig('target', 'lastViewedSession');
    var authoredMode = getConfig('collection', 'mode');
    var authoredLayoutContainer = getConfig('collection', 'layout.container');
    var showEmptyFilters = getConfig('filterPanel', 'showEmptyFilters');
    var eventFilter = getConfig('filterPanel', 'eventFilter');
    var searchEnabled = getConfig('search', 'enabled');
    var sortEnabled = getConfig('sort', 'enabled');
    var cardStyle = getConfig('collection', 'cardStyle');
    var title = getConfig('collection', 'i18n.title');
    var headers = getConfig('headers', '');
    var partialLoadWithBackgroundFetch = getConfig('collection', 'partialLoadWithBackgroundFetch.enabled');
    var partialLoadCount = getConfig('collection', 'partialLoadWithBackgroundFetch.partialLoadCount');
    var renderOverlay = getConfig('collection', 'useOverlayLinks');

    /**
     **** Constants ****
     */
    var DESKTOP_SCREEN_SIZE = window.innerWidth >= _constants.DESKTOP_MIN_WIDTH;
    var isXorFilter = filterLogic.toLowerCase().trim() === _constants.FILTER_TYPES.XOR;
    var isCarouselContainer = authoredLayoutContainer === _constants.LAYOUT_CONTAINER.CAROUSEL;
    var isStandardContainer = authoredLayoutContainer !== _constants.LAYOUT_CONTAINER.CAROUSEL;
    var isCategoriesContainer = authoredLayoutContainer === _constants.LAYOUT_CONTAINER.CATEGORIES;

    // eslint-disable-next-line no-use-before-define
    var categories = getConfig('filterPanel', 'categories');
    // eslint-disable-next-line no-use-before-define, max-len
    var authoredCategories = isCategoriesContainer ? getAuthoredCategories(authoredFilters, categories) : [];
    var sanitizedEventFilter = eventFilter ? (0, _general.sanitizeEventFilter)(eventFilter) : [];

    /**
     **** Hooks ****
     */
    /**
     * @typedef {Array} timedCollection - result of Timed Event Sort
     * @description — As an alternative/iteration on filtered cards for timed
     * collections
     * @typedef {Function} setTimedCollection
     * @description - Sets timedCollection after setTimeout triggers
     *
     * @type {[Array, Function]} timedCollection
     */
    /* eslint-disable no-unused-vars */

    var _useState = (0, _react.useState)([]),
        _useState2 = _slicedToArray(_useState, 2),
        timedCollection = _useState2[0],
        setTimedCollection = _useState2[1];
    /**
     * @typedef {Number} transition - MS to next transition
     * @description —  set by eventSort, from cardFilteret.nextTransitionMs
     * @typedef {Function} setTransition
     * @description - next Transition trigger
     *
     * @type {[Number, Function]} transition
     */
    /* eslint-disable no-unused-vars */


    var _useState3 = (0, _react.useState)(0),
        _useState4 = _slicedToArray(_useState3, 2),
        transition = _useState4[0],
        setTransition = _useState4[1];

    var _useState5 = (0, _react.useState)(0),
        _useState6 = _slicedToArray(_useState5, 2),
        cardCount = _useState6[0],
        setCardCount = _useState6[1];

    var _useState7 = (0, _react.useState)(false),
        _useState8 = _slicedToArray(_useState7, 2),
        isPartialLoad = _useState8[0],
        setIsPartialLoad = _useState8[1];

    var hashedRef = (0, _react.useRef)(false);

    var _React$useState = _react2.default.useState(),
        _React$useState2 = _slicedToArray(_React$useState, 2),
        updateState = _React$useState2[1];

    var scrollElementRef = (0, _react.useRef)(null);
    var nextTransition = _react2.default.useCallback(function () {
        return updateState({});
    }, []);
    /**
     * @typedef {Object} urlState
     * @description — object with url query values
     *
     * @typedef {Function} setUrlState
     * @description - set url query value by key
     *
     * @typedef {Function} clearUrlState
     * @description - clear whole url query state
     *
     * @type {[Object, Function, Function]} OpenDropdown
     */

    var _useURLState = (0, _hooks.useURLState)(),
        _useURLState2 = _slicedToArray(_useURLState, 3),
        urlState = _useURLState2[0],
        setUrlState = _useURLState2[1],
        clearUrlState = _useURLState2[2];

    /**
     * @typedef {Number} OpenDropdownState - Id of a selected dropdown
     * @description — Passed in Context Provider So All Nested Components can be in sync
     *
     * @typedef {Function} OpenDropdownStateSetter
     * @description
     *
     * @type {[Number, Function]} OpenDropdown
     */


    var _useState9 = (0, _react.useState)(null),
        _useState10 = _slicedToArray(_useState9, 2),
        openDropdown = _useState10[0],
        setOpenDropdown = _useState10[1];

    /**
     * @typedef {Array} BookmarkedCardIdsState — Initiailzed From Local Storage
     *
     * @typedef {Function} BookmarkedCardIdsSetter — Sets internal state of saved bookmarks
     *
     * @type {[Array, Function]} BookmarkedCardIds
     */


    var _useState11 = (0, _react.useState)((0, _general.readBookmarksFromLocalStorage)()),
        _useState12 = _slicedToArray(_useState11, 2),
        bookmarkedCardIds = _useState12[0],
        setBookmarkedCardIds = _useState12[1];

    var _useState13 = (0, _react.useState)((0, _general.readInclusionsFromLocalStorage)()),
        _useState14 = _slicedToArray(_useState13, 1),
        inclusionIds = _useState14[0];

    /**
     * @typedef {Number} CurrentPageState — Initialized to the first page
     * @description Same page state for 'Load More' or 'Paginator'
     *
     * @typedef {Function} CurrentPageStateSetter — Sets page as user navigates through pages
     *
     * @type {[Number, Function]} CurrentPage
     */


    var _useState15 = (0, _react.useState)(+urlState.page || 1),
        _useState16 = _slicedToArray(_useState15, 2),
        currentPage = _useState16[0],
        setCurrentPage = _useState16[1];

    /**
     * @typedef {Array} FiltersState — Contains Filters For Filter Panel
     * @description Same Filter state for Left or Top
     *
     * @typedef {Function} FiltersStateSetter — Sets Authored Filters as State
     *
     * @type {[Array, Function]} Filters
     */


    var _useState17 = (0, _react.useState)([]),
        _useState18 = _slicedToArray(_useState17, 2),
        filters = _useState18[0],
        setFilters = _useState18[1];
    // window.filters = filters;


    var _useState19 = (0, _react.useState)([]),
        _useState20 = _slicedToArray(_useState19, 2),
        currCategories = _useState20[0],
        setCategories = _useState20[1];

    /**
     * @typedef {String} SearchQueryState — Will be used to search through cards
     * @typedef {Function} SearchQueryStateSetter — Sets user search query
     *
     * @type {[String, Function]} SearchQuery
     */


    var _useState21 = (0, _react.useState)(''),
        _useState22 = _slicedToArray(_useState21, 2),
        searchQuery = _useState22[0],
        setSearchQuery = _useState22[1];

    var _useState23 = (0, _react.useState)(''),
        _useState24 = _slicedToArray(_useState23, 2),
        selectedCategory = _useState24[0],
        setSelectedCategory = _useState24[1];

    /**
     * @typedef {String} SortOpenedState — Toggles Sort Popup Opened Or Closed
     * @typedef {Function} SortOpenedStateSetter — Sets Sort Option
     *
     * @type {[Boolean, Function]} SortOpened
     */


    var _useState25 = (0, _react.useState)(false),
        _useState26 = _slicedToArray(_useState25, 2),
        sortOpened = _useState26[0],
        setSortOpened = _useState26[1];

    /**
     * @typedef {String} SortOptionState — Can be one of a range of types
     * @description 'Title (A-Z)', 'Title (Z-A), Date (New to Old), Date (Old to New), Featured
     *
     * @typedef {Function} SortOptionStateSetter — Sets Sort Option
     *
     * @type {[String, Function]} SortOption
     */


    var _useState27 = (0, _react.useState)(defaultSortOption),
        _useState28 = _slicedToArray(_useState27, 2),
        sortOption = _useState28[0],
        setSortOption = _useState28[1];

    if (sortOption.sort === _constants.SORT_TYPES.RANDOM) {
        totalCardLimit = sampleSize;
    }

    /**
     * @typedef {Boolean} WindowWidthState — Can either be true or false
     * @description Used to toggle between mobile and desktop layouts
     *
     * @typedef {Function} WindowWidthStateSetter — Updates window width
     *
     * @type {[Number]} WindowWidth
     */

    var _useWindowDimensions = (0, _hooks.useWindowDimensions)(),
        windowWidth = _useWindowDimensions.width;

    /**
     * @typedef {Boolean} ShowMobileFiltersState — Can either be true or false
     * @description When true mobile filters will appear on the page
     *
     * @typedef {Function} ShowMobileFiltersStateSetter
     * @description Toggles mobile filter header/footer to show or hide
     *
     * @type {[Boolean, Function]} ShowMobileFilters
     */


    var _useState29 = (0, _react.useState)(false),
        _useState30 = _slicedToArray(_useState29, 2),
        showMobileFilters = _useState30[0],
        setShowMobileFilters = _useState30[1];

    /**
     * @typedef {Boolean} ShowBookmarkState — Can either be true or false
     * @description For Top Filter Panel, there is a limit to how many filter groups can show
     *
     * @typedef {Function} ShowBookmarkStateSetter — Sets limit on filter quantity
     * @description When over allowed Filter Group Quantity - A "More +" button appears
     *
     * @type {[Boolean, Function]} ShowBookmarks
     */


    var _useState31 = (0, _react.useState)(false),
        _useState32 = _slicedToArray(_useState31, 2),
        showBookmarks = _useState32[0],
        setShowBookmarks = _useState32[1];

    /**
     * @typedef {Boolean} LimitFilterQuantityState — Can either be true or false
     * @description For Top Filter Panel, there is a limit to how many filter groups can show
     *
     * @typedef {Function} LimitFilterQuantityStateSetter — Sets limit on filter quantity
     * @description When over allowed Filter Group Quantity - A "More +" button appears
     *
     * @type {[Boolean, Function]} LimitFilterQuantity
     */


    var _useState33 = (0, _react.useState)(filterPanelType === 'top'),
        _useState34 = _slicedToArray(_useState33, 2),
        showLimitedFiltersQty = _useState34[0],
        setShowLimitedFiltersQty = _useState34[1];

    /**
     * @typedef {Array} CardState
     * @description sets cards retrieved either server side render or API call
     *
     * @typedef {Function} CardStateSetter
     * @description E.g. Render Featured Cards Server side, While collection cards from API call
     *
     * @type {[Array, Function]} Cards
     */


    var _useState35 = (0, _react.useState)([]),
        _useState36 = _slicedToArray(_useState35, 2),
        cards = _useState36[0],
        setCards = _useState36[1];

    /**
     * @typedef {Boolean} LoadingState — Can either be true or false
     * @description When true a loading spinner will appear on the page
     *
     * @typedef {Function} LoadingStateSetter — Sets loader true or false
     * @description True while waiting for API response. False on cards retrieved or api failure
     *
     * @type {[Boolean, Function]} Loading
     */


    var _useState37 = (0, _react.useState)(false),
        _useState38 = _slicedToArray(_useState37, 2),
        isLoading = _useState38[0],
        setLoading = _useState38[1];

    /**
     * @typedef {Boolean} ApiFailureState — Can either be true or false
     * @description When true an API error has occured
     *
     * @typedef {Function} ApiFailureStateSetter — Sets API failure flag true or false
     * @description True when retrieved or api failure. False otherwise
     *
     * @type {[Boolean, Function]} ApiFailure
     */


    var _useState39 = (0, _react.useState)(false),
        _useState40 = _slicedToArray(_useState39, 2),
        isApiFailure = _useState40[0],
        setApiFailure = _useState40[1];

    var _useState41 = (0, _react.useState)(null),
        _useState42 = _slicedToArray(_useState41, 2),
        randomSortId = _useState42[0],
        setRandomSortId = _useState42[1];

    var _useState43 = (0, _react.useState)(true),
        _useState44 = _slicedToArray(_useState43, 2),
        isFirstLoad = _useState44[0],
        setIsFirstLoad = _useState44[1];

    var _useState45 = (0, _react.useState)(),
        _useState46 = _slicedToArray(_useState45, 2),
        visibleStamp = _useState46[0],
        setVisibleStamp = _useState46[1];

    var _useState47 = (0, _react.useState)(false),
        _useState48 = _slicedToArray(_useState47, 2),
        hasFetched = _useState48[0],
        setHasFetched = _useState48[1];

    /**
     * Creates a DOM reference to first filter item
     * @returns {Object} - filter item DOM reference
     */


    var filterItemRef = (0, _react.createRef)();

    /**
     * Creates a DOM reference to filter info button
     * @returns {Object} - filter info DOM reference
     */
    var filterInfoRef = (0, _react.createRef)();

    /**
     **** Helper Methods ****
     */

    function getParentChild(id) {
        var i = id.length;
        while (id[i] !== '/' && i >= 0) {
            i--;
        }
        return [id.substring(0, i), id.substring(i + 1)];
    }

    function rollingHash(s, l) {
        if (!s) {
            return '';
        }
        var BASE = 53;
        var MOD = Math.pow(10, l) + 7;
        var hash = 0;
        var basePower = 1;
        for (var i = 0; i < s.length; i++) {
            hash = (hash + (s.charCodeAt(i) - 97 + 1) * basePower) % MOD;
            basePower = basePower * BASE % MOD;
        }
        return ((hash + MOD) % MOD).toString(36);
    }

    /**
     * For a given group of filters, it will unselect all of them
     * @param {Array} filterGroups - a group of filters
     * @returns {Array} fitlerGroups - the updated group of filters
     */
    var getAllFiltersClearedState = function getAllFiltersClearedState(filterGroups) {
        return filterGroups.map(function (filterGroup) {
            return _extends({}, filterGroup, {
                items: filterGroup.items.map(function (filterItem) {
                    return _extends({}, filterItem, {
                        selected: false
                    });
                })
            });
        });
    };

    /**
     * For a given group of filters, it will unselect the one with a given id
     * @param {Number} id - the id of an individual filter item
     * @param {Array} filterGroups - a group of filters
     * @returns {Array} fitlerGroups - the updated group of filters
     */
    var getFilterItemClearedState = function getFilterItemClearedState(id, filterGroups) {
        return filterGroups.map(function (filterGroup) {
            if (filterGroup.id !== id) {
                return filterGroup;
            }
            return _extends({}, filterGroup, {
                items: filterGroup.items.map(function (filterItem) {
                    return _extends({}, filterItem, {
                        selected: false
                    });
                })
            });
        });
    };

    /**
     * Will uncheck a filter with a given id
     * @param {Number} id - the id of an individual filter item
     * @returns {Void} - an updated state
     */
    var clearFilterItem = function clearFilterItem(id) {
        var group = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

        setFilters(function (prevFilters) {
            var filterClearedState = getFilterItemClearedState(id, prevFilters);
            return filterClearedState;
        });

        var urlParams = new URLSearchParams(window.location.search);
        clearUrlState();
        // actually clear the url state
        urlParams.forEach(function (value, key) {
            var chFilter = key.toLowerCase().replace('ch_', '').replace(/ /g, '-');
            if (key.indexOf(filterGroupPrefix) !== 0 && !id.toLowerCase().includes(chFilter) || !group.toLowerCase().replace(/ /g, '-').includes(chFilter)) {
                setUrlState(key, value.replace(/%20/g, ' '));
            }
        });
    };

    /**
     * Will uncheck all filter items
     * @returns {Void} - an updated state
     */
    var clearAllFilters = function clearAllFilters() {
        setFilters(function (prevFilters) {
            var allFiltersClearedState = getAllFiltersClearedState(prevFilters);
            return allFiltersClearedState;
        });

        var urlParams = new URLSearchParams(window.location.search);

        clearUrlState();
        urlParams.forEach(function (value, key) {
            if (key.indexOf(filterGroupPrefix) !== 0) setUrlState(key, value);
        });
    };

    /**
     * Resets filters, and search to empty. Hides bookmark filter
     * @returns {Void} - an updated state
     */
    var resetFiltersSearchAndBookmarks = function resetFiltersSearchAndBookmarks() {
        clearAllFilters();
        setSearchQuery('');
        var urlParams = new URLSearchParams(window.location.search);
        clearUrlState();
        urlParams.forEach(function (value, key) {
            if (key.indexOf(filterGroupPrefix) === -1 && key.indexOf(searchPrefix) === -1) setUrlState(key, value);
        });
        setShowBookmarks(false);
    };

    /**
     **** EVENT HANDLERS ****
     */

    /**
     * On Load More Button Click, Increment Page Cuonter By 1
     *
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var onLoadMoreClick = function onLoadMoreClick() {
        setCurrentPage(function (prevState) {
            return prevState + 1;
        });
        window.scrollTo(0, window.pageYOffset);
    };

    /**
     * Takes sort user selects and sets it so cards are sorted
     *
     * @param {ClickEvent} e - The observable event.
     * @listens ClickEvent
     */
    var handleSortChange = function handleSortChange(option) {
        setSortOption(option);
        setSortOpened(false);
        setIsFirstLoad(false);
    };

    /**
     * Handles whenever the search box is clicked or input field
     * changes
     *
     * @param {ClickEvent, ChangeEvent} e
     * @listens ClickEvent, ChangeEvent
     */
    var handleSearchInputChange = function handleSearchInputChange(val) {
        setSearchQuery(val);
        setCurrentPage(1);
        setUrlState(searchPrefix, val);
    };

    /**
     * Handles when a group of filters is clicked. Behavior should be
     * to toggle group open or closed
     *
     * @param {ClickEvent} e - The observable event.
     * @listens ClickEvent
     */
    var handleFilterGroupClick = function handleFilterGroupClick(filterId) {
        setFilters(function (prevFilters) {
            var opened = void 0;
            return prevFilters.map(function (el) {
                if (el.id === filterId) {
                    opened = !el.opened;
                } else {
                    // eslint-disable-next-line prefer-destructuring
                    opened = el.opened;
                }
                return _extends({}, el, { opened: opened });
            });
        });
    };

    /**
     * Will find and set needed filter to url
     *
     * @param {string} filterId - selected filter group id
     * @param {string} itemId - selected filter item id
     * @param {boolean} isChecked
     * @returns {Void} - an updated url
     */
    var changeUrlState = function changeUrlState(filterId, itemId, isChecked) {
        var _filters$find = filters.find(function (_ref) {
            var id = _ref.id;
            return id === filterId;
        }),
            group = _filters$find.group,
            items = _filters$find.items;

        var _items$find = items.find(function (_ref2) {
            var id = _ref2.id;
            return id === itemId;
        }),
            label = _items$find.label;

        var urlStateValue = urlState[filterGroupPrefix + group] || [];
        /* istanbul ignore if  */
        if (typeof urlStateValue === 'string') {
            urlStateValue = urlStateValue.split(',');
        }

        var value = isChecked ? [].concat(_toConsumableArray(urlStateValue), [label]) : urlStateValue.filter(function (item) {
            return item !== label;
        });

        setUrlState(filterGroupPrefix + group, value);
    };

    /**
     * Handles what happens when a specific filter item (checkbox)
     * is clicked
     *
     * @param {CheckboxClickEvent} e
     * @listens CheckboxClickEvent
     */
    var handleCheckBoxChange = function handleCheckBoxChange(filterId, itemId, isChecked) {
        if (isXorFilter && isChecked) {
            clearAllFilters();
        }

        setFilters(function (prevFilters) {
            return prevFilters.map(function (filter) {
                if (filter.id !== filterId) return filter;

                return _extends({}, filter, {
                    items: filter.items.map(function (item) {
                        return _extends({}, item, {
                            selected: item.id === itemId ? !item.selected : item.selected
                        });
                    })
                });
            });
        });
        setCurrentPage(1);
        changeUrlState(filterId, itemId, isChecked);
    };

    /**
     * Shows/Hides Mobile Filter Panel
     *
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleMobileFiltersToggle = function handleMobileFiltersToggle() {
        return setShowMobileFilters(function (prev) {
            return !prev;
        });
    };

    /**
     * When a card's bookmark icon is clicked, save the card
     *
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleCardBookmarking = function handleCardBookmarking(id) {
        // Update bookmarked IDs
        var cardIsBookmarked = bookmarkedCardIds.find(function (card) {
            return card === id;
        });

        if (cardIsBookmarked) {
            setBookmarkedCardIds(function (prev) {
                return prev.filter(function (el) {
                    return el !== id;
                });
            });
        } else {
            setBookmarkedCardIds(function (prev) {
                return [].concat(_toConsumableArray(prev), [id]);
            });
        }
    };

    /**
     * Will show  or hide all saved bookmarks when clicked
     *
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleShowBookmarksFilterClick = function handleShowBookmarksFilterClick(e) {
        e.stopPropagation();
        setShowBookmarks(function (prev) {
            return !prev;
        });
        setCurrentPage(1);
    };

    /**
     * If top filter panel, toggle or hide more button
     *
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleShowAllTopFilters = function handleShowAllTopFilters() {
        setShowLimitedFiltersQty(function (prev) {
            return !prev;
        });
    };

    /**
     * On window click, all dropdowns should hide
     *
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleWindowClick = function handleWindowClick() {
        setOpenDropdown(null);
    };

    /**
     * Handles escape for mobile filter dialog
     *
     * @param event
     */
    var handleMobileFilterEscape = function handleMobileFilterEscape(event) {
        if (event.key !== 'Escape' && event.key !== 'Esc') return;

        setShowMobileFilters(false);
    };

    /**
     **** Effects ****
     */

    /**
     * Sets authored filters as state
     * @returns {Void} - an updated state
     */

    (0, _react.useEffect)(function () {
        setFilters(authoredFilters.map(function (filterGroup) {
            return _extends({}, filterGroup, {
                opened: DESKTOP_SCREEN_SIZE ? filterGroup.openedOnLoad : true,
                items: filterGroup.items.map(function (filterItem) {
                    return _extends({}, filterItem, {
                        selected: false
                    });
                })
            });
        }));
    }, []);

    /**
     * Sets filters from url as state
     * @returns {Void} - an updated state
     */
    (0, _react.useEffect)(function () {
        setFilters(function (origin) {
            return origin.map(function (filter) {
                var group = filter.group,
                    items = filter.items;

                var urlStateValue = urlState[filterGroupPrefix + group];

                if (!urlStateValue) return filter;
                /* istanbul ignore next  */
                var urlStateArray = urlStateValue.split(',');
                return _extends({}, filter, {
                    opened: true,
                    /* istanbul ignore next */
                    items: items.map(function (item) {
                        return _extends({}, item, {
                            selected: urlStateArray.includes(String(item.label))
                        });
                    })
                });
            });
        });
        var urlSearchValue = urlState[searchPrefix];
        if (urlSearchValue) {
            setSearchQuery(urlSearchValue[0]);
        }
    }, []);

    (0, _react.useEffect)(function () {
        setRandomSortId(Math.floor(Math.random() * 10e12));
    }, []);

    /**
     * Trigger after button load more click
     * @returns {Void} - an updated url page
     */
    (0, _react.useEffect)(function () {
        setUrlState('page', currentPage === 1 ? '' : currentPage);
    }, [currentPage]);

    var removeEmptyFilters = function removeEmptyFilters(allFilters, cardsFromJson) {
        var _ref3;

        var tags = (_ref3 = []).concat.apply(_ref3, _toConsumableArray(cardsFromJson.map(function (card) {
            return card.tags.map(function (tag) {
                return tag.id;
            });
        })));

        var timingTags = [_constants.EVENT_TIMING_IDS.LIVE, _constants.EVENT_TIMING_IDS.ONDEMAND, _constants.EVENT_TIMING_IDS.UPCOMING];

        return allFilters.map(function (filter) {
            return _extends({}, filter, {
                opened: DESKTOP_SCREEN_SIZE ? filter.openedOnLoad : true,
                /* istanbul ignore next */
                items: filter.items.filter(function (item) {
                    return tags.includes(item.id) || tags.includes(item.label) || tags.toString().includes('/' + item.id) // ***** FIX  HERE *****
                    || timingTags.includes(item.id);
                })
            });
        }).filter(function (filter) {
            return filter.items.length > 0;
        });
    };

    /**
     * This handles getting Cards, there are some conditions:
     * - If target is not enabled a simple request is made without mods or delay.
     * - If target is enabled & tVisitor API is present add values from Visitor
     * - If target is enabled & the Visitor API is not present setTimeout with
     * counter to recheck for the Visitor API. If 20 attempts are made w/o
     * success fail the request.
     * @returns {Void} - an updated state
     */
    (0, _react.useEffect)(function () {
        if (isLazy && visibleStamp || isLazy && !hasFetched) {
            return;
        }
        var _window = window,
            visitorPromise = _window.__satelliteLoadedPromise;


        var collectionEndpoint = getConfig('collection', 'endpoint');
        var fallbackEndpoint = getConfig('collection', 'fallbackEndpoint');

        var r = new RegExp('^(?:[a-z]+:)?//', 'i');
        var collectionEndpointURI = void 0;
        if (r.test(collectionEndpoint)) {
            collectionEndpointURI = new URL(collectionEndpoint);
        } else {
            collectionEndpointURI = new URL(collectionEndpoint, window.location.origin);
        }

        if (!fallbackEndpoint) {
            collectionEndpointURI.searchParams.set('flatFile', false);
            collectionEndpoint = collectionEndpointURI.toString();
        }

        setLoading(true);

        /**
         * @func getCards
         * @desc wraps fetch with function to make it reusable
         *
         * @param {String} endPoint, URL with params for card request
         * @returns {Void} - an updated state
         */
        function getCards() {
            var endPoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : collectionEndpoint;

            var start = Date.now();
            return window.fetch(endPoint, {
                credentials: 'include',
                headers: headers
            }).then(function (resp) {
                var ok = resp.ok,
                    status = resp.status,
                    statusText = resp.statusText,
                    url = resp.url;


                if (ok) {
                    return resp.json().then(function (json) {
                        var validData = !!Object.keys(json).length;

                        if (validData) return json;

                        (0, _lana.logLana)({ message: 'no valid response data from ' + endPoint, tags: 'collection' });
                        /* istanbul ignore next */
                        return Promise.reject(new Error('no valid reponse data'));
                    });
                }
                (0, _lana.logLana)({ message: 'failure for call to ' + url, tags: 'collection', errorMessage: status + ': ' + statusText });
                return Promise.reject(new Error(status + ': ' + statusText + ', failure for call to ' + url));
            }).then(function (payload) {
                (0, _lana.logLana)({ message: 'response took ' + (Date.now() - start) / 1000 + 's', tags: 'collection' });
                setLoading(false);
                setIsFirstLoad(true);
                if (!(0, _general.getByPath)(payload, 'cards.length')) {
                    (0, _lana.logLana)({ message: 'no cards return by query to this endpoint: ' + endPoint, tags: 'collection' });
                    return;
                }
                if (payload.isHashed && !hashedRef.current) {
                    hashedRef.current = true;
                    var TAG_HASH_LENGTH = 6;
                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;

                    try {
                        for (var _iterator = authoredFilters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var group = _step.value;

                            group.id = rollingHash(group.id, TAG_HASH_LENGTH);
                            var _iteratorNormalCompletion3 = true;
                            var _didIteratorError3 = false;
                            var _iteratorError3 = undefined;

                            try {
                                for (var _iterator3 = group.items[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                                    var filterItem = _step3.value;

                                    var _getParentChild = getParentChild(filterItem.id),
                                        _getParentChild2 = _slicedToArray(_getParentChild, 2),
                                        parent = _getParentChild2[0],
                                        child = _getParentChild2[1];

                                    filterItem.id = rollingHash(parent, TAG_HASH_LENGTH) + '/' + rollingHash(child, TAG_HASH_LENGTH);
                                }
                            } catch (err) {
                                _didIteratorError3 = true;
                                _iteratorError3 = err;
                            } finally {
                                try {
                                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
                                        _iterator3.return();
                                    }
                                } finally {
                                    if (_didIteratorError3) {
                                        throw _iteratorError3;
                                    }
                                }
                            }
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return) {
                                _iterator.return();
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }

                    var temp = [];
                    var _iteratorNormalCompletion2 = true;
                    var _didIteratorError2 = false;
                    var _iteratorError2 = undefined;

                    try {
                        for (var _iterator2 = hideCtaTags[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                            var tag = _step2.value;

                            var _getParentChild3 = getParentChild(tag),
                                _getParentChild4 = _slicedToArray(_getParentChild3, 2),
                                parent = _getParentChild4[0],
                                child = _getParentChild4[1];

                            if (parent !== '' && child !== '') {
                                temp.push(rollingHash(parent, TAG_HASH_LENGTH) + '/' + rollingHash(child, TAG_HASH_LENGTH));
                            }
                        }
                    } catch (err) {
                        _didIteratorError2 = true;
                        _iteratorError2 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion2 && _iterator2.return) {
                                _iterator2.return();
                            }
                        } finally {
                            if (_didIteratorError2) {
                                throw _iteratorError2;
                            }
                        }
                    }

                    hideCtaTags = temp;
                }
                setCardCount(payload.totalCount ? payload.totalCount : payload.cards.length);

                var _removeDuplicateCards = new _JsonProcessor2.default(payload.cards).removeDuplicateCards().addCardMetaData(_constants.TRUNCATE_TEXT_QTY, onlyShowBookmarks, bookmarkedCardIds, hideCtaIds, hideCtaTags),
                    _removeDuplicateCards2 = _removeDuplicateCards.processedCards,
                    processedCards = _removeDuplicateCards2 === undefined ? [] : _removeDuplicateCards2;

                if (isCategoriesContainer) {
                    setFilters(function (prevFilters) {
                        return prevFilters.map(function (filter) {
                            var group = filter.group,
                                items = filter.items;

                            var urlStateValue = urlState[filterGroupPrefix + group];
                            if (!urlStateValue) return filter;
                            var urlStateArray = urlStateValue.split(',');
                            return _extends({}, filter, {
                                opened: true,
                                items: items.map(function (item) {
                                    return _extends({}, item, {
                                        selected: urlStateArray.includes(String(item.label))
                                    });
                                })
                            });
                        });
                    });
                } else {
                    setFilters(function () {
                        return authoredFilters.map(function (filter) {
                            var group = filter.group,
                                items = filter.items;

                            var urlStateValue = urlState[filterGroupPrefix + group];
                            if (!urlStateValue) return filter;
                            var urlStateArray = urlStateValue.split(',');
                            return _extends({}, filter, {
                                opened: true,
                                items: items.map(function (item) {
                                    return _extends({}, item, {
                                        selected: urlStateArray.includes(String(item.label))
                                    });
                                })
                            });
                        });
                    });
                }

                var transitions = (0, _general.getTransitions)(processedCards);
                if (sortOption.sort.toLowerCase() === 'eventsort') {
                    while (transitions.size() > 0) {
                        setTimeout(function () {
                            nextTransition();
                        }, transitions.dequeue().priority + _constants.ONE_SECOND_DELAY);
                    }
                }

                setCards(processedCards);

                // check if the current page is greater than the last page
                var lastPage = Math.ceil(processedCards.length / resultsPerPage);
                if (currentPage > lastPage) {
                    setCurrentPage(1);
                }

                if (!showEmptyFilters) {
                    setFilters(function (prevFilters) {
                        return removeEmptyFilters(prevFilters, processedCards);
                    });
                }
                setTimeout(function () {
                    if (!scrollElementRef.current) return;
                    if (processedCards.length === 0) return;
                    if (currentPage === 1) return;
                    var cardsToshow = processedCards.slice(0, resultsPerPage * currentPage);
                    var getLastPageID = resultsPerPage * currentPage - resultsPerPage;
                    /* istanbul ignore if */
                    if (cardsToshow.length < getLastPageID) return;
                    var lastID = scrollElementRef.current.children[getLastPageID];
                    lastID.scrollIntoView();
                }, 100);
            }).catch(function () {
                if (endPoint === collectionEndpoint && fallbackEndpoint) {
                    getCards(fallbackEndpoint);
                    return;
                }
                (0, _lana.logLana)({ message: 'failed to return processed cards', tags: 'collection' });
                setLoading(false);
                setApiFailure(true);
            });
        }

        function visitorApiFallback(visitor, url) {
            try {
                var v = visitor.getVisitorId();
                url.searchParams.set('mcgvid', v.getMarketingCloudVisitorID());
                url.searchParams.set('sdid', v.getSupplementalDataID());
                url.searchParams.set('mboxAAMB', v.getAudienceManagerBlob());
                url.searchParams.set('mboxMCGLH', v.getAudienceManagerLocationHint());
                getCards(url.toString());
            } catch (e) {
                getCards(collectionEndpoint);
            }
        }

        function alloyApiFallback(visitor, url) {
            var satellite = window._satellite; // eslint-disable-line no-underscore-dangle
            if (window.alloy && window.edgeConfigId && satellite && satellite.alloyConfigurePromise) {
                satellite.alloyConfigurePromise.then(function () {
                    return window.alloy('getIdentity');
                }).then(function (res) {
                    var ecid = (0, _general.getByPath)(res, 'identity.ECID');
                    var regionId = (0, _general.getByPath)(res, 'edge.regionId');
                    if (ecid && regionId) {
                        url.searchParams.set('mcgvid', ecid);
                        url.searchParams.set('mboxMCGLH', regionId);
                        getCards(url.toString());
                    } else {
                        visitorApiFallback(visitor, url);
                    }
                }).catch(function () {
                    visitorApiFallback(visitor, url);
                });
            } else {
                visitorApiFallback(visitor, url);
            }
        }

        function getVisitorData(visitorApi) {
            var url = new URL(collectionEndpoint);
            var revealId = useLastViewedSession && localStorage.getItem('targetValueRevealID');
            if (revealId) url.searchParams.set('currentEntityId', revealId);
            visitorApi.then(function (visitor) {
                var identity = window.alloy_getIdentity;
                if (identity) {
                    identity.then(function (res) {
                        var ecid = (0, _general.getByPath)(res, 'identity.ECID');
                        var regionId = (0, _general.getByPath)(res, 'edge.regionId');
                        if (ecid && regionId) {
                            url.searchParams.set('mcgvid', ecid);
                            url.searchParams.set('mboxMCGLH', regionId);
                            getCards(url.toString());
                        } else {
                            alloyApiFallback(visitor, url);
                        }
                    }).catch(function () {
                        alloyApiFallback(visitor, url);
                    });
                } else {
                    alloyApiFallback(visitor, url);
                }
            }).catch(function () {
                getCards(collectionEndpoint);
            });
        }

        /**
         * @func visitorRetry
         * @desc Visitor API is late loading often, this sets a recursive call
         * in a setTimeout to run 20 times, and then fail the request.
         *
         * @returns {Void} - an updated state, thru calling getVisitorData which
         * calls getCards
         */
        /* istanbul ignore next */
        function visitorRetry() {
            var retryCount = 0;

            var timedRetry = function timedRetry() {
                setTimeout(function () {
                    if (retryCount >= 20) {
                        setLoading(false);

                        setApiFailure(true);

                        return;
                    }

                    var _window2 = window,
                        visitorPromiseRetry = _window2.__satelliteLoadedPromise;


                    if (visitorPromiseRetry) {
                        getVisitorData(visitorPromiseRetry);
                    }

                    if (!visitorPromiseRetry && retryCount < 20) {
                        timedRetry();
                    }

                    retryCount += 1;
                }, 100);
            };

            timedRetry();
        }
        /* istanbul ignore if */
        if (targetEnabled && visitorPromise) {
            getVisitorData(visitorPromise);
        }
        /* istanbul ignore if */
        if (targetEnabled && !visitorPromise) {
            visitorRetry();
        }

        if (!targetEnabled && !partialLoadWithBackgroundFetch) {
            getCards();
        }
        if (!targetEnabled && partialLoadWithBackgroundFetch) {
            var collectionEndpointUrl = new URL(collectionEndpoint);
            collectionEndpointUrl.searchParams.set('partialLoadCount', String(partialLoadCount));
            setIsPartialLoad(true);
            getCards(collectionEndpointUrl.toString()).then(function () {
                getCards().then(function () {
                    setIsPartialLoad(false);
                });
            });
        }

        function handleKeyDown(e) {
            if (e.key === 'Tab') {
                BODY.classList.add('tabbing');
            }
        }

        function handleMouseDown() {
            BODY.classList.remove('tabbing');
        }

        document.addEventListener('keydown', handleKeyDown);
        document.addEventListener('mousedown', handleMouseDown);
    }, [visibleStamp, hasFetched]);

    /**
     * Saves cards to local storage and updates card w/ bookmarked data
     * @returns {Void} - an updated state
     */
    (0, _react.useEffect)(function () {
        (0, _general.saveBookmarksToLocalStorage)(bookmarkedCardIds);
        setCards((0, _Helpers.getUpdatedCardBookmarkData)(cards, bookmarkedCardIds));
    }, [bookmarkedCardIds]);

    /**
     * Handles clearing state on showBookmarks
     * @returns {Void} - an updated state
     */
    (0, _react.useEffect)(function () {
        if (showBookmarks) {
            clearAllFilters();
            setSearchQuery('');
        }
    }, [showBookmarks]);

    /**
     * Handles focus and escape on mobile filter toggle
     * @returns {Void}
     */
    (0, _react.useEffect)(function () {
        if (showMobileFilters) {
            if (filterItemRef && filterItemRef.current) {
                filterItemRef.current.focusMobTitle();
            }
            document.addEventListener('keydown', handleMobileFilterEscape);
        } else {
            if (filterInfoRef && filterInfoRef.current) {
                filterInfoRef.current.focus();
            }
            document.removeEventListener('keydown', handleMobileFilterEscape);
        }

        return function () {
            document.removeEventListener('keydown', handleMobileFilterEscape);
        };
    }, [showMobileFilters]);

    var box = (0, _react.useRef)();

    (0, _react.useEffect)(function () {
        /* istanbul ignore if */
        if (box && !visibleStamp && isLazy) {
            var io = new IntersectionObserver(function (entries) {
                if (entries[0].intersectionRatio <= 0) return;
                setHasFetched(true);
                setVisibleStamp(new Date().getTime());
            });
            io.observe(box.current);
        }
    }, [box]);

    /**
     **** Derived State ****
     */

    /**
     * Array of filters chosen by the user
     * @type {Array}
     */
    var activeFilterIds = (0, _Helpers.getActiveFilterIds)(filters);

    /**
     * Array of filters panels (groupings) created by the author
     * @type {Array}
     */
    var activePanels = (0, _Helpers.getActivePanels)(activeFilterIds) || new Set();

    /**
     * Instance of CardFilterer class that handles returning subset of cards
     * based off user interactions
     *
     * @type {Object}
     */
    var cardFilterer = new _CardFilterer2.default(cards, randomSortId, sampleSize, reservoirSize, featuredCards);

    /**
     * @type {Function} getFilteredCollection
     * @desc Closure around CardFilterer for reuse within context
     * @returns {Object}
     * */
    var getFilteredCollection = function getFilteredCollection() {
        return cardFilterer.sortCards(sortOption, sanitizedEventFilter, featuredCards, hideCtaIds, isFirstLoad).keepBookmarkedCardsOnly(onlyShowBookmarks, bookmarkedCardIds, showBookmarks).keepCardsWithinDateRange().filterCards(activeFilterIds, activePanels, filterLogic, _constants.FILTER_TYPES, currCategories).truncateList(totalCardLimit).searchCards((0, _general.removeMarkDown)(searchQuery), searchFields, cardStyle).removeCards(inclusionIds);
    };

    /**
     * @type {Array} filteredCards: Filtered cards based off current state of page
     * @type {Number} nextTransitionMs: Number for timed event sort transition
     */
    /* eslint-disable no-unused-vars */

    var _getFilteredCollectio = getFilteredCollection(),
        _getFilteredCollectio2 = _getFilteredCollectio.filteredCards,
        filteredCards = _getFilteredCollectio2 === undefined ? [] : _getFilteredCollectio2,
        _getFilteredCollectio3 = _getFilteredCollectio.nextTransitionMs,
        nextTransitionMs = _getFilteredCollectio3 === undefined ? 0 : _getFilteredCollectio3;

    /**
     * Subset of cards to show the user
     * @type {Array}
     */


    var gridCards = timedCollection.length ? timedCollection : filteredCards;
    var gridCardLen = gridCards.length;
    if (isPartialLoad) {
        gridCardLen = cardCount;
    }

    /**
     * Total pages (used by Paginator Component)
     * @type {Number}
     */
    var totalPages = (0, _Helpers.getTotalPages)(resultsPerPage, gridCardLen);

    /**
     * Number of cards to show (used by Load More component)
     * @type {Number}
     */
    var numCardsToShow = (0, _Helpers.getNumCardsToShow)(resultsPerPage, currentPage, gridCardLen);

    /**
     * How many filters were selected - (used by Left Filter Panel)
     * @type {Number}
     */
    var selectedFiltersItemsQty = (0, _consonant.getNumSelectedFilterItems)(filters);

    /**
     * Conditions to Display A Form Of Pagination
     * @type {Boolean}
     */
    var displayPagination = (0, _Helpers.shouldDisplayPaginator)(paginationIsEnabled, totalCardLimit, gridCardLen);
    /**
     * Conditions to display the Load More Button
     * @type {Boolean}
     */
    var displayLoadMore = displayPagination && paginationType === 'loadMore';

    /**
     * Conditions to display the Paginator Component
     * @type {Boolean}
     */
    var displayPaginator = displayPagination && paginationType === 'paginator';

    /**
     * Conditions to display the Left Filter Panel Component
     * @type {Boolean}
     */
    var displayLeftFilterPanel = filterPanelEnabled && filterPanelType === _constants.FILTER_PANEL.LEFT;

    /**
     * Whether at lease one card was returned by Card Filterer
     * @type {Boolean}
     */
    var atLeastOneCard = gridCardLen > 0;

    /**
     * Where to place the Sort Popup (either left or right)
     * @type {String} - Location of Sort Popup in Top Filter Panel View
     */
    var topPanelSortPopupLocation = filters.length > 0 && windowWidth < _constants.TABLET_MIN_WIDTH ? _constants.SORT_POPUP_LOCATION.LEFT : _constants.SORT_POPUP_LOCATION.RIGHT;

    /**
     * How Long Paginator Component Should Be
     * @type {Number} - Location of Sort Popup in Top Filter Panel View
     */
    var paginatorCount = DESKTOP_SCREEN_SIZE ? _constants.PAGINATION_COUNT.DESKTOP : _constants.PAGINATION_COUNT.MOBILE;

    /**
     * Whether we are using the top filter panel or not
     * @type {Boolean}
     */
    var isTopFilterPanel = filterPanelType === _constants.FILTER_PANEL.TOP;

    /**
     * Whether we are using the top filter panel or not
     * @type {Boolean}
     */
    var isLeftFilterPanel = filterPanelType === _constants.FILTER_PANEL.LEFT;

    /**
     * Ui options that cause grid to rerender necessitate the aria attribute being set
     * @type {Boolean}
     */
    var isGridAreaLive = filterPanelEnabled || searchEnabled || sortEnabled || paginationIsEnabled;

    var filterNames = '';
    filters.forEach(function (el) {
        el.items.filter(function (item) {
            return item.selected;
        }).forEach(function (item) {
            filterNames += item.label + ', ';
        });
    });

    /**
     **** Class names ****
     */

    /**
     * Class name for the authored theme:
     * light, dark, darkest;
     * @type {String}
     */
    var themeClass = (0, _classnames2.default)({
        'consonant-u-themeLight': authoredMode === _constants.THEME_TYPE.LIGHT,
        'consonant-u-themeDark': authoredMode === _constants.THEME_TYPE.DARK,
        'consonant-u-themeDarkest': authoredMode === _constants.THEME_TYPE.DARKEST
    });

    /**
     * @param {*} filterList
     * @param {*} categoryList
     * @returns List of categories for the top pills
     *          Prepends the "All Topics" pill to the list of categories
     */
    function getAuthoredCategories(filterList, categoryList) {
        var categoryIds = filterList.filter(function (filter) {
            return filter.id.includes('caas:product-categories');
        }).map(function (item) {
            return item.id;
        });

        // Sorts category list based on authored order
        var selectedCategories = categoryIds.map(function (id) {
            return categoryList && categoryList.filter(function (category) {
                return category.id === id;
            })[0];
        });

        return [{
            group: 'All Topics',
            title: 'All Topics',
            id: '',
            items: []
        }].concat(_toConsumableArray(selectedCategories));
    }

    /**
     * @returns List of all products from all categories for the 'All products' menu
     *          Prepends the "All products" label to the list of categories
     */
    function getAllCategoryProducts() {
        if (!authoredCategories) return [];
        var allCategories = [];
        var _iteratorNormalCompletion4 = true;
        var _didIteratorError4 = false;
        var _iteratorError4 = undefined;

        try {
            for (var _iterator4 = authoredCategories[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                var category = _step4.value;

                if (category && category.items) {
                    var _iteratorNormalCompletion5 = true;
                    var _didIteratorError5 = false;
                    var _iteratorError5 = undefined;

                    try {
                        for (var _iterator5 = category.items[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
                            var item = _step5.value;

                            item.fromCategory = true;
                        }
                    } catch (err) {
                        _didIteratorError5 = true;
                        _iteratorError5 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion5 && _iterator5.return) {
                                _iterator5.return();
                            }
                        } finally {
                            if (_didIteratorError5) {
                                throw _iteratorError5;
                            }
                        }
                    }

                    allCategories = allCategories.concat(category.items);
                }
            }
        } catch (err) {
            _didIteratorError4 = true;
            _iteratorError4 = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion4 && _iterator4.return) {
                    _iterator4.return();
                }
            } finally {
                if (_didIteratorError4) {
                    throw _iteratorError4;
                }
            }
        }

        return {
            group: 'All products',
            id: 'caas:all-products',
            items: allCategories
        };
    }

    /**
     * @param {*} selectedCategories
     * @param {*} groupId
     * Sets the categories and filters based on the selected category
     */
    function categoryHandler(selectedCategories, groupId) {
        var temp = [];
        var _iteratorNormalCompletion6 = true;
        var _didIteratorError6 = false;
        var _iteratorError6 = undefined;

        try {
            for (var _iterator6 = selectedCategories[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
                var category = _step6.value;

                temp.push(category.id);
            }
        } catch (err) {
            _didIteratorError6 = true;
            _iteratorError6 = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion6 && _iterator6.return) {
                    _iterator6.return();
                }
            } finally {
                if (_didIteratorError6) {
                    throw _iteratorError6;
                }
            }
        }

        setCategories(temp);
        setFilters(function (prevFilters) {
            prevFilters.pop();
            var newGroup = authoredCategories.filter(function (category) {
                return category.id === groupId;
            })[0];
            if (!newGroup.items.length) {
                var nextFilters = prevFilters.concat(getAllCategoryProducts());
                return nextFilters;
            }
            prevFilters.push(newGroup);
            return prevFilters;
        });
        setSelectedCategory(groupId);
        setCurrentPage(1);
    }

    /**
     * @param {*} category
     * @returns The Authored icon for the category if exists,
     *          otherwise returns the default icon from the tags or an empty string
     */
    function getCategoryIcon(category) {
        var authoredIcon = authoredFilters.filter(function (filter) {
            return filter.id === category.id;
        }).map(function (filter) {
            return filter.icon;
        }).toString();
        return authoredIcon || category.icon || '';
    }

    var collectionStr = collectionIdentifier ? collectionIdentifier + ' | ' : '';
    var filterStr = selectedFiltersItemsQty ? filterNames : 'No Filters';
    var searchQueryStr = searchQuery || 'None';
    var collectionAnalytics = collectionStr + 'Card Collection | Filters: ' + filterStr + '| Search Query: ' + searchQueryStr;
    /**
     * Class name for the consonant wrapper:
     * whether consonant wrapper contains left filter;
     * @type {String}
     */
    var wrapperClass = (0, _classnames2.default)({
        'consonant-Wrapper': true,
        'consonant-Wrapper--32MarginContainer': authoredLayoutContainer === _constants.LAYOUT_CONTAINER.SIZE_100_VW_32_MARGIN,
        'consonant-Wrapper--83PercentContainier': authoredLayoutContainer === _constants.LAYOUT_CONTAINER.SIZE_83_VW,
        'consonant-Wrapper--1200MaxWidth': authoredLayoutContainer === _constants.LAYOUT_CONTAINER.SIZE_1200_PX,
        'consonant-Wrapper--1600MaxWidth': authoredLayoutContainer === _constants.LAYOUT_CONTAINER.SIZE_1600_PX,
        'consonant-Wrapper--1200MaxWidth Categories': isCategoriesContainer,
        'consonant-Wrapper--carousel': isCarouselContainer,
        'consonant-Wrapper--withLeftFilter': filterPanelEnabled && isLeftFilterPanel
    });

    (0, _react.useEffect)(function () {
        if (isCategoriesContainer) {
            setFilters(function (prevFilters) {
                var nextFilters = prevFilters.concat(getAllCategoryProducts());
                return nextFilters;
            });
        }
    }, []);

    return _react2.default.createElement(
        _contexts.ConfigContext.Provider,
        { value: config },
        _react2.default.createElement(
            _contexts.ExpandableContext.Provider,
            { value: { value: openDropdown, setValue: setOpenDropdown } },
            _react2.default.createElement(
                'section',
                {
                    ref: box,
                    role: 'group',
                    'aria-label': title || 'Card Collection',
                    'daa-lh': collectionAnalytics,
                    'daa-im': String(trackImpressions),
                    onClick: handleWindowClick,
                    className: wrapperClass + ' ' + themeClass },
                _react2.default.createElement(
                    'div',
                    { className: 'consonant-Wrapper-inner' },
                    isCategoriesContainer && _react2.default.createElement(
                        _react.Fragment,
                        null,
                        _react2.default.createElement(
                            'h2',
                            { 'data-testid': 'consonant-TopFilters-categoriesTitle', className: 'consonant-TopFilters-categoriesTitle' },
                            title
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'filters-category' },
                            authoredCategories.map(function (category) {
                                if (!category) return null;
                                var selected = '';
                                if (category.id === selectedCategory) {
                                    selected = 'selected';
                                }
                                return _react2.default.createElement(
                                    'button',
                                    {
                                        key: category.id,
                                        onClick: function onClick() {
                                            categoryHandler(category.items, category.id);
                                        },
                                        'data-selected': selected,
                                        'data-testid': 'category-button-' + category.id,
                                        'data-group': category.group.replaceAll(' ', '').toLowerCase() },
                                    _react2.default.createElement('img', { className: 'filters-category--icon', src: getCategoryIcon(category), alt: category.icon && 'Category icon' }),
                                    category.title
                                );
                            })
                        )
                    ),
                    displayLeftFilterPanel && isStandardContainer && _react2.default.createElement(
                        'div',
                        { className: 'consonant-Wrapper-leftFilterWrapper' },
                        _react2.default.createElement(_Panel4.default, {
                            filters: filters,
                            selectedFiltersQty: selectedFiltersItemsQty,
                            windowWidth: windowWidth,
                            onFilterClick: handleFilterGroupClick,
                            onClearAllFilters: resetFiltersSearchAndBookmarks,
                            onClearFilterItems: clearFilterItem,
                            onCheckboxClick: handleCheckBoxChange,
                            onMobileFiltersToggleClick: handleMobileFiltersToggle,
                            onSelectedFilterClick: handleCheckBoxChange,
                            showMobileFilters: showMobileFilters,
                            resQty: gridCardLen,
                            bookmarkComponent: _react2.default.createElement(_Bookmarks2.default, {
                                showBookmarks: showBookmarks,
                                onClick: handleShowBookmarksFilterClick,
                                savedCardsCount: bookmarkedCardIds.length }),
                            searchComponent: _react2.default.createElement(_Search2.default, {
                                placeholderText: leftPanelSearchPlaceholder,
                                name: 'filtersSideSearch',
                                value: searchQuery,
                                autofocus: false,
                                onSearch: handleSearchInputChange }),
                            ref: filterItemRef })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'consonant-Wrapper-collection' + (isLoading ? ' is-loading' : '') },
                        isTopFilterPanel && isStandardContainer && _react2.default.createElement(_Panel2.default, {
                            filterPanelEnabled: filterPanelEnabled,
                            filters: filters,
                            searchQuery: searchQuery,
                            windowWidth: windowWidth,
                            resQty: gridCardLen,
                            onCheckboxClick: handleCheckBoxChange,
                            onFilterClick: handleFilterGroupClick,
                            onClearFilterItems: clearFilterItem,
                            categories: currCategories,
                            onClearAllFilters: resetFiltersSearchAndBookmarks,
                            showLimitedFiltersQty: showLimitedFiltersQty,
                            searchComponent: _react2.default.createElement(_Search2.default, {
                                placeholderText: topPanelSearchPlaceholder,
                                name: 'filtersTopSearch',
                                value: searchQuery,
                                autofocus: DESKTOP_SCREEN_SIZE,
                                onSearch: handleSearchInputChange }),
                            sortComponent: _react2.default.createElement(_Popup2.default, {
                                opened: sortOpened,
                                id: 'sort',
                                val: sortOption,
                                values: sortOptions,
                                onSelect: handleSortChange,
                                name: 'filtersTopSelect',
                                autoWidth: true,
                                optionsAlignment: topPanelSortPopupLocation }),
                            onShowAllClick: handleShowAllTopFilters }),
                        isLeftFilterPanel && isStandardContainer && _react2.default.createElement(_Info.Info, {
                            enabled: filterPanelEnabled,
                            filtersQty: filters.length,
                            filters: filters,
                            cardsQty: gridCardLen,
                            selectedFiltersQty: selectedFiltersItemsQty,
                            windowWidth: windowWidth,
                            onMobileFiltersToggleClick: handleMobileFiltersToggle,
                            searchComponent: _react2.default.createElement(_Search2.default, {
                                placeholderText: searchPlaceholderText,
                                name: 'searchFiltersInfo',
                                value: searchQuery,
                                autofocus: false,
                                onSearch: handleSearchInputChange }),
                            sortComponent: _react2.default.createElement(_Popup2.default, {
                                opened: sortOpened,
                                id: 'sort',
                                val: sortOption,
                                values: sortOptions,
                                onSelect: handleSortChange,
                                autoWidth: false,
                                optionsAlignment: 'right' }),
                            sortOptions: sortOptions,
                            ref: filterInfoRef }),
                        atLeastOneCard && isStandardContainer && _react2.default.createElement(
                            _react.Fragment,
                            null,
                            _react2.default.createElement(_Grid2.default, {
                                resultsPerPage: resultsPerPage,
                                pages: currentPage,
                                cards: gridCards,
                                forwardedRef: scrollElementRef,
                                onCardBookmark: handleCardBookmarking,
                                isAriaLiveActive: isGridAreaLive,
                                renderOverlay: renderOverlay }),
                            displayLoadMore && _react2.default.createElement(_LoadMore2.default, {
                                onClick: onLoadMoreClick,
                                show: numCardsToShow,
                                total: gridCardLen }),
                            displayPaginator && _react2.default.createElement(_Paginator2.default, {
                                pageCount: paginatorCount,
                                currentPageNumber: currentPage,
                                totalPages: totalPages,
                                showItemsPerPage: resultsPerPage,
                                totalResults: gridCardLen,
                                onClick: setCurrentPage })
                        ),
                        atLeastOneCard && isCarouselContainer && !(cardStyle === 'custom-card') && _react2.default.createElement(_CardsCarousel2.default, {
                            resQty: gridCardLen,
                            cards: gridCards,
                            cardStyle: cardStyle,
                            role: 'tablist',
                            onCardBookmark: handleCardBookmarking }),
                        atLeastOneCard && isCarouselContainer && cardStyle === 'custom-card' && _react2.default.createElement(_View2.default, {
                            title: 'Not Supported',
                            description: 'Using custom cards within a carousel layout is currently not supported. Please re-author the component',
                            replaceValue: '' }),
                        isLoading && !atLeastOneCard && _react2.default.createElement(_Loader2.default, {
                            size: _constants.LOADER_SIZE.BIG,
                            hidden: !totalCardLimit,
                            absolute: true }),
                        !isApiFailure && !atLeastOneCard && !isLoading && _react2.default.createElement(_View2.default, {
                            title: noResultsTitle,
                            description: noResultsDescription,
                            replaceValue: searchQuery }),
                        isApiFailure && _react2.default.createElement(_View2.default, {
                            title: apiFailureTitle,
                            description: apiFailureDescription,
                            replaceValue: '' })
                    )
                )
            )
        )
    );
};

Container.defaultProps = {
    config: {}
};

exports.default = Container;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.makeConfigGetter = exports.getNumSelectedFilterItems = undefined;
exports.getDefaultSortOption = getDefaultSortOption;

var _general = __webpack_require__(6);

var _constants = __webpack_require__(14);

/**
 * Gets the number of selected filter items
 * @param {Array} filters - filters array
 * @returns {Number} - the number of selected filter items
 */
var getNumSelectedFilterItems = exports.getNumSelectedFilterItems = function getNumSelectedFilterItems(filters) {
    var filterItems = (0, _general.chainFromIterable)(filters.map(function (filter) {
        return filter.items;
    }));
    return (0, _general.getSelectedItemsCount)(filterItems);
};

/**
 * Returns the authored or default configuration value
 * @param {Object} config - main configuration object
 * @returns {Object} - authored or default configuration value
 */
var makeConfigGetter = exports.makeConfigGetter = function makeConfigGetter(config) {
    return function (object, key) {
        var objectPath = key ? object + '.' + key : object;
        var defaultValue = (0, _general.getByPath)(_constants.DEFAULT_CONFIG, objectPath);

        var value = (0, _general.getByPath)(config, objectPath);

        if ((0, _general.isNullish)(value)) {
            return defaultValue;
        }
        return value;
    };
};

/**
 * Gets the sorting option to use
 * @param {Object} config - configuration object
 * @param {String} query - title of a sort option
 * @returns {Object} - Sort Option or default if none is found
 */
function getDefaultSortOption(config, query) {
    var getConfig = makeConfigGetter(config);
    var sortOptions = getConfig('sort', 'options');
    var sortConstant = _constants.SORT_TYPES[query.toUpperCase()];

    return sortOptions.find(function (option) {
        return option.sort === query;
    }) || {
        label: sortConstant || 'Featured',
        sort: sortConstant || 'featured'
    };
}

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConfigContext = exports.ExpandableContext = exports.noOp = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A funtion-placeholder, used to handle cleanups
 * Defined explicitly so react doesn't re-create during re-renders
 * @returns {undefined} - returns undefined
 */
var noOp = exports.noOp = function noOp() {};

/**
 * Creates context for expandable components
 * @returns {Object} - ExpandableContext context object
 */
var ExpandableContext = exports.ExpandableContext = _react2.default.createContext({ value: null, setValue: noOp });

/**
 * Creates configuration context
 * @returns {Object} - ConfigContext context object
 */
var ConfigContext = exports.ConfigContext = _react2.default.createContext({});

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _htmlReactParser = __webpack_require__(225);

var _htmlReactParser2 = _interopRequireDefault(_htmlReactParser);

var _card = __webpack_require__(37);

var _general = __webpack_require__(6);

var _hooks = __webpack_require__(5);

var _Card = __webpack_require__(240);

var _Card2 = _interopRequireDefault(_Card);

var _withLinkTransformer = __webpack_require__(275);

var _withLinkTransformer2 = _interopRequireDefault(_withLinkTransformer);

var _constants = __webpack_require__(14);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TransformedCard = (0, _withLinkTransformer2.default)(_Card2.default);

var defaultProps = {
    pages: 1,
    cards: [],
    resultsPerPage: _constants.DEFAULT_SHOW_ITEMS_PER_PAGE,
    containerType: 'default',
    isAriaLiveActive: false,
    forwardedRef: null,
    renderOverlay: false
};

/**
 * Contains a grid of cards (of different styles)
 *
 * @component
 * @example
 * const props= {
    resultPerPage: Int,
    pages: Int,
    onCardBookmark: Boolean,
    cards: [],
 * }
 * return (
 *   <Grid {...props}/>
 * )
 */
var Grid = function Grid(props) {
    var resultsPerPage = props.resultsPerPage,
        pages = props.pages,
        onCardBookmark = props.onCardBookmark,
        cards = props.cards,
        containerType = props.containerType,
        isAriaLiveActive = props.isAriaLiveActive,
        forwardedRef = props.forwardedRef,
        renderOverlay = props.renderOverlay;

    /**
     **** Authored Configs ****
     */

    var getConfig = (0, _hooks.useConfig)();
    var collectionStyleOverride = getConfig('collection', 'cardStyle').replace('1:2', 'one-half').replace('3:4', 'three-fourths');
    var cardsGridLayout = getConfig('collection', 'layout.type');
    var cardsGridGutter = getConfig('collection', 'layout.gutter');
    var renderCardsBorders = getConfig('collection', 'setCardBorders');
    var renderFooterDivider = getConfig('collection', 'showFooterDivider');
    // const renderCardsOverlay = getConfig('collection', 'useOverlayLinks');
    var dateFormat = getConfig('collection', 'i18n.prettyDateIntervalFormat');
    var locale = getConfig('language', '');
    var paginationType = getConfig('pagination', 'type');
    var collectionButtonStyle = getConfig('collection', 'collectionButtonStyle');
    var cardHoverEffect = getConfig('collection', 'cardHoverEffect');

    var customCard = void 0;
    try {
        /* eslint-disable-next-line no-new-func */
        customCard = new Function('card', getConfig('customCard', '')[1]);
    } catch (e) {
        customCard = function customCard() {};
    }

    /**
     * Class name for the cards grid:
     * whether the grid should show 2, 3, 4 or 5 cards in a row;
     * whether the grid should have a gutter of 8px, 16px, 24px or 32px;
     * @type {String}
     */
    var gridClass = (0, _classnames2.default)({
        'consonant-CardsGrid': true,
        'consonant-CardsGrid--2up': cardsGridLayout === _constants.GRID_TYPE.TWO_UP,
        'consonant-CardsGrid--3up': cardsGridLayout === _constants.GRID_TYPE.THREE_UP,
        'consonant-CardsGrid--4up': cardsGridLayout === _constants.GRID_TYPE.FOUR_UP,
        'consonant-CardsGrid--5up': cardsGridLayout === _constants.GRID_TYPE.FIVE_UP,
        'consonant-CardsGrid--with1xGutter': cardsGridGutter === _constants.GUTTER_SIZE.GUTTER_1_X,
        'consonant-CardsGrid--with2xGutter': cardsGridGutter === _constants.GUTTER_SIZE.GUTTER_2_X,
        'consonant-CardsGrid--with3xGutter': cardsGridGutter === _constants.GUTTER_SIZE.GUTTER_3_X,
        'consonant-CardsGrid--with4xGutter': cardsGridGutter === _constants.GUTTER_SIZE.GUTTER_4_X,
        'consonant-CardsGrid--doubleWideCards': collectionStyleOverride === _constants.CARD_STYLES.DOUBLE_WIDE,
        'consonant-CardsGrid--blade': cardsGridLayout === _constants.GRID_TYPE.BLADE,
        'card-hover-grow': cardHoverEffect === 'grow'
    });

    var bannerMap = {
        live: {
            description: getConfig('collection', 'banner.live.description'),
            backgroundColor: '#ffffff',
            fontColor: '#d7373f',
            icon: 'https://www.adobe.com/content/dam/cc/icons/live_banner_icon.svg'
        },
        upcoming: {
            description: getConfig('collection', 'banner.upcoming.description'),
            backgroundColor: '#FC6B35',
            fontColor: '#000000',
            icon: ''
        },
        onDemand: {
            description: getConfig('collection', 'banner.onDemand.description'),
            backgroundColor: '#2D9D78',
            fontColor: '#000000',
            icon: ''
        },
        register: {
            description: getConfig('collection', 'banner.register.description'),
            backgroundColor: '#EBC526',
            fontColor: '#323232',
            icon: ''
        }
    };

    /* *** MWPW-164509 *** */
    var cardsPerPage = function cardsPerPage() {
        switch (cardsGridLayout) {
            case _constants.GRID_TYPE.BLADE:
                return 1;
            case _constants.GRID_TYPE.FIVE_UP:
                return 5;
            case _constants.GRID_TYPE.FOUR_UP:
                return 4;
            case _constants.GRID_TYPE.THREE_UP:
                return 3;
            default:
                return 2;
        }
    };

    /**
     * Whether the grid is a carousel
     * @type {Boolean}
     */
    var isCarousel = containerType === 'carousel';

    /**
     * Whether the paginator component is being used
     * @type {Boolean}
     */
    var isPaginator = paginationType === 'paginator';
    var isLoadMore = paginationType === 'loadMore';

    /**
     * Total pages to show (used if paginator component is set)
     * @type {Number}
     */
    var totalPages = resultsPerPage * pages;

    /**
     * The final cards to show in the collection
     * @type {Array}
     */
    var cardsToshow = cards;

    /**
     * Current page (used if paginator component is authored)
     * @type {Number}
     */
    var currentPage = resultsPerPage * (pages - 1);

    if (isPaginator) {
        cardsToshow = cards.slice(currentPage, totalPages);
    }

    /**
     * Current page (used if load more button is authored)
     * Or if the grid is a carousel
     * @type {Number}
     */
    if (isLoadMore || isCarousel) {
        cardsToshow = cards.slice(0, resultsPerPage * pages);
    }

    var cleanTitle = function cleanTitle(title) {
        return title.toString().replace(/\|/g, '-');
    };

    /**
     * Scrolls a card into view if any of its children is on focus.
     * @param {string} card - ID of the card to display
     */
    /* istanbul ignore next */
    var scrollCardIntoView = function scrollCardIntoView(card) {
        /* istanbul ignore if */
        if (!card) return;
        var element = document.getElementById(card);
        element.scrollIntoView({ block: 'nearest' });
    };

    /**
     * Determines whether ctas should be hidden on a given card
     * @param {Object} card - object to get value
     * @param {String} style - the collection button style
     * @returns {bool} - whether a cta should be hidden
     */
    var getHideCta = function getHideCta(card, style) {
        if (card.hideCtaId || card.hideCtaTags || style === 'hidden') return true;
        return false;
    };

    return cardsToshow.length > 0 && _react2.default.createElement(
        'div',
        {
            ref: forwardedRef,
            'data-card-style': collectionStyleOverride,
            'data-testid': 'consonant-CardsGrid',
            className: gridClass,
            'aria-live': isAriaLiveActive ? 'polite' : 'off' },
        cardsToshow.map(function (card, index) {
            var cardStyleOverride = (0, _general.getByPath)(card, 'styles.typeOverride');
            var cardStyle = collectionStyleOverride || cardStyleOverride;
            var _card$contentArea = card.contentArea;
            _card$contentArea = _card$contentArea === undefined ? {} : _card$contentArea;
            var _card$contentArea$tit = _card$contentArea.title,
                title = _card$contentArea$tit === undefined ? '' : _card$contentArea$tit,
                id = card.id;

            var cardNumber = index + 1;
            var hideCTA = getHideCta(card, collectionButtonStyle);
            var ariaHidden = index >= cardsPerPage();

            switch (cardStyle) {
                /* istanbul ignore next */
                case _constants.CARD_STYLES.CUSTOM:
                    return (0, _htmlReactParser2.default)(customCard(card));
                default:
                    return _react2.default.createElement(TransformedCard, _extends({
                        cardStyle: cardStyle,
                        lh: 'Card ' + cardNumber + ' | ' + cleanTitle(title) + ' | ' + id,
                        key: card.id
                    }, card, {
                        bannerMap: bannerMap,
                        onClick: onCardBookmark,
                        dateFormat: dateFormat,
                        locale: locale,
                        renderBorder: renderCardsBorders,
                        renderDivider: renderFooterDivider,
                        renderOverlay: renderOverlay,
                        hideCTA: hideCTA,
                        ariaHidden: ariaHidden,
                        tabIndex: ariaHidden ? -1 : 0
                        /* istanbul ignore next */
                        , onFocus: function onFocus() {
                            return scrollCardIntoView(card.id);
                        } }));
            }
        })
    );
};

Grid.defaultProps = defaultProps;

exports.default = Grid;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var reactProperty = __webpack_require__(228);
var utilities = __webpack_require__(108);

/**
 * Converts HTML/SVG DOM attributes to React props.
 *
 * @param {object} [attributes={}] - HTML/SVG DOM attributes.
 * @returns - React props.
 */
module.exports = function attributesToProps(attributes) {
  attributes = attributes || {};

  var valueOnlyInputs = {
    reset: true,
    submit: true
  };

  var attributeName;
  var attributeNameLowerCased;
  var attributeValue;
  var propName;
  var propertyInfo;
  var props = {};
  var inputIsValueOnly = attributes.type && valueOnlyInputs[attributes.type];

  for (attributeName in attributes) {
    attributeValue = attributes[attributeName];

    // ARIA (aria-*) or custom data (data-*) attribute
    if (reactProperty.isCustomAttribute(attributeName)) {
      props[attributeName] = attributeValue;
      continue;
    }

    // convert HTML/SVG attribute to React prop
    attributeNameLowerCased = attributeName.toLowerCase();
    propName = getPropName(attributeNameLowerCased);

    if (propName) {
      propertyInfo = reactProperty.getPropertyInfo(propName);

      // convert attribute to uncontrolled component prop (e.g., `value` to `defaultValue`)
      // https://reactjs.org/docs/uncontrolled-components.html
      if (
        (propName === 'checked' || propName === 'value') &&
        !inputIsValueOnly
      ) {
        propName = getPropName('default' + attributeNameLowerCased);
      }

      props[propName] = attributeValue;

      switch (propertyInfo && propertyInfo.type) {
        case reactProperty.BOOLEAN:
          props[propName] = true;
          break;
        case reactProperty.OVERLOADED_BOOLEAN:
          if (attributeValue === '') {
            props[propName] = true;
          }
          break;
      }
      continue;
    }

    // preserve custom attribute if React >=16
    if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {
      props[attributeName] = attributeValue;
    }
  }

  // transform inline style to object
  utilities.setStyleProp(attributes.style, props);

  return props;
};

/**
 * Gets prop name from lowercased attribute name.
 *
 * @param {string} attributeName - Lowercased attribute name.
 * @returns - Prop name.
 */
function getPropName(attributeName) {
  return reactProperty.possibleStandardNames[attributeName];
}


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__(0);
var styleToJS = __webpack_require__(230).default;

/**
 * Swap key with value in an object.
 *
 * @param {object} obj - The object.
 * @param {Function} [override] - The override method.
 * @returns - The inverted object.
 */
function invertObject(obj, override) {
  if (!obj || typeof obj !== 'object') {
    throw new TypeError('First argument must be an object');
  }

  var key;
  var value;
  var isOverridePresent = typeof override === 'function';
  var overrides = {};
  var result = {};

  for (key in obj) {
    value = obj[key];

    if (isOverridePresent) {
      overrides = override(key, value);
      if (overrides && overrides.length === 2) {
        result[overrides[0]] = overrides[1];
        continue;
      }
    }

    if (typeof value === 'string') {
      result[value] = key;
    }
  }

  return result;
}

/**
 * Check if a given tag is a custom component.
 *
 * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}
 *
 * @param {string} tagName - The name of the html tag.
 * @param {object} props - The props being passed to the element.
 * @returns - Whether tag is custom component.
 */
function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return props && typeof props.is === 'string';
  }

  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this whitelist too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;
    default:
      return true;
  }
}

var styleToJSOptions = { reactCompat: true };

/**
 * Sets style prop.
 *
 * @param {null|undefined|string} style
 * @param {object} props
 */
function setStyleProp(style, props) {
  if (style === null || style === undefined) {
    return;
  }
  try {
    props.style = styleToJS(style, styleToJSOptions);
  } catch (err) {
    props.style = {};
  }
}

/**
 * @constant {boolean}
 * @see {@link https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html}
 */
var PRESERVE_CUSTOM_ATTRIBUTES = React.version.split('.')[0] >= 16;

// Taken from
// https://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/client/validateDOMNesting.js#L213
var elementsWithNoTextChildren = new Set([
  'tr',
  'tbody',
  'thead',
  'tfoot',
  'colgroup',
  'table',
  'head',
  'html',
  'frameset'
]);

/**
 * Checks if the given node can contain text nodes
 *
 * @param {DomElement} node - Node.
 * @returns - Whether node can contain text nodes.
 */
function canTextBeChildOfNode(node) {
  return !elementsWithNoTextChildren.has(node.name);
}

module.exports = {
  PRESERVE_CUSTOM_ATTRIBUTES: PRESERVE_CUSTOM_ATTRIBUTES,
  invertObject: invertObject,
  isCustomComponent: isCustomComponent,
  setStyleProp: setStyleProp,
  canTextBeChildOfNode: canTextBeChildOfNode,
  elementsWithNoTextChildren: elementsWithNoTextChildren
};


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

var constants = __webpack_require__(237);
var domhandler = __webpack_require__(238);

var CASE_SENSITIVE_TAG_NAMES = constants.CASE_SENSITIVE_TAG_NAMES;

var Comment = domhandler.Comment;
var Element = domhandler.Element;
var ProcessingInstruction = domhandler.ProcessingInstruction;
var Text = domhandler.Text;

var caseSensitiveTagNamesMap = {};
var tagName;

for (var i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {
  tagName = CASE_SENSITIVE_TAG_NAMES[i];
  caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;
}

/**
 * Gets case-sensitive tag name.
 *
 * @param  {string}           tagName - Tag name in lowercase.
 * @return {string|undefined}         - Case-sensitive tag name.
 */
function getCaseSensitiveTagName(tagName) {
  return caseSensitiveTagNamesMap[tagName];
}

/**
 * Formats DOM attributes to a hash map.
 *
 * @param  {NamedNodeMap} attributes - List of attributes.
 * @return {object}                  - Map of attribute name to value.
 */
function formatAttributes(attributes) {
  var result = {};
  var attribute;
  // `NamedNodeMap` is array-like
  for (var i = 0, len = attributes.length; i < len; i++) {
    attribute = attributes[i];
    result[attribute.name] = attribute.value;
  }
  return result;
}

/**
 * Corrects the tag name if it is case-sensitive (SVG).
 * Otherwise, returns the lowercase tag name (HTML).
 *
 * @param  {string} tagName - Lowercase tag name.
 * @return {string}         - Formatted tag name.
 */
function formatTagName(tagName) {
  tagName = tagName.toLowerCase();
  var caseSensitiveTagName = getCaseSensitiveTagName(tagName);
  if (caseSensitiveTagName) {
    return caseSensitiveTagName;
  }
  return tagName;
}

/**
 * Transforms DOM nodes to `domhandler` nodes.
 *
 * @param  {NodeList}     nodes         - DOM nodes.
 * @param  {Element|null} [parent=null] - Parent node.
 * @param  {string}       [directive]   - Directive.
 * @return {Array<Comment|Element|ProcessingInstruction|Text>}
 */
function formatDOM(nodes, parent, directive) {
  parent = parent || null;
  var result = [];

  for (var index = 0, len = nodes.length; index < len; index++) {
    var node = nodes[index];
    var current;

    // set the node data given the type
    switch (node.nodeType) {
      case 1:
        // script, style, or tag
        current = new Element(
          formatTagName(node.nodeName),
          formatAttributes(node.attributes)
        );
        current.children = formatDOM(node.childNodes, current);
        break;

      case 3:
        current = new Text(node.nodeValue);
        break;

      case 8:
        current = new Comment(node.nodeValue);
        break;

      default:
        continue;
    }

    // set previous node next
    var prev = result[index - 1] || null;
    if (prev) {
      prev.next = current;
    }

    // set properties for current node
    current.parent = parent;
    current.prev = prev;
    current.next = null;

    result.push(current);
  }

  if (directive) {
    current = new ProcessingInstruction(
      directive.substring(0, directive.indexOf(' ')).toLowerCase(),
      directive
    );
    current.next = result[0] || null;
    current.parent = parent;
    result.unshift(current);

    if (result[1]) {
      result[1].prev = result[0];
    }
  }

  return result;
}

/**
 * Detects if browser is Internet Explorer.
 *
 * @return {boolean} - Whether IE is detected.
 */
function isIE() {
  return /(MSIE |Trident\/|Edge\/)/.test(navigator.userAgent);
}

module.exports = {
  formatAttributes: formatAttributes,
  formatDOM: formatDOM,
  isIE: isIE
};


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cloneNode = exports.hasChildren = exports.isDocument = exports.isDirective = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = exports.Element = exports.Document = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;
var domelementtype_1 = __webpack_require__(65);
var nodeTypes = new Map([
    [domelementtype_1.ElementType.Tag, 1],
    [domelementtype_1.ElementType.Script, 1],
    [domelementtype_1.ElementType.Style, 1],
    [domelementtype_1.ElementType.Directive, 1],
    [domelementtype_1.ElementType.Text, 3],
    [domelementtype_1.ElementType.CDATA, 4],
    [domelementtype_1.ElementType.Comment, 8],
    [domelementtype_1.ElementType.Root, 9],
]);
/**
 * This object will be used as the prototype for Nodes when creating a
 * DOM-Level-1-compliant structure.
 */
var Node = /** @class */ (function () {
    /**
     *
     * @param type The type of the node.
     */
    function Node(type) {
        this.type = type;
        /** Parent of the node */
        this.parent = null;
        /** Previous sibling */
        this.prev = null;
        /** Next sibling */
        this.next = null;
        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */
        this.startIndex = null;
        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */
        this.endIndex = null;
    }
    Object.defineProperty(Node.prototype, "nodeType", {
        // Read-only aliases
        /**
         * [DOM spec](https://dom.spec.whatwg.org/#dom-node-nodetype)-compatible
         * node {@link type}.
         */
        get: function () {
            var _a;
            return (_a = nodeTypes.get(this.type)) !== null && _a !== void 0 ? _a : 1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Node.prototype, "parentNode", {
        // Read-write aliases for properties
        /**
         * Same as {@link parent}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.parent;
        },
        set: function (parent) {
            this.parent = parent;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Node.prototype, "previousSibling", {
        /**
         * Same as {@link prev}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.prev;
        },
        set: function (prev) {
            this.prev = prev;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Node.prototype, "nextSibling", {
        /**
         * Same as {@link next}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.next;
        },
        set: function (next) {
            this.next = next;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Clone this node, and optionally its children.
     *
     * @param recursive Clone child nodes as well.
     * @returns A clone of the node.
     */
    Node.prototype.cloneNode = function (recursive) {
        if (recursive === void 0) { recursive = false; }
        return cloneNode(this, recursive);
    };
    return Node;
}());
exports.Node = Node;
/**
 * A node that contains some data.
 */
var DataNode = /** @class */ (function (_super) {
    __extends(DataNode, _super);
    /**
     * @param type The type of the node
     * @param data The content of the data node
     */
    function DataNode(type, data) {
        var _this = _super.call(this, type) || this;
        _this.data = data;
        return _this;
    }
    Object.defineProperty(DataNode.prototype, "nodeValue", {
        /**
         * Same as {@link data}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.data;
        },
        set: function (data) {
            this.data = data;
        },
        enumerable: false,
        configurable: true
    });
    return DataNode;
}(Node));
exports.DataNode = DataNode;
/**
 * Text within the document.
 */
var Text = /** @class */ (function (_super) {
    __extends(Text, _super);
    function Text(data) {
        return _super.call(this, domelementtype_1.ElementType.Text, data) || this;
    }
    return Text;
}(DataNode));
exports.Text = Text;
/**
 * Comments within the document.
 */
var Comment = /** @class */ (function (_super) {
    __extends(Comment, _super);
    function Comment(data) {
        return _super.call(this, domelementtype_1.ElementType.Comment, data) || this;
    }
    return Comment;
}(DataNode));
exports.Comment = Comment;
/**
 * Processing instructions, including doc types.
 */
var ProcessingInstruction = /** @class */ (function (_super) {
    __extends(ProcessingInstruction, _super);
    function ProcessingInstruction(name, data) {
        var _this = _super.call(this, domelementtype_1.ElementType.Directive, data) || this;
        _this.name = name;
        return _this;
    }
    return ProcessingInstruction;
}(DataNode));
exports.ProcessingInstruction = ProcessingInstruction;
/**
 * A `Node` that can have children.
 */
var NodeWithChildren = /** @class */ (function (_super) {
    __extends(NodeWithChildren, _super);
    /**
     * @param type Type of the node.
     * @param children Children of the node. Only certain node types can have children.
     */
    function NodeWithChildren(type, children) {
        var _this = _super.call(this, type) || this;
        _this.children = children;
        return _this;
    }
    Object.defineProperty(NodeWithChildren.prototype, "firstChild", {
        // Aliases
        /** First child of the node. */
        get: function () {
            var _a;
            return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeWithChildren.prototype, "lastChild", {
        /** Last child of the node. */
        get: function () {
            return this.children.length > 0
                ? this.children[this.children.length - 1]
                : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeWithChildren.prototype, "childNodes", {
        /**
         * Same as {@link children}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.children;
        },
        set: function (children) {
            this.children = children;
        },
        enumerable: false,
        configurable: true
    });
    return NodeWithChildren;
}(Node));
exports.NodeWithChildren = NodeWithChildren;
/**
 * The root node of the document.
 */
var Document = /** @class */ (function (_super) {
    __extends(Document, _super);
    function Document(children) {
        return _super.call(this, domelementtype_1.ElementType.Root, children) || this;
    }
    return Document;
}(NodeWithChildren));
exports.Document = Document;
/**
 * An element within the DOM.
 */
var Element = /** @class */ (function (_super) {
    __extends(Element, _super);
    /**
     * @param name Name of the tag, eg. `div`, `span`.
     * @param attribs Object mapping attribute names to attribute values.
     * @param children Children of the node.
     */
    function Element(name, attribs, children, type) {
        if (children === void 0) { children = []; }
        if (type === void 0) { type = name === "script"
            ? domelementtype_1.ElementType.Script
            : name === "style"
                ? domelementtype_1.ElementType.Style
                : domelementtype_1.ElementType.Tag; }
        var _this = _super.call(this, type, children) || this;
        _this.name = name;
        _this.attribs = attribs;
        return _this;
    }
    Object.defineProperty(Element.prototype, "tagName", {
        // DOM Level 1 aliases
        /**
         * Same as {@link name}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.name;
        },
        set: function (name) {
            this.name = name;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Element.prototype, "attributes", {
        get: function () {
            var _this = this;
            return Object.keys(this.attribs).map(function (name) {
                var _a, _b;
                return ({
                    name: name,
                    value: _this.attribs[name],
                    namespace: (_a = _this["x-attribsNamespace"]) === null || _a === void 0 ? void 0 : _a[name],
                    prefix: (_b = _this["x-attribsPrefix"]) === null || _b === void 0 ? void 0 : _b[name],
                });
            });
        },
        enumerable: false,
        configurable: true
    });
    return Element;
}(NodeWithChildren));
exports.Element = Element;
/**
 * @param node Node to check.
 * @returns `true` if the node is a `Element`, `false` otherwise.
 */
function isTag(node) {
    return (0, domelementtype_1.isTag)(node);
}
exports.isTag = isTag;
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `CDATA`, `false` otherwise.
 */
function isCDATA(node) {
    return node.type === domelementtype_1.ElementType.CDATA;
}
exports.isCDATA = isCDATA;
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `Text`, `false` otherwise.
 */
function isText(node) {
    return node.type === domelementtype_1.ElementType.Text;
}
exports.isText = isText;
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `Comment`, `false` otherwise.
 */
function isComment(node) {
    return node.type === domelementtype_1.ElementType.Comment;
}
exports.isComment = isComment;
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.
 */
function isDirective(node) {
    return node.type === domelementtype_1.ElementType.Directive;
}
exports.isDirective = isDirective;
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.
 */
function isDocument(node) {
    return node.type === domelementtype_1.ElementType.Root;
}
exports.isDocument = isDocument;
/**
 * @param node Node to check.
 * @returns `true` if the node is a `NodeWithChildren` (has children), `false` otherwise.
 */
function hasChildren(node) {
    return Object.prototype.hasOwnProperty.call(node, "children");
}
exports.hasChildren = hasChildren;
/**
 * Clone a node, and optionally its children.
 *
 * @param recursive Clone child nodes as well.
 * @returns A clone of the node.
 */
function cloneNode(node, recursive) {
    if (recursive === void 0) { recursive = false; }
    var result;
    if (isText(node)) {
        result = new Text(node.data);
    }
    else if (isComment(node)) {
        result = new Comment(node.data);
    }
    else if (isTag(node)) {
        var children = recursive ? cloneChildren(node.children) : [];
        var clone_1 = new Element(node.name, __assign({}, node.attribs), children);
        children.forEach(function (child) { return (child.parent = clone_1); });
        if (node.namespace != null) {
            clone_1.namespace = node.namespace;
        }
        if (node["x-attribsNamespace"]) {
            clone_1["x-attribsNamespace"] = __assign({}, node["x-attribsNamespace"]);
        }
        if (node["x-attribsPrefix"]) {
            clone_1["x-attribsPrefix"] = __assign({}, node["x-attribsPrefix"]);
        }
        result = clone_1;
    }
    else if (isCDATA(node)) {
        var children = recursive ? cloneChildren(node.children) : [];
        var clone_2 = new NodeWithChildren(domelementtype_1.ElementType.CDATA, children);
        children.forEach(function (child) { return (child.parent = clone_2); });
        result = clone_2;
    }
    else if (isDocument(node)) {
        var children = recursive ? cloneChildren(node.children) : [];
        var clone_3 = new Document(children);
        children.forEach(function (child) { return (child.parent = clone_3); });
        if (node["x-mode"]) {
            clone_3["x-mode"] = node["x-mode"];
        }
        result = clone_3;
    }
    else if (isDirective(node)) {
        var instruction = new ProcessingInstruction(node.name, node.data);
        if (node["x-name"] != null) {
            instruction["x-name"] = node["x-name"];
            instruction["x-publicId"] = node["x-publicId"];
            instruction["x-systemId"] = node["x-systemId"];
        }
        result = instruction;
    }
    else {
        throw new Error("Not implemented yet: ".concat(node.type));
    }
    result.startIndex = node.startIndex;
    result.endIndex = node.endIndex;
    if (node.sourceCodeLocation != null) {
        result.sourceCodeLocation = node.sourceCodeLocation;
    }
    return result;
}
exports.cloneNode = cloneNode;
function cloneChildren(childs) {
    var children = childs.map(function (child) { return cloneNode(child, true); });
    for (var i = 1; i < children.length; i++) {
        children[i].prev = children[i - 1];
        children[i - 1].next = children[i];
    }
    return children;
}


/***/ }),
/* 111 */
/***/ (function(module, exports) {

module.exports = function pad (num, size) {
  var s = '000000000' + num;
  return s.substr(s.length - size);
};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _reactDom = __webpack_require__(101);

var _videoModal = __webpack_require__(249);

var _videoModal2 = _interopRequireDefault(_videoModal);

var _modal = __webpack_require__(250);

var _modal2 = _interopRequireDefault(_modal);

var _hooks = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VideoButton = function VideoButton(_ref) {
    var title = _ref.title,
        name = _ref.name,
        videoURL = _ref.videoURL,
        gateVideo = _ref.gateVideo,
        className = _ref.className,
        videoPolicy = _ref.videoPolicy,
        tabIndex = _ref.tabIndex;

    var getConfig = (0, _hooks.useConfig)();
    var modalContainer = document.querySelector('.modalContainer');
    var playVideo = getConfig('collection', 'i18n.playVideo');

    var modalElement = (0, _react.useRef)(null);

    var _useState = (0, _react.useState)(false),
        _useState2 = _slicedToArray(_useState, 2),
        isOpen = _useState2[0],
        setIsOpen = _useState2[1];

    var isAuthoredModal = /^#[a-zA-Z0-9_-]+/.test(videoURL);
    var isFullUrl = /https?:\/\/[a-zA-Z0-9_-]+/.test(videoURL);
    var ariaLabel = playVideo.replace('{cardTitle}', title);

    var handleShowModal = function handleShowModal() {
        if (isAuthoredModal) {
            window.location.hash = new URL(videoURL, document.baseURI).hash;
        } else if (isFullUrl && gateVideo) {
            window.open(videoURL, '_blank');
        } else {
            setIsOpen(true);
        }
    };

    var handleCloseModal = function handleCloseModal() {
        setIsOpen(false);
    };

    var handleOverlayClose = function handleOverlayClose() {
        setIsOpen(false);
    };

    (0, _react.useEffect)(function () {
        if (isOpen && modalElement && modalElement.current) {
            var videoModal = new _modal2.default(modalElement.current, {
                buttonClose: handleCloseModal,
                overlayClose: handleOverlayClose
            });

            videoModal.open();
        }
    }, [isOpen, modalElement]);

    return _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement(
            'div',
            {
                className: 'consonant-Card-videoButton-wrapper',
                'data-testid': 'consonant-Card-videoButton-wrapper' },
            _react2.default.createElement(
                'button',
                {
                    'daa-ll': 'play',
                    'aria-label': ariaLabel,
                    onClick: handleShowModal,
                    tabIndex: tabIndex,
                    className: className },
                className.includes('caas-modal-cta') && _react2.default.createElement(
                    'span',
                    null,
                    name
                )
            )
        ),
        isOpen && (0, _reactDom.createPortal)(_react2.default.createElement(_videoModal2.default, {
            name: name,
            videoURL: videoURL,
            innerRef: modalElement,
            videoPolicy: videoPolicy }), modalContainer)
    );
};

VideoButton.defaultProps = {
    title: '',
    name: 'video-modal',
    videoPolicy: 'autoplay; fullscreen',
    gateVideo: false,
    tabIndex: 0
};

exports.default = (0, _react.memo)(VideoButton);

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Gets the Localized Local Time Zone
 * @param {Date} someTimeUTC - An authored time in UTC
 * @returns {Date} - Locale Time Zone in abbreviated named offset
 * @example - EST
 */
var getLocalTimeZone = function getLocalTimeZone(someTimeUTC, someLocale) {
  return new Date(someTimeUTC).toLocaleTimeString(someLocale, { timeZoneName: 'short' }).split(' ').slice(-1)[0];
};

/**
 * Gets the Local Time Interval
 * @param {Date} startDateUTC - An authored start date in UTC
 * @param {Date} endDateUTC - An authored end date in UTC
 * @param {String} locale - Locale to translate things to
 * @returns {Date} - Time Interval in localized 24-hour time
 * @example - 13:00 - 14:45
 */
var getTimeInterval = function getTimeInterval(startTimeUTC, endTimeUTC, someLocale) {
  var options = { hour: '2-digit', minute: '2-digit' };

  var startTime = new Date(startTimeUTC).toLocaleTimeString(someLocale, options);
  var endTime = new Date(endTimeUTC).toLocaleTimeString(someLocale, options);

  return startTime + ' - ' + endTime;
};

/**
 * Gets the localized day
 * @param {Date} someTimeUTC - An authored time in UTC
 * @returns {Date} - A day of the month, padded to 2
 * @example - 06
 */
var getDay = function getDay(someTimeUTC, someLocale) {
  return new Date(someTimeUTC).toLocaleDateString(someLocale, { day: '2-digit' });
};

/**
 * Gets the localized month
 * @param {Date} someTimeUTC - An authored time in UTC
 * @returns {Date} - Month as an abbreviated localized string
 * @example - Aug
 */
var getMonth = function getMonth(someTimeUTC, someLocale) {
  return new Date(someTimeUTC).toLocaleDateString(someLocale, { month: 'short' });
};

/**
 * Gets the localized day of the week
 * @param {Date} someTimeUTC - An authored time in UTC
 * @returns {Date} - A day of the month, padded to 2
 * @example - Tue
 */
var getDayOfTheWeek = function getDayOfTheWeek(someTimeUTC, someLocale) {
  return new Date(someTimeUTC).toLocaleDateString(someLocale, { weekday: 'short' });
};

/**
 * Gets Date Interval for Infobit in pretty format
 * @param {Date} startDateUTC - An authored start date in UTC
 * @param {Date} endDateUTC - An authored end date in UTC
 * @param {String} locale - Locale to translate things to
 * @param {String} i18nFormat - Format from AEM on how to render date
 * @returns {String} - Date interval in pretty format
 * @example - Oct 20 | 13:00 - 14:45 PDT
 */
var getPrettyDateInterval = function getPrettyDateInterval(startDateUTC, endDateUTC, locale, i18nFormat) {
  return i18nFormat.replace('{LLL}', getMonth(startDateUTC, locale)).replace('{dd}', getDay(startDateUTC, locale)).replace('{ddd}', getDayOfTheWeek(startDateUTC, locale)).replace('{timeRange}', getTimeInterval(startDateUTC, endDateUTC, locale)).replace('{timeZone}', getLocalTimeZone(startDateUTC, locale));
};

exports.default = getPrettyDateInterval;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(115);
module.exports = __webpack_require__(302);


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.authorWatch = exports.collectionLoadedThroughXf = exports.initReact = exports.ConsonantCardCollecton = undefined;

__webpack_require__(116);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(101);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactDomComponents = __webpack_require__(102);

var _general = __webpack_require__(6);

var _lana = __webpack_require__(48);

var _Container = __webpack_require__(103);

var _Container2 = _interopRequireDefault(_Container);

var _ConsonantPageDOM = __webpack_require__(300);

var _ConsonantPageDOM2 = _interopRequireDefault(_ConsonantPageDOM);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } /* eslint-disable */


// Runtime accessibility auditing in development with react-axe
if (false) {
    /* eslint-disable-next-line global-require */
    var ReactAxe = require('react-axe');
    ReactAxe(_react2.default, _reactDom2.default, 1000);
}

var domRegistry = new _reactDomComponents.DOMRegistry(_react2.default, _reactDom.render);
domRegistry.register({
    consonantPageRDC: _ConsonantPageDOM2.default
});

try {
    (0, _lana.loadLana)();
} catch (e) {
    window.lana = {
        log: function log() {}
    };
}

var initReact = function initReact(element) {
    var registry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : domRegistry;

    registry.init(element);
};

initReact(document);

function collectionLoadedThroughXf(el) {
    if (!el) return false; // Ensure el is not null or undefined
    var container = el.firstElementChild;
    var consonantCardCollection = null;
    if (container !== null) {
        consonantCardCollection = container.querySelectorAll('.consonantcardcollection');
    }
    return el.className.indexOf('experiencefragment') !== -1 && consonantCardCollection !== null && consonantCardCollection.length > 0;
}

var prev = null;
function authorWatch(el) {
    var registry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : domRegistry;

    if (prev !== el && collectionLoadedThroughXf(el)) {
        prev = el;
        registry.render(_ConsonantPageDOM2.default);
    }
}

// Add to DXF Registry
try {
    window.dexter.dxf.registerApp(initReact);
} catch (e) {
    /* eslint-disable no-empty */
}

var ConsonantCardCollecton = exports.ConsonantCardCollecton = function ConsonantCardCollecton(config, element) {
    _classCallCheck(this, ConsonantCardCollecton);

    _reactDom2.default.render(_react2.default.createElement(
        _react2.default.Fragment,
        null,
        _react2.default.createElement(_Container2.default, { config: (0, _general.parseToPrimitive)(config) })
    ), element);
};

window.ConsonantCardCollection = ConsonantCardCollecton;

if (window.Granite && window.dx) {
    window.dx.author.watch.registerFunction(authorWatch);
}
exports.initReact = initReact;
exports.collectionLoadedThroughXf = collectionLoadedThroughXf;
exports.authorWatch = authorWatch; // Export the functions

exports.default = initReact;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(117);

__webpack_require__(121);

__webpack_require__(123);

__webpack_require__(127);

__webpack_require__(129);

__webpack_require__(134);

__webpack_require__(135);

__webpack_require__(136);

__webpack_require__(137);

__webpack_require__(166);

__webpack_require__(170);

__webpack_require__(178);

__webpack_require__(180);

__webpack_require__(182);

__webpack_require__(185);

__webpack_require__(187);

__webpack_require__(189);

__webpack_require__(191);

__webpack_require__(194);

__webpack_require__(196);

__webpack_require__(199);

__webpack_require__(201);

__webpack_require__(98);

__webpack_require__(203);

__webpack_require__(204);

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(118);
module.exports = __webpack_require__(3).Array.includes;


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __webpack_require__(2);
var $includes = __webpack_require__(69)(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__(51)('includes');


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(39)('native-function-to-string', Function.toString);


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(34);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(70);
module.exports = __webpack_require__(3).Object.assign;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__(10);
var getKeys = __webpack_require__(30);
var gOPS = __webpack_require__(40);
var pIE = __webpack_require__(35);
var toObject = __webpack_require__(13);
var IObject = __webpack_require__(50);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(15)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(124);
module.exports = __webpack_require__(3).Array.findIndex;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = __webpack_require__(2);
var $find = __webpack_require__(72)(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(51)(KEY);


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(126);

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(8);
var isArray = __webpack_require__(73);
var SPECIES = __webpack_require__(4)('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(128);
module.exports = __webpack_require__(3).Array.find;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = __webpack_require__(2);
var $find = __webpack_require__(72)(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(51)(KEY);


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(130);
__webpack_require__(133);
module.exports = __webpack_require__(3).Array.from;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(74)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(131)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(27);
var $export = __webpack_require__(2);
var redefine = __webpack_require__(26);
var hide = __webpack_require__(22);
var Iterators = __webpack_require__(54);
var $iterCreate = __webpack_require__(132);
var setToStringTag = __webpack_require__(42);
var getPrototypeOf = __webpack_require__(43);
var ITERATOR = __webpack_require__(4)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(41);
var descriptor = __webpack_require__(32);
var setToStringTag = __webpack_require__(42);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(22)(IteratorPrototype, __webpack_require__(4)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(24);
var $export = __webpack_require__(2);
var toObject = __webpack_require__(13);
var call = __webpack_require__(77);
var isArrayIter = __webpack_require__(78);
var toLength = __webpack_require__(18);
var createProperty = __webpack_require__(79);
var getIterFn = __webpack_require__(80);

$export($export.S + $export.F * !__webpack_require__(81)(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(82);
module.exports = __webpack_require__(3).Object.entries;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(84);
module.exports = __webpack_require__(3).Object.values;


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(85);
module.exports = __webpack_require__(3).Object.is;


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(138);
__webpack_require__(141);
__webpack_require__(142);
__webpack_require__(143);
__webpack_require__(144);
__webpack_require__(145);
__webpack_require__(146);
__webpack_require__(147);
__webpack_require__(148);
__webpack_require__(149);
__webpack_require__(150);
__webpack_require__(151);
__webpack_require__(152);
__webpack_require__(153);
__webpack_require__(70);
__webpack_require__(85);
__webpack_require__(154);
__webpack_require__(156);
__webpack_require__(157);
__webpack_require__(84);
__webpack_require__(82);
__webpack_require__(158);
__webpack_require__(159);
__webpack_require__(160);
__webpack_require__(161);
__webpack_require__(162);
__webpack_require__(163);
__webpack_require__(164);
__webpack_require__(165);
module.exports = __webpack_require__(3).Object;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(9);
var has = __webpack_require__(23);
var DESCRIPTORS = __webpack_require__(10);
var $export = __webpack_require__(2);
var redefine = __webpack_require__(26);
var META = __webpack_require__(44).KEY;
var $fails = __webpack_require__(15);
var shared = __webpack_require__(39);
var setToStringTag = __webpack_require__(42);
var uid = __webpack_require__(33);
var wks = __webpack_require__(4);
var wksExt = __webpack_require__(87);
var wksDefine = __webpack_require__(139);
var enumKeys = __webpack_require__(140);
var isArray = __webpack_require__(73);
var anObject = __webpack_require__(11);
var isObject = __webpack_require__(8);
var toObject = __webpack_require__(13);
var toIObject = __webpack_require__(17);
var toPrimitive = __webpack_require__(31);
var createDesc = __webpack_require__(32);
var _create = __webpack_require__(41);
var gOPNExt = __webpack_require__(88);
var $GOPD = __webpack_require__(25);
var $GOPS = __webpack_require__(40);
var $DP = __webpack_require__(12);
var $keys = __webpack_require__(30);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(55).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(35).f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(27)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(22)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(9);
var core = __webpack_require__(3);
var LIBRARY = __webpack_require__(27);
var wksExt = __webpack_require__(87);
var defineProperty = __webpack_require__(12).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(30);
var gOPS = __webpack_require__(40);
var pIE = __webpack_require__(35);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(2);
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(41) });


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(2);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(10), 'Object', { defineProperty: __webpack_require__(12).f });


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(2);
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !__webpack_require__(10), 'Object', { defineProperties: __webpack_require__(75) });


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__(17);
var $getOwnPropertyDescriptor = __webpack_require__(25).f;

__webpack_require__(16)('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__(13);
var $getPrototypeOf = __webpack_require__(43);

__webpack_require__(16)('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(13);
var $keys = __webpack_require__(30);

__webpack_require__(16)('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 Object.getOwnPropertyNames(O)
__webpack_require__(16)('getOwnPropertyNames', function () {
  return __webpack_require__(88).f;
});


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.5 Object.freeze(O)
var isObject = __webpack_require__(8);
var meta = __webpack_require__(44).onFreeze;

__webpack_require__(16)('freeze', function ($freeze) {
  return function freeze(it) {
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.17 Object.seal(O)
var isObject = __webpack_require__(8);
var meta = __webpack_require__(44).onFreeze;

__webpack_require__(16)('seal', function ($seal) {
  return function seal(it) {
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.15 Object.preventExtensions(O)
var isObject = __webpack_require__(8);
var meta = __webpack_require__(44).onFreeze;

__webpack_require__(16)('preventExtensions', function ($preventExtensions) {
  return function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.12 Object.isFrozen(O)
var isObject = __webpack_require__(8);

__webpack_require__(16)('isFrozen', function ($isFrozen) {
  return function isFrozen(it) {
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.13 Object.isSealed(O)
var isObject = __webpack_require__(8);

__webpack_require__(16)('isSealed', function ($isSealed) {
  return function isSealed(it) {
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.11 Object.isExtensible(O)
var isObject = __webpack_require__(8);

__webpack_require__(16)('isExtensible', function ($isExtensible) {
  return function isExtensible(it) {
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(2);
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(155).set });


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(8);
var anObject = __webpack_require__(11);
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(24)(Function.call, __webpack_require__(25).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.3.6 Object.prototype.toString()
var classof = __webpack_require__(36);
var test = {};
test[__webpack_require__(4)('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  __webpack_require__(26)(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = __webpack_require__(2);
var ownKeys = __webpack_require__(89);
var toIObject = __webpack_require__(17);
var gOPD = __webpack_require__(25);
var createProperty = __webpack_require__(79);

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;
    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }
    return result;
  }
});


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(2);
var toObject = __webpack_require__(13);
var aFunction = __webpack_require__(28);
var $defineProperty = __webpack_require__(12);

// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
__webpack_require__(10) && $export($export.P + __webpack_require__(45), 'Object', {
  __defineGetter__: function __defineGetter__(P, getter) {
    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
  }
});


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(2);
var toObject = __webpack_require__(13);
var aFunction = __webpack_require__(28);
var $defineProperty = __webpack_require__(12);

// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
__webpack_require__(10) && $export($export.P + __webpack_require__(45), 'Object', {
  __defineSetter__: function __defineSetter__(P, setter) {
    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
  }
});


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(2);
var toObject = __webpack_require__(13);
var toPrimitive = __webpack_require__(31);
var getPrototypeOf = __webpack_require__(43);
var getOwnPropertyDescriptor = __webpack_require__(25).f;

// B.2.2.4 Object.prototype.__lookupGetter__(P)
__webpack_require__(10) && $export($export.P + __webpack_require__(45), 'Object', {
  __lookupGetter__: function __lookupGetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
    } while (O = getPrototypeOf(O));
  }
});


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(2);
var toObject = __webpack_require__(13);
var toPrimitive = __webpack_require__(31);
var getPrototypeOf = __webpack_require__(43);
var getOwnPropertyDescriptor = __webpack_require__(25).f;

// B.2.2.5 Object.prototype.__lookupSetter__(P)
__webpack_require__(10) && $export($export.P + __webpack_require__(45), 'Object', {
  __lookupSetter__: function __lookupSetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
    } while (O = getPrototypeOf(O));
  }
});


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(2);

$export($export.S + $export.F, 'Object', { isObject: __webpack_require__(8) });


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(2);

$export($export.S + $export.F, 'Object', { classof: __webpack_require__(36) });


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(2);
var define = __webpack_require__(90);

$export($export.S + $export.F, 'Object', { define: define });


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(2);
var define = __webpack_require__(90);
var create = __webpack_require__(41);

$export($export.S + $export.F, 'Object', {
  make: function (proto, mixin) {
    return define(create(proto), mixin);
  }
});


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(167);
module.exports = __webpack_require__(3).String.startsWith;


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export = __webpack_require__(2);
var toLength = __webpack_require__(18);
var context = __webpack_require__(168);
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __webpack_require__(169)(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__(91);
var defined = __webpack_require__(20);

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__(4)('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(92);
__webpack_require__(177);
module.exports = __webpack_require__(3).Promise['finally'];


/***/ }),
/* 171 */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(24);
var call = __webpack_require__(77);
var isArrayIter = __webpack_require__(78);
var anObject = __webpack_require__(11);
var toLength = __webpack_require__(18);
var getIterFn = __webpack_require__(80);
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),
/* 173 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(9);
var macrotask = __webpack_require__(93).set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(29)(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(26);
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(9);
var dP = __webpack_require__(12);
var DESCRIPTORS = __webpack_require__(10);
var SPECIES = __webpack_require__(4)('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(2);
var core = __webpack_require__(3);
var global = __webpack_require__(9);
var speciesConstructor = __webpack_require__(56);
var promiseResolve = __webpack_require__(95);

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(92);
__webpack_require__(179);
var $Promise = __webpack_require__(3).Promise;
var $try = $Promise['try'];
module.exports = { 'try': function (callbackfn) {
  return $try.call(typeof this === 'function' ? this : $Promise, callbackfn);
} }['try'];


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__(2);
var newPromiseCapability = __webpack_require__(57);
var perform = __webpack_require__(94);

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(181);
var flags = __webpack_require__(59);
module.exports = function (it) {
  return flags.call(it);
};


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__(10) && /./g.flags != 'g') __webpack_require__(12).f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__(59)
});


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(183);
var MATCH = __webpack_require__(4)('match');
module.exports = function (it, str) {
  return RegExp.prototype[MATCH].call(it, str);
};


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(11);
var toLength = __webpack_require__(18);
var advanceStringIndex = __webpack_require__(60);
var regExpExec = __webpack_require__(46);

// @@match logic
__webpack_require__(47)('match', 1, function (defined, MATCH, $match, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative($match, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      if (!rx.global) return regExpExec(rx, S);
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpExec = __webpack_require__(61);
__webpack_require__(2)({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(186);
var REPLACE = __webpack_require__(4)('replace');
module.exports = function (it, str, replacer) {
  return RegExp.prototype[REPLACE].call(it, str, replacer);
};


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(11);
var toObject = __webpack_require__(13);
var toLength = __webpack_require__(18);
var toInteger = __webpack_require__(34);
var advanceStringIndex = __webpack_require__(60);
var regExpExec = __webpack_require__(46);
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__webpack_require__(47)('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(188);
var SEARCH = __webpack_require__(4)('search');
module.exports = function (it, str) {
  return RegExp.prototype[SEARCH].call(it, str);
};


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(11);
var sameValue = __webpack_require__(86);
var regExpExec = __webpack_require__(46);

// @@search logic
__webpack_require__(47)('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative($search, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(190);
var SPLIT = __webpack_require__(4)('split');
module.exports = function (it, str, limit) {
  return RegExp.prototype[SPLIT].call(it, str, limit);
};


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isRegExp = __webpack_require__(91);
var anObject = __webpack_require__(11);
var speciesConstructor = __webpack_require__(56);
var advanceStringIndex = __webpack_require__(60);
var toLength = __webpack_require__(18);
var callRegExpExec = __webpack_require__(46);
var regexpExec = __webpack_require__(61);
var fails = __webpack_require__(15);
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
__webpack_require__(47)('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(192);
module.exports = __webpack_require__(3).String.padEnd;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(2);
var $pad = __webpack_require__(96);
var userAgent = __webpack_require__(58);

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__(34);
var defined = __webpack_require__(20);

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(195);
module.exports = __webpack_require__(3).String.padStart;


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(2);
var $pad = __webpack_require__(96);
var userAgent = __webpack_require__(58);

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(197);
module.exports = __webpack_require__(3).String.trimRight;


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
__webpack_require__(97)('trimRight', function ($trim) {
  return function trimRight() {
    return $trim(this, 2);
  };
}, 'trimEnd');


/***/ }),
/* 198 */
/***/ (function(module, exports) {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(200);
module.exports = __webpack_require__(3).String.trimLeft;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
__webpack_require__(97)('trimLeft', function ($trim) {
  return function trimLeft() {
    return $trim(this, 1);
  };
}, 'trimStart');


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(202);
module.exports = __webpack_require__(3).Number.isNaN;


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.4 Number.isNaN(number)
var $export = __webpack_require__(2);

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {(function(global) {
  /**
   * Polyfill URLSearchParams
   *
   * Inspired from : https://github.com/WebReflection/url-search-params/blob/master/src/url-search-params.js
   */

  var checkIfIteratorIsSupported = function() {
    try {
      return !!Symbol.iterator;
    } catch (error) {
      return false;
    }
  };


  var iteratorSupported = checkIfIteratorIsSupported();

  var createIterator = function(items) {
    var iterator = {
      next: function() {
        var value = items.shift();
        return { done: value === void 0, value: value };
      }
    };

    if (iteratorSupported) {
      iterator[Symbol.iterator] = function() {
        return iterator;
      };
    }

    return iterator;
  };

  /**
   * Search param name and values should be encoded according to https://url.spec.whatwg.org/#urlencoded-serializing
   * encodeURIComponent() produces the same result except encoding spaces as `%20` instead of `+`.
   */
  var serializeParam = function(value) {
    return encodeURIComponent(value).replace(/%20/g, '+');
  };

  var deserializeParam = function(value) {
    return decodeURIComponent(String(value).replace(/\+/g, ' '));
  };

  var polyfillURLSearchParams = function() {

    var URLSearchParams = function(searchString) {
      Object.defineProperty(this, '_entries', { writable: true, value: {} });
      var typeofSearchString = typeof searchString;

      if (typeofSearchString === 'undefined') {
        // do nothing
      } else if (typeofSearchString === 'string') {
        if (searchString !== '') {
          this._fromString(searchString);
        }
      } else if (searchString instanceof URLSearchParams) {
        var _this = this;
        searchString.forEach(function(value, name) {
          _this.append(name, value);
        });
      } else if ((searchString !== null) && (typeofSearchString === 'object')) {
        if (Object.prototype.toString.call(searchString) === '[object Array]') {
          for (var i = 0; i < searchString.length; i++) {
            var entry = searchString[i];
            if ((Object.prototype.toString.call(entry) === '[object Array]') || (entry.length !== 2)) {
              this.append(entry[0], entry[1]);
            } else {
              throw new TypeError('Expected [string, any] as entry at index ' + i + ' of URLSearchParams\'s input');
            }
          }
        } else {
          for (var key in searchString) {
            if (searchString.hasOwnProperty(key)) {
              this.append(key, searchString[key]);
            }
          }
        }
      } else {
        throw new TypeError('Unsupported input\'s type for URLSearchParams');
      }
    };

    var proto = URLSearchParams.prototype;

    proto.append = function(name, value) {
      if (name in this._entries) {
        this._entries[name].push(String(value));
      } else {
        this._entries[name] = [String(value)];
      }
    };

    proto.delete = function(name) {
      delete this._entries[name];
    };

    proto.get = function(name) {
      return (name in this._entries) ? this._entries[name][0] : null;
    };

    proto.getAll = function(name) {
      return (name in this._entries) ? this._entries[name].slice(0) : [];
    };

    proto.has = function(name) {
      return (name in this._entries);
    };

    proto.set = function(name, value) {
      this._entries[name] = [String(value)];
    };

    proto.forEach = function(callback, thisArg) {
      var entries;
      for (var name in this._entries) {
        if (this._entries.hasOwnProperty(name)) {
          entries = this._entries[name];
          for (var i = 0; i < entries.length; i++) {
            callback.call(thisArg, entries[i], name, this);
          }
        }
      }
    };

    proto.keys = function() {
      var items = [];
      this.forEach(function(value, name) {
        items.push(name);
      });
      return createIterator(items);
    };

    proto.values = function() {
      var items = [];
      this.forEach(function(value) {
        items.push(value);
      });
      return createIterator(items);
    };

    proto.entries = function() {
      var items = [];
      this.forEach(function(value, name) {
        items.push([name, value]);
      });
      return createIterator(items);
    };

    if (iteratorSupported) {
      proto[Symbol.iterator] = proto.entries;
    }

    proto.toString = function() {
      var searchArray = [];
      this.forEach(function(value, name) {
        searchArray.push(serializeParam(name) + '=' + serializeParam(value));
      });
      return searchArray.join('&');
    };


    global.URLSearchParams = URLSearchParams;
  };

  var checkIfURLSearchParamsSupported = function() {
    try {
      var URLSearchParams = global.URLSearchParams;

      return (
        (new URLSearchParams('?a=1').toString() === 'a=1') &&
        (typeof URLSearchParams.prototype.set === 'function') &&
        (typeof URLSearchParams.prototype.entries === 'function')
      );
    } catch (e) {
      return false;
    }
  };

  if (!checkIfURLSearchParamsSupported()) {
    polyfillURLSearchParams();
  }

  var proto = global.URLSearchParams.prototype;

  if (typeof proto.sort !== 'function') {
    proto.sort = function() {
      var _this = this;
      var items = [];
      this.forEach(function(value, name) {
        items.push([name, value]);
        if (!_this._entries) {
          _this.delete(name);
        }
      });
      items.sort(function(a, b) {
        if (a[0] < b[0]) {
          return -1;
        } else if (a[0] > b[0]) {
          return +1;
        } else {
          return 0;
        }
      });
      if (_this._entries) { // force reset because IE keeps keys index
        _this._entries = {};
      }
      for (var i = 0; i < items.length; i++) {
        this.append(items[i][0], items[i][1]);
      }
    };
  }

  if (typeof proto._fromString !== 'function') {
    Object.defineProperty(proto, '_fromString', {
      enumerable: false,
      configurable: false,
      writable: false,
      value: function(searchString) {
        if (this._entries) {
          this._entries = {};
        } else {
          var keys = [];
          this.forEach(function(value, name) {
            keys.push(name);
          });
          for (var i = 0; i < keys.length; i++) {
            this.delete(keys[i]);
          }
        }

        searchString = searchString.replace(/^\?/, '');
        var attributes = searchString.split('&');
        var attribute;
        for (var i = 0; i < attributes.length; i++) {
          attribute = attributes[i].split('=');
          this.append(
            deserializeParam(attribute[0]),
            (attribute.length > 1) ? deserializeParam(attribute[1]) : ''
          );
        }
      }
    });
  }

  // HTMLAnchorElement

})(
  (typeof global !== 'undefined') ? global
    : ((typeof window !== 'undefined') ? window
    : ((typeof self !== 'undefined') ? self : this))
);

(function(global) {
  /**
   * Polyfill URL
   *
   * Inspired from : https://github.com/arv/DOM-URL-Polyfill/blob/master/src/url.js
   */

  var checkIfURLIsSupported = function() {
    try {
      var u = new global.URL('b', 'http://a');
      u.pathname = 'c d';
      return (u.href === 'http://a/c%20d') && u.searchParams;
    } catch (e) {
      return false;
    }
  };


  var polyfillURL = function() {
    var _URL = global.URL;

    var URL = function(url, base) {
      if (typeof url !== 'string') url = String(url);
      if (base && typeof base !== 'string') base = String(base);

      // Only create another document if the base is different from current location.
      var doc = document, baseElement;
      if (base && (global.location === void 0 || base !== global.location.href)) {
        base = base.toLowerCase();
        doc = document.implementation.createHTMLDocument('');
        baseElement = doc.createElement('base');
        baseElement.href = base;
        doc.head.appendChild(baseElement);
        try {
          if (baseElement.href.indexOf(base) !== 0) throw new Error(baseElement.href);
        } catch (err) {
          throw new Error('URL unable to set base ' + base + ' due to ' + err);
        }
      }

      var anchorElement = doc.createElement('a');
      anchorElement.href = url;
      if (baseElement) {
        doc.body.appendChild(anchorElement);
        anchorElement.href = anchorElement.href; // force href to refresh
      }

      var inputElement = doc.createElement('input');
      inputElement.type = 'url';
      inputElement.value = url;

      if (anchorElement.protocol === ':' || !/:/.test(anchorElement.href) || (!inputElement.checkValidity() && !base)) {
        throw new TypeError('Invalid URL');
      }

      Object.defineProperty(this, '_anchorElement', {
        value: anchorElement
      });


      // create a linked searchParams which reflect its changes on URL
      var searchParams = new global.URLSearchParams(this.search);
      var enableSearchUpdate = true;
      var enableSearchParamsUpdate = true;
      var _this = this;
      ['append', 'delete', 'set'].forEach(function(methodName) {
        var method = searchParams[methodName];
        searchParams[methodName] = function() {
          method.apply(searchParams, arguments);
          if (enableSearchUpdate) {
            enableSearchParamsUpdate = false;
            _this.search = searchParams.toString();
            enableSearchParamsUpdate = true;
          }
        };
      });

      Object.defineProperty(this, 'searchParams', {
        value: searchParams,
        enumerable: true
      });

      var search = void 0;
      Object.defineProperty(this, '_updateSearchParams', {
        enumerable: false,
        configurable: false,
        writable: false,
        value: function() {
          if (this.search !== search) {
            search = this.search;
            if (enableSearchParamsUpdate) {
              enableSearchUpdate = false;
              this.searchParams._fromString(this.search);
              enableSearchUpdate = true;
            }
          }
        }
      });
    };

    var proto = URL.prototype;

    var linkURLWithAnchorAttribute = function(attributeName) {
      Object.defineProperty(proto, attributeName, {
        get: function() {
          return this._anchorElement[attributeName];
        },
        set: function(value) {
          this._anchorElement[attributeName] = value;
        },
        enumerable: true
      });
    };

    ['hash', 'host', 'hostname', 'port', 'protocol']
      .forEach(function(attributeName) {
        linkURLWithAnchorAttribute(attributeName);
      });

    Object.defineProperty(proto, 'search', {
      get: function() {
        return this._anchorElement['search'];
      },
      set: function(value) {
        this._anchorElement['search'] = value;
        this._updateSearchParams();
      },
      enumerable: true
    });

    Object.defineProperties(proto, {

      'toString': {
        get: function() {
          var _this = this;
          return function() {
            return _this.href;
          };
        }
      },

      'href': {
        get: function() {
          return this._anchorElement.href.replace(/\?$/, '');
        },
        set: function(value) {
          this._anchorElement.href = value;
          this._updateSearchParams();
        },
        enumerable: true
      },

      'pathname': {
        get: function() {
          return this._anchorElement.pathname.replace(/(^\/?)/, '/');
        },
        set: function(value) {
          this._anchorElement.pathname = value;
        },
        enumerable: true
      },

      'origin': {
        get: function() {
          // get expected port from protocol
          var expectedPort = { 'http:': 80, 'https:': 443, 'ftp:': 21 }[this._anchorElement.protocol];
          // add port to origin if, expected port is different than actual port
          // and it is not empty f.e http://foo:8080
          // 8080 != 80 && 8080 != ''
          var addPortToOrigin = this._anchorElement.port != expectedPort &&
            this._anchorElement.port !== '';

          return this._anchorElement.protocol +
            '//' +
            this._anchorElement.hostname +
            (addPortToOrigin ? (':' + this._anchorElement.port) : '');
        },
        enumerable: true
      },

      'password': { // TODO
        get: function() {
          return '';
        },
        set: function(value) {
        },
        enumerable: true
      },

      'username': { // TODO
        get: function() {
          return '';
        },
        set: function(value) {
        },
        enumerable: true
      },
    });

    URL.createObjectURL = function(blob) {
      return _URL.createObjectURL.apply(_URL, arguments);
    };

    URL.revokeObjectURL = function(url) {
      return _URL.revokeObjectURL.apply(_URL, arguments);
    };

    global.URL = URL;

  };

  if (!checkIfURLIsSupported()) {
    polyfillURL();
  }

  if ((global.location !== void 0) && !('origin' in global.location)) {
    var getOrigin = function() {
      return global.location.protocol + '//' + global.location.hostname + (global.location.port ? (':' + global.location.port) : '');
    };

    try {
      Object.defineProperty(global.location, 'origin', {
        get: getOrigin,
        enumerable: true
      });
    } catch (e) {
      setInterval(function() {
        global.location.origin = getOrigin();
      }, 100);
    }
  }

})(
  (typeof global !== 'undefined') ? global
    : ((typeof window !== 'undefined') ? window
    : ((typeof self !== 'undefined') ? self : this))
);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(99)))

/***/ }),
/* 204 */
/***/ (function(module, exports) {

/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.
 *
 *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document
 *
 */
(function() {
'use strict';

// Exit early if we're not running in a browser.
if (typeof window !== 'object') {
  return;
}

// Exit early if all IntersectionObserver and IntersectionObserverEntry
// features are natively supported.
if ('IntersectionObserver' in window &&
    'IntersectionObserverEntry' in window &&
    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {

  // Minimal polyfill for Edge 15's lack of `isIntersecting`
  // See: https://github.com/w3c/IntersectionObserver/issues/211
  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {
    Object.defineProperty(window.IntersectionObserverEntry.prototype,
      'isIntersecting', {
      get: function () {
        return this.intersectionRatio > 0;
      }
    });
  }
  return;
}

/**
 * Returns the embedding frame element, if any.
 * @param {!Document} doc
 * @return {!Element}
 */
function getFrameElement(doc) {
  try {
    return doc.defaultView && doc.defaultView.frameElement || null;
  } catch (e) {
    // Ignore the error.
    return null;
  }
}

/**
 * A local reference to the root document.
 */
var document = (function(startDoc) {
  var doc = startDoc;
  var frame = getFrameElement(doc);
  while (frame) {
    doc = frame.ownerDocument;
    frame = getFrameElement(doc);
  }
  return doc;
})(window.document);

/**
 * An IntersectionObserver registry. This registry exists to hold a strong
 * reference to IntersectionObserver instances currently observing a target
 * element. Without this registry, instances without another reference may be
 * garbage collected.
 */
var registry = [];

/**
 * The signal updater for cross-origin intersection. When not null, it means
 * that the polyfill is configured to work in a cross-origin mode.
 * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}
 */
var crossOriginUpdater = null;

/**
 * The current cross-origin intersection. Only used in the cross-origin mode.
 * @type {DOMRect|ClientRect}
 */
var crossOriginRect = null;


/**
 * Creates the global IntersectionObserverEntry constructor.
 * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry
 * @param {Object} entry A dictionary of instance properties.
 * @constructor
 */
function IntersectionObserverEntry(entry) {
  this.time = entry.time;
  this.target = entry.target;
  this.rootBounds = ensureDOMRect(entry.rootBounds);
  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);
  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());
  this.isIntersecting = !!entry.intersectionRect;

  // Calculates the intersection ratio.
  var targetRect = this.boundingClientRect;
  var targetArea = targetRect.width * targetRect.height;
  var intersectionRect = this.intersectionRect;
  var intersectionArea = intersectionRect.width * intersectionRect.height;

  // Sets intersection ratio.
  if (targetArea) {
    // Round the intersection ratio to avoid floating point math issues:
    // https://github.com/w3c/IntersectionObserver/issues/324
    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));
  } else {
    // If area is zero and is intersecting, sets to 1, otherwise to 0
    this.intersectionRatio = this.isIntersecting ? 1 : 0;
  }
}


/**
 * Creates the global IntersectionObserver constructor.
 * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface
 * @param {Function} callback The function to be invoked after intersection
 *     changes have queued. The function is not invoked if the queue has
 *     been emptied by calling the `takeRecords` method.
 * @param {Object=} opt_options Optional configuration options.
 * @constructor
 */
function IntersectionObserver(callback, opt_options) {

  var options = opt_options || {};

  if (typeof callback != 'function') {
    throw new Error('callback must be a function');
  }

  if (options.root && options.root.nodeType != 1) {
    throw new Error('root must be an Element');
  }

  // Binds and throttles `this._checkForIntersections`.
  this._checkForIntersections = throttle(
      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);

  // Private properties.
  this._callback = callback;
  this._observationTargets = [];
  this._queuedEntries = [];
  this._rootMarginValues = this._parseRootMargin(options.rootMargin);

  // Public properties.
  this.thresholds = this._initThresholds(options.threshold);
  this.root = options.root || null;
  this.rootMargin = this._rootMarginValues.map(function(margin) {
    return margin.value + margin.unit;
  }).join(' ');

  /** @private @const {!Array<!Document>} */
  this._monitoringDocuments = [];
  /** @private @const {!Array<function()>} */
  this._monitoringUnsubscribes = [];
}


/**
 * The minimum interval within which the document will be checked for
 * intersection changes.
 */
IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;


/**
 * The frequency in which the polyfill polls for intersection changes.
 * this can be updated on a per instance basis and must be set prior to
 * calling `observe` on the first target.
 */
IntersectionObserver.prototype.POLL_INTERVAL = null;

/**
 * Use a mutation observer on the root element
 * to detect intersection changes.
 */
IntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;


/**
 * Sets up the polyfill in the cross-origin mode. The result is the
 * updater function that accepts two arguments: `boundingClientRect` and
 * `intersectionRect` - just as these fields would be available to the
 * parent via `IntersectionObserverEntry`. This function should be called
 * each time the iframe receives intersection information from the parent
 * window, e.g. via messaging.
 * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}
 */
IntersectionObserver._setupCrossOriginUpdater = function() {
  if (!crossOriginUpdater) {
    /**
     * @param {DOMRect|ClientRect} boundingClientRect
     * @param {DOMRect|ClientRect} intersectionRect
     */
    crossOriginUpdater = function(boundingClientRect, intersectionRect) {
      if (!boundingClientRect || !intersectionRect) {
        crossOriginRect = getEmptyRect();
      } else {
        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);
      }
      registry.forEach(function(observer) {
        observer._checkForIntersections();
      });
    };
  }
  return crossOriginUpdater;
};


/**
 * Resets the cross-origin mode.
 */
IntersectionObserver._resetCrossOriginUpdater = function() {
  crossOriginUpdater = null;
  crossOriginRect = null;
};


/**
 * Starts observing a target element for intersection changes based on
 * the thresholds values.
 * @param {Element} target The DOM element to observe.
 */
IntersectionObserver.prototype.observe = function(target) {
  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {
    return item.element == target;
  });

  if (isTargetAlreadyObserved) {
    return;
  }

  if (!(target && target.nodeType == 1)) {
    throw new Error('target must be an Element');
  }

  this._registerInstance();
  this._observationTargets.push({element: target, entry: null});
  this._monitorIntersections(target.ownerDocument);
  this._checkForIntersections();
};


/**
 * Stops observing a target element for intersection changes.
 * @param {Element} target The DOM element to observe.
 */
IntersectionObserver.prototype.unobserve = function(target) {
  this._observationTargets =
      this._observationTargets.filter(function(item) {
        return item.element != target;
      });
  this._unmonitorIntersections(target.ownerDocument);
  if (this._observationTargets.length == 0) {
    this._unregisterInstance();
  }
};


/**
 * Stops observing all target elements for intersection changes.
 */
IntersectionObserver.prototype.disconnect = function() {
  this._observationTargets = [];
  this._unmonitorAllIntersections();
  this._unregisterInstance();
};


/**
 * Returns any queue entries that have not yet been reported to the
 * callback and clears the queue. This can be used in conjunction with the
 * callback to obtain the absolute most up-to-date intersection information.
 * @return {Array} The currently queued entries.
 */
IntersectionObserver.prototype.takeRecords = function() {
  var records = this._queuedEntries.slice();
  this._queuedEntries = [];
  return records;
};


/**
 * Accepts the threshold value from the user configuration object and
 * returns a sorted array of unique threshold values. If a value is not
 * between 0 and 1 and error is thrown.
 * @private
 * @param {Array|number=} opt_threshold An optional threshold value or
 *     a list of threshold values, defaulting to [0].
 * @return {Array} A sorted list of unique and valid threshold values.
 */
IntersectionObserver.prototype._initThresholds = function(opt_threshold) {
  var threshold = opt_threshold || [0];
  if (!Array.isArray(threshold)) threshold = [threshold];

  return threshold.sort().filter(function(t, i, a) {
    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {
      throw new Error('threshold must be a number between 0 and 1 inclusively');
    }
    return t !== a[i - 1];
  });
};


/**
 * Accepts the rootMargin value from the user configuration object
 * and returns an array of the four margin values as an object containing
 * the value and unit properties. If any of the values are not properly
 * formatted or use a unit other than px or %, and error is thrown.
 * @private
 * @param {string=} opt_rootMargin An optional rootMargin value,
 *     defaulting to '0px'.
 * @return {Array<Object>} An array of margin objects with the keys
 *     value and unit.
 */
IntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {
  var marginString = opt_rootMargin || '0px';
  var margins = marginString.split(/\s+/).map(function(margin) {
    var parts = /^(-?\d*\.?\d+)(px|%)$/.exec(margin);
    if (!parts) {
      throw new Error('rootMargin must be specified in pixels or percent');
    }
    return {value: parseFloat(parts[1]), unit: parts[2]};
  });

  // Handles shorthand.
  margins[1] = margins[1] || margins[0];
  margins[2] = margins[2] || margins[0];
  margins[3] = margins[3] || margins[1];

  return margins;
};


/**
 * Starts polling for intersection changes if the polling is not already
 * happening, and if the page's visibility state is visible.
 * @param {!Document} doc
 * @private
 */
IntersectionObserver.prototype._monitorIntersections = function(doc) {
  var win = doc.defaultView;
  if (!win) {
    // Already destroyed.
    return;
  }
  if (this._monitoringDocuments.indexOf(doc) != -1) {
    // Already monitoring.
    return;
  }

  // Private state for monitoring.
  var callback = this._checkForIntersections;
  var monitoringInterval = null;
  var domObserver = null;

  // If a poll interval is set, use polling instead of listening to
  // resize and scroll events or DOM mutations.
  if (this.POLL_INTERVAL) {
    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);
  } else {
    addEvent(win, 'resize', callback, true);
    addEvent(doc, 'scroll', callback, true);
    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {
      domObserver = new win.MutationObserver(callback);
      domObserver.observe(doc, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
      });
    }
  }

  this._monitoringDocuments.push(doc);
  this._monitoringUnsubscribes.push(function() {
    // Get the window object again. When a friendly iframe is destroyed, it
    // will be null.
    var win = doc.defaultView;

    if (win) {
      if (monitoringInterval) {
        win.clearInterval(monitoringInterval);
      }
      removeEvent(win, 'resize', callback, true);
    }

    removeEvent(doc, 'scroll', callback, true);
    if (domObserver) {
      domObserver.disconnect();
    }
  });

  // Also monitor the parent.
  if (doc != (this.root && this.root.ownerDocument || document)) {
    var frame = getFrameElement(doc);
    if (frame) {
      this._monitorIntersections(frame.ownerDocument);
    }
  }
};


/**
 * Stops polling for intersection changes.
 * @param {!Document} doc
 * @private
 */
IntersectionObserver.prototype._unmonitorIntersections = function(doc) {
  var index = this._monitoringDocuments.indexOf(doc);
  if (index == -1) {
    return;
  }

  var rootDoc = (this.root && this.root.ownerDocument || document);

  // Check if any dependent targets are still remaining.
  var hasDependentTargets =
      this._observationTargets.some(function(item) {
        var itemDoc = item.element.ownerDocument;
        // Target is in this context.
        if (itemDoc == doc) {
          return true;
        }
        // Target is nested in this context.
        while (itemDoc && itemDoc != rootDoc) {
          var frame = getFrameElement(itemDoc);
          itemDoc = frame && frame.ownerDocument;
          if (itemDoc == doc) {
            return true;
          }
        }
        return false;
      });
  if (hasDependentTargets) {
    return;
  }

  // Unsubscribe.
  var unsubscribe = this._monitoringUnsubscribes[index];
  this._monitoringDocuments.splice(index, 1);
  this._monitoringUnsubscribes.splice(index, 1);
  unsubscribe();

  // Also unmonitor the parent.
  if (doc != rootDoc) {
    var frame = getFrameElement(doc);
    if (frame) {
      this._unmonitorIntersections(frame.ownerDocument);
    }
  }
};


/**
 * Stops polling for intersection changes.
 * @param {!Document} doc
 * @private
 */
IntersectionObserver.prototype._unmonitorAllIntersections = function() {
  var unsubscribes = this._monitoringUnsubscribes.slice(0);
  this._monitoringDocuments.length = 0;
  this._monitoringUnsubscribes.length = 0;
  for (var i = 0; i < unsubscribes.length; i++) {
    unsubscribes[i]();
  }
};


/**
 * Scans each observation target for intersection changes and adds them
 * to the internal entries queue. If new entries are found, it
 * schedules the callback to be invoked.
 * @private
 */
IntersectionObserver.prototype._checkForIntersections = function() {
  if (!this.root && crossOriginUpdater && !crossOriginRect) {
    // Cross origin monitoring, but no initial data available yet.
    return;
  }

  var rootIsInDom = this._rootIsInDom();
  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();

  this._observationTargets.forEach(function(item) {
    var target = item.element;
    var targetRect = getBoundingClientRect(target);
    var rootContainsTarget = this._rootContainsTarget(target);
    var oldEntry = item.entry;
    var intersectionRect = rootIsInDom && rootContainsTarget &&
        this._computeTargetAndRootIntersection(target, targetRect, rootRect);

    var newEntry = item.entry = new IntersectionObserverEntry({
      time: now(),
      target: target,
      boundingClientRect: targetRect,
      rootBounds: crossOriginUpdater && !this.root ? null : rootRect,
      intersectionRect: intersectionRect
    });

    if (!oldEntry) {
      this._queuedEntries.push(newEntry);
    } else if (rootIsInDom && rootContainsTarget) {
      // If the new entry intersection ratio has crossed any of the
      // thresholds, add a new entry.
      if (this._hasCrossedThreshold(oldEntry, newEntry)) {
        this._queuedEntries.push(newEntry);
      }
    } else {
      // If the root is not in the DOM or target is not contained within
      // root but the previous entry for this target had an intersection,
      // add a new record indicating removal.
      if (oldEntry && oldEntry.isIntersecting) {
        this._queuedEntries.push(newEntry);
      }
    }
  }, this);

  if (this._queuedEntries.length) {
    this._callback(this.takeRecords(), this);
  }
};


/**
 * Accepts a target and root rect computes the intersection between then
 * following the algorithm in the spec.
 * TODO(philipwalton): at this time clip-path is not considered.
 * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo
 * @param {Element} target The target DOM element
 * @param {Object} targetRect The bounding rect of the target.
 * @param {Object} rootRect The bounding rect of the root after being
 *     expanded by the rootMargin value.
 * @return {?Object} The final intersection rect object or undefined if no
 *     intersection is found.
 * @private
 */
IntersectionObserver.prototype._computeTargetAndRootIntersection =
    function(target, targetRect, rootRect) {
  // If the element isn't displayed, an intersection can't happen.
  if (window.getComputedStyle(target).display == 'none') return;

  var intersectionRect = targetRect;
  var parent = getParentNode(target);
  var atRoot = false;

  while (!atRoot && parent) {
    var parentRect = null;
    var parentComputedStyle = parent.nodeType == 1 ?
        window.getComputedStyle(parent) : {};

    // If the parent isn't displayed, an intersection can't happen.
    if (parentComputedStyle.display == 'none') return null;

    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {
      atRoot = true;
      if (parent == this.root || parent == document) {
        if (crossOriginUpdater && !this.root) {
          if (!crossOriginRect ||
              crossOriginRect.width == 0 && crossOriginRect.height == 0) {
            // A 0-size cross-origin intersection means no-intersection.
            parent = null;
            parentRect = null;
            intersectionRect = null;
          } else {
            parentRect = crossOriginRect;
          }
        } else {
          parentRect = rootRect;
        }
      } else {
        // Check if there's a frame that can be navigated to.
        var frame = getParentNode(parent);
        var frameRect = frame && getBoundingClientRect(frame);
        var frameIntersect =
            frame &&
            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);
        if (frameRect && frameIntersect) {
          parent = frame;
          parentRect = convertFromParentRect(frameRect, frameIntersect);
        } else {
          parent = null;
          intersectionRect = null;
        }
      }
    } else {
      // If the element has a non-visible overflow, and it's not the <body>
      // or <html> element, update the intersection rect.
      // Note: <body> and <html> cannot be clipped to a rect that's not also
      // the document rect, so no need to compute a new intersection.
      var doc = parent.ownerDocument;
      if (parent != doc.body &&
          parent != doc.documentElement &&
          parentComputedStyle.overflow != 'visible') {
        parentRect = getBoundingClientRect(parent);
      }
    }

    // If either of the above conditionals set a new parentRect,
    // calculate new intersection data.
    if (parentRect) {
      intersectionRect = computeRectIntersection(parentRect, intersectionRect);
    }
    if (!intersectionRect) break;
    parent = parent && getParentNode(parent);
  }
  return intersectionRect;
};


/**
 * Returns the root rect after being expanded by the rootMargin value.
 * @return {ClientRect} The expanded root rect.
 * @private
 */
IntersectionObserver.prototype._getRootRect = function() {
  var rootRect;
  if (this.root) {
    rootRect = getBoundingClientRect(this.root);
  } else {
    // Use <html>/<body> instead of window since scroll bars affect size.
    var html = document.documentElement;
    var body = document.body;
    rootRect = {
      top: 0,
      left: 0,
      right: html.clientWidth || body.clientWidth,
      width: html.clientWidth || body.clientWidth,
      bottom: html.clientHeight || body.clientHeight,
      height: html.clientHeight || body.clientHeight
    };
  }
  return this._expandRectByRootMargin(rootRect);
};


/**
 * Accepts a rect and expands it by the rootMargin value.
 * @param {DOMRect|ClientRect} rect The rect object to expand.
 * @return {ClientRect} The expanded rect.
 * @private
 */
IntersectionObserver.prototype._expandRectByRootMargin = function(rect) {
  var margins = this._rootMarginValues.map(function(margin, i) {
    return margin.unit == 'px' ? margin.value :
        margin.value * (i % 2 ? rect.width : rect.height) / 100;
  });
  var newRect = {
    top: rect.top - margins[0],
    right: rect.right + margins[1],
    bottom: rect.bottom + margins[2],
    left: rect.left - margins[3]
  };
  newRect.width = newRect.right - newRect.left;
  newRect.height = newRect.bottom - newRect.top;

  return newRect;
};


/**
 * Accepts an old and new entry and returns true if at least one of the
 * threshold values has been crossed.
 * @param {?IntersectionObserverEntry} oldEntry The previous entry for a
 *    particular target element or null if no previous entry exists.
 * @param {IntersectionObserverEntry} newEntry The current entry for a
 *    particular target element.
 * @return {boolean} Returns true if a any threshold has been crossed.
 * @private
 */
IntersectionObserver.prototype._hasCrossedThreshold =
    function(oldEntry, newEntry) {

  // To make comparing easier, an entry that has a ratio of 0
  // but does not actually intersect is given a value of -1
  var oldRatio = oldEntry && oldEntry.isIntersecting ?
      oldEntry.intersectionRatio || 0 : -1;
  var newRatio = newEntry.isIntersecting ?
      newEntry.intersectionRatio || 0 : -1;

  // Ignore unchanged ratios
  if (oldRatio === newRatio) return;

  for (var i = 0; i < this.thresholds.length; i++) {
    var threshold = this.thresholds[i];

    // Return true if an entry matches a threshold or if the new ratio
    // and the old ratio are on the opposite sides of a threshold.
    if (threshold == oldRatio || threshold == newRatio ||
        threshold < oldRatio !== threshold < newRatio) {
      return true;
    }
  }
};


/**
 * Returns whether or not the root element is an element and is in the DOM.
 * @return {boolean} True if the root element is an element and is in the DOM.
 * @private
 */
IntersectionObserver.prototype._rootIsInDom = function() {
  return !this.root || containsDeep(document, this.root);
};


/**
 * Returns whether or not the target element is a child of root.
 * @param {Element} target The target element to check.
 * @return {boolean} True if the target element is a child of root.
 * @private
 */
IntersectionObserver.prototype._rootContainsTarget = function(target) {
  return containsDeep(this.root || document, target) &&
    (!this.root || this.root.ownerDocument == target.ownerDocument);
};


/**
 * Adds the instance to the global IntersectionObserver registry if it isn't
 * already present.
 * @private
 */
IntersectionObserver.prototype._registerInstance = function() {
  if (registry.indexOf(this) < 0) {
    registry.push(this);
  }
};


/**
 * Removes the instance from the global IntersectionObserver registry.
 * @private
 */
IntersectionObserver.prototype._unregisterInstance = function() {
  var index = registry.indexOf(this);
  if (index != -1) registry.splice(index, 1);
};


/**
 * Returns the result of the performance.now() method or null in browsers
 * that don't support the API.
 * @return {number} The elapsed time since the page was requested.
 */
function now() {
  return window.performance && performance.now && performance.now();
}


/**
 * Throttles a function and delays its execution, so it's only called at most
 * once within a given time period.
 * @param {Function} fn The function to throttle.
 * @param {number} timeout The amount of time that must pass before the
 *     function can be called again.
 * @return {Function} The throttled function.
 */
function throttle(fn, timeout) {
  var timer = null;
  return function () {
    if (!timer) {
      timer = setTimeout(function() {
        fn();
        timer = null;
      }, timeout);
    }
  };
}


/**
 * Adds an event handler to a DOM node ensuring cross-browser compatibility.
 * @param {Node} node The DOM node to add the event handler to.
 * @param {string} event The event name.
 * @param {Function} fn The event handler to add.
 * @param {boolean} opt_useCapture Optionally adds the even to the capture
 *     phase. Note: this only works in modern browsers.
 */
function addEvent(node, event, fn, opt_useCapture) {
  if (typeof node.addEventListener == 'function') {
    node.addEventListener(event, fn, opt_useCapture || false);
  }
  else if (typeof node.attachEvent == 'function') {
    node.attachEvent('on' + event, fn);
  }
}


/**
 * Removes a previously added event handler from a DOM node.
 * @param {Node} node The DOM node to remove the event handler from.
 * @param {string} event The event name.
 * @param {Function} fn The event handler to remove.
 * @param {boolean} opt_useCapture If the event handler was added with this
 *     flag set to true, it should be set to true here in order to remove it.
 */
function removeEvent(node, event, fn, opt_useCapture) {
  if (typeof node.removeEventListener == 'function') {
    node.removeEventListener(event, fn, opt_useCapture || false);
  }
  else if (typeof node.detatchEvent == 'function') {
    node.detatchEvent('on' + event, fn);
  }
}


/**
 * Returns the intersection between two rect objects.
 * @param {Object} rect1 The first rect.
 * @param {Object} rect2 The second rect.
 * @return {?Object|?ClientRect} The intersection rect or undefined if no
 *     intersection is found.
 */
function computeRectIntersection(rect1, rect2) {
  var top = Math.max(rect1.top, rect2.top);
  var bottom = Math.min(rect1.bottom, rect2.bottom);
  var left = Math.max(rect1.left, rect2.left);
  var right = Math.min(rect1.right, rect2.right);
  var width = right - left;
  var height = bottom - top;

  return (width >= 0 && height >= 0) && {
    top: top,
    bottom: bottom,
    left: left,
    right: right,
    width: width,
    height: height
  } || null;
}


/**
 * Shims the native getBoundingClientRect for compatibility with older IE.
 * @param {Element} el The element whose bounding rect to get.
 * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.
 */
function getBoundingClientRect(el) {
  var rect;

  try {
    rect = el.getBoundingClientRect();
  } catch (err) {
    // Ignore Windows 7 IE11 "Unspecified error"
    // https://github.com/w3c/IntersectionObserver/pull/205
  }

  if (!rect) return getEmptyRect();

  // Older IE
  if (!(rect.width && rect.height)) {
    rect = {
      top: rect.top,
      right: rect.right,
      bottom: rect.bottom,
      left: rect.left,
      width: rect.right - rect.left,
      height: rect.bottom - rect.top
    };
  }
  return rect;
}


/**
 * Returns an empty rect object. An empty rect is returned when an element
 * is not in the DOM.
 * @return {ClientRect} The empty rect.
 */
function getEmptyRect() {
  return {
    top: 0,
    bottom: 0,
    left: 0,
    right: 0,
    width: 0,
    height: 0
  };
}


/**
 * Ensure that the result has all of the necessary fields of the DOMRect.
 * Specifically this ensures that `x` and `y` fields are set.
 *
 * @param {?DOMRect|?ClientRect} rect
 * @return {?DOMRect}
 */
function ensureDOMRect(rect) {
  // A `DOMRect` object has `x` and `y` fields.
  if (!rect || 'x' in rect) {
    return rect;
  }
  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case
  // for internally calculated Rect objects. For the purposes of
  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`
  // for these fields.
  return {
    top: rect.top,
    y: rect.top,
    bottom: rect.bottom,
    left: rect.left,
    x: rect.left,
    right: rect.right,
    width: rect.width,
    height: rect.height
  };
}


/**
 * Inverts the intersection and bounding rect from the parent (frame) BCR to
 * the local BCR space.
 * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.
 * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.
 * @return {ClientRect} The local root bounding rect for the parent's children.
 */
function convertFromParentRect(parentBoundingRect, parentIntersectionRect) {
  var top = parentIntersectionRect.top - parentBoundingRect.top;
  var left = parentIntersectionRect.left - parentBoundingRect.left;
  return {
    top: top,
    left: left,
    height: parentIntersectionRect.height,
    width: parentIntersectionRect.width,
    bottom: top + parentIntersectionRect.height,
    right: left + parentIntersectionRect.width
  };
}


/**
 * Checks to see if a parent element contains a child element (including inside
 * shadow DOM).
 * @param {Node} parent The parent element.
 * @param {Node} child The child element.
 * @return {boolean} True if the parent node contains the child node.
 */
function containsDeep(parent, child) {
  var node = child;
  while (node) {
    if (node == parent) return true;

    node = getParentNode(node);
  }
  return false;
}


/**
 * Gets the parent node of an element or its host element if the parent node
 * is a shadow root.
 * @param {Node} node The node whose parent to get.
 * @return {Node|null} The parent node or null if no parent exists.
 */
function getParentNode(node) {
  var parent = node.parentNode;

  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {
    // If this node is a document node, look for the embedding frame.
    return getFrameElement(node);
  }

  if (parent && parent.nodeType == 11 && parent.host) {
    // If the parent is a shadow root, return the host element.
    return parent.host;
  }

  if (parent && parent.assignedSlot) {
    // If the parent is distributed in a <slot>, return the parent of a slot.
    return parent.assignedSlot.parentNode;
  }

  return parent;
}


// Exposes the constructors globally.
window.IntersectionObserver = IntersectionObserver;
window.IntersectionObserverEntry = IntersectionObserverEntry;

}());


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.14.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var l=__webpack_require__(100),n="function"===typeof Symbol&&Symbol.for,p=n?Symbol.for("react.element"):60103,q=n?Symbol.for("react.portal"):60106,r=n?Symbol.for("react.fragment"):60107,t=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,v=n?Symbol.for("react.provider"):60109,w=n?Symbol.for("react.context"):60110,x=n?Symbol.for("react.forward_ref"):60112,y=n?Symbol.for("react.suspense"):60113,z=n?Symbol.for("react.memo"):60115,A=n?Symbol.for("react.lazy"):
60116,B="function"===typeof Symbol&&Symbol.iterator;function C(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}
var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,"setState")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};
function G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
function M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}
function N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}
function S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}
function T(a,b,c,e){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,""===b?"."+U(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||"object"!==typeof a?f=null:(f=B&&a[B]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),k=
0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if("object"===d)throw c=""+a,Error(C(31,"[object Object]"===c?"object with keys {"+Object.keys(a).join(", ")+"}":c,""));return g}function V(a,b,c){return null==a?0:T(a,"",b,c)}function U(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}
function aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(P,"$&/")+"/")+c)),e.push(a))}function X(a,b,c,e,d){var g="";null!=c&&(g=(""+c).replace(P,"$&/")+"/");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}
var ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};
exports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;
exports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=""+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,
key:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;
exports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};
exports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version="16.14.0";


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.14.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(0),n=__webpack_require__(100),r=__webpack_require__(207);function u(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(u(227));
function ba(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,k){da=!1;ea=null;ba.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,k){ja.apply(this,arguments);if(da){if(da){var l=ea;da=!1;ea=null}else throw Error(u(198));fa||(fa=!0,ha=l)}}var la=null,ma=null,na=null;
function oa(a,b,c){var d=a.type||"unknown-event";a.currentTarget=na(c);ka(d,b,void 0,a);a.currentTarget=null}var pa=null,qa={};
function ra(){if(pa)for(var a in qa){var b=qa[a],c=pa.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!sa[c]){if(!b.extractEvents)throw Error(u(97,a));sa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(ta.hasOwnProperty(h))throw Error(u(99,h));ta[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ua(k[e],g,h);e=!0}else f.registrationName?(ua(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}
function ua(a,b,c){if(va[a])throw Error(u(100,a));va[a]=b;wa[a]=b.eventTypes[c].dependencies}var sa=[],ta={},va={},wa={};function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!qa.hasOwnProperty(c)||qa[c]!==d){if(qa[c])throw Error(u(102,c));qa[c]=d;b=!0}}b&&ra()}var ya=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),za=null,Aa=null,Ba=null;
function Ca(a){if(a=ma(a)){if("function"!==typeof za)throw Error(u(280));var b=a.stateNode;b&&(b=la(b),za(a.stateNode,a.type,b))}}function Da(a){Aa?Ba?Ba.push(a):Ba=[a]:Aa=a}function Ea(){if(Aa){var a=Aa,b=Ba;Ba=Aa=null;Ca(a);if(b)for(a=0;a<b.length;a++)Ca(b[a])}}function Fa(a,b){return a(b)}function Ga(a,b,c,d,e){return a(b,c,d,e)}function Ha(){}var Ia=Fa,Ja=!1,Ka=!1;function La(){if(null!==Aa||null!==Ba)Ha(),Ea()}
function Ma(a,b,c){if(Ka)return a(b,c);Ka=!0;try{return Ia(a,b,c)}finally{Ka=!1,La()}}var Na=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Oa=Object.prototype.hasOwnProperty,Pa={},Qa={};
function Ra(a){if(Oa.call(Qa,a))return!0;if(Oa.call(Pa,a))return!1;if(Na.test(a))return Qa[a]=!0;Pa[a]=!0;return!1}function Sa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function Ta(a,b,c,d){if(null===b||"undefined"===typeof b||Sa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var C={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){C[a]=new v(a,0,!1,a,null,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];C[b]=new v(b,1,!1,a[1],null,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){C[a]=new v(a,2,!1,a.toLowerCase(),null,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){C[a]=new v(a,2,!1,a,null,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){C[a]=new v(a,3,!1,a.toLowerCase(),null,!1)});
["checked","multiple","muted","selected"].forEach(function(a){C[a]=new v(a,3,!0,a,null,!1)});["capture","download"].forEach(function(a){C[a]=new v(a,4,!1,a,null,!1)});["cols","rows","size","span"].forEach(function(a){C[a]=new v(a,6,!1,a,null,!1)});["rowSpan","start"].forEach(function(a){C[a]=new v(a,5,!1,a.toLowerCase(),null,!1)});var Ua=/[\-:]([a-z])/g;function Va(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Ua,
Va);C[b]=new v(b,1,!1,a,null,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1)});["tabIndex","crossOrigin"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!1)});
C.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0);["src","href","action","formAction"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!0)});var Wa=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Wa.hasOwnProperty("ReactCurrentDispatcher")||(Wa.ReactCurrentDispatcher={current:null});Wa.hasOwnProperty("ReactCurrentBatchConfig")||(Wa.ReactCurrentBatchConfig={suspense:null});
function Xa(a,b,c,d){var e=C.hasOwnProperty(b)?C[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Ta(b,c,e,d)&&(c=null),d||null===e?Ra(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
var Ya=/^(.*)[\\\/]/,E="function"===typeof Symbol&&Symbol.for,Za=E?Symbol.for("react.element"):60103,$a=E?Symbol.for("react.portal"):60106,ab=E?Symbol.for("react.fragment"):60107,bb=E?Symbol.for("react.strict_mode"):60108,cb=E?Symbol.for("react.profiler"):60114,db=E?Symbol.for("react.provider"):60109,eb=E?Symbol.for("react.context"):60110,fb=E?Symbol.for("react.concurrent_mode"):60111,gb=E?Symbol.for("react.forward_ref"):60112,hb=E?Symbol.for("react.suspense"):60113,ib=E?Symbol.for("react.suspense_list"):
60120,jb=E?Symbol.for("react.memo"):60115,kb=E?Symbol.for("react.lazy"):60116,lb=E?Symbol.for("react.block"):60121,mb="function"===typeof Symbol&&Symbol.iterator;function nb(a){if(null===a||"object"!==typeof a)return null;a=mb&&a[mb]||a["@@iterator"];return"function"===typeof a?a:null}function ob(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}
function pb(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ab:return"Fragment";case $a:return"Portal";case cb:return"Profiler";case bb:return"StrictMode";case hb:return"Suspense";case ib:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case eb:return"Context.Consumer";case db:return"Context.Provider";case gb:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+")":
"ForwardRef");case jb:return pb(a.type);case lb:return pb(a.render);case kb:if(a=1===a._status?a._result:null)return pb(a)}return null}function qb(a){var b="";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c="";break a;default:var d=a._debugOwner,e=a._debugSource,f=pb(a.type);c=null;d&&(c=pb(d.type));d=f;f="";e?f=" (at "+e.fileName.replace(Ya,"")+":"+e.lineNumber+")":c&&(f=" (created by "+c+")");c="\n    in "+(d||"Unknown")+f}b+=c;a=a.return}while(a);return b}
function rb(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function sb(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function tb(a){var b=sb(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function xb(a){a._valueTracker||(a._valueTracker=tb(a))}function yb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=sb(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function zb(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}
function Ab(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=rb(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Bb(a,b){b=b.checked;null!=b&&Xa(a,"checked",b,!1)}
function Cb(a,b){Bb(a,b);var c=rb(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?Db(a,b.type,c):b.hasOwnProperty("defaultValue")&&Db(a,b.type,rb(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Eb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function Db(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function Fb(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Gb(a,b){a=n({children:void 0},b);if(b=Fb(b.children))a.children=b;return a}
function Hb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+rb(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function Ib(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Jb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(u(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(u(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:rb(c)}}
function Kb(a,b){var c=rb(b.value),d=rb(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function Lb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var Mb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function Nb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ob(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Nb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var Pb,Qb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Mb.svg||"innerHTML"in a)a.innerHTML=b;else{Pb=Pb||document.createElement("div");Pb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=Pb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function Rb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Sb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Tb={animationend:Sb("Animation","AnimationEnd"),animationiteration:Sb("Animation","AnimationIteration"),animationstart:Sb("Animation","AnimationStart"),transitionend:Sb("Transition","TransitionEnd")},Ub={},Vb={};
ya&&(Vb=document.createElement("div").style,"AnimationEvent"in window||(delete Tb.animationend.animation,delete Tb.animationiteration.animation,delete Tb.animationstart.animation),"TransitionEvent"in window||delete Tb.transitionend.transition);function Wb(a){if(Ub[a])return Ub[a];if(!Tb[a])return a;var b=Tb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Vb)return Ub[a]=b[c];return a}
var Xb=Wb("animationend"),Yb=Wb("animationiteration"),Zb=Wb("animationstart"),$b=Wb("transitionend"),ac="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),bc=new ("function"===typeof WeakMap?WeakMap:Map);function cc(a){var b=bc.get(a);void 0===b&&(b=new Map,bc.set(a,b));return b}
function dc(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ec(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function fc(a){if(dc(a)!==a)throw Error(u(188));}
function gc(a){var b=a.alternate;if(!b){b=dc(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return fc(e),a;if(f===d)return fc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function hc(a){a=gc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
function ic(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function jc(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var kc=null;
function lc(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)oa(a,b[d],c[d]);else b&&oa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function mc(a){null!==a&&(kc=ic(kc,a));a=kc;kc=null;if(a){jc(a,lc);if(kc)throw Error(u(95));if(fa)throw a=ha,fa=!1,ha=null,a;}}
function nc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function oc(a){if(!ya)return!1;a="on"+a;var b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}var pc=[];function qc(a){a.topLevelType=null;a.nativeEvent=null;a.targetInst=null;a.ancestors.length=0;10>pc.length&&pc.push(a)}
function rc(a,b,c,d){if(pc.length){var e=pc.pop();e.topLevelType=a;e.eventSystemFlags=d;e.nativeEvent=b;e.targetInst=c;return e}return{topLevelType:a,eventSystemFlags:d,nativeEvent:b,targetInst:c,ancestors:[]}}
function sc(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=tc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=nc(a.nativeEvent);d=a.topLevelType;var f=a.nativeEvent,g=a.eventSystemFlags;0===c&&(g|=64);for(var h=null,k=0;k<sa.length;k++){var l=sa[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=
ic(h,l))}mc(h)}}function uc(a,b,c){if(!c.has(a)){switch(a){case "scroll":vc(b,"scroll",!0);break;case "focus":case "blur":vc(b,"focus",!0);vc(b,"blur",!0);c.set("blur",null);c.set("focus",null);break;case "cancel":case "close":oc(a)&&vc(b,a,!0);break;case "invalid":case "submit":case "reset":break;default:-1===ac.indexOf(a)&&F(a,b)}c.set(a,null)}}
var wc,xc,yc,zc=!1,Ac=[],Bc=null,Cc=null,Dc=null,Ec=new Map,Fc=new Map,Gc=[],Hc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ic="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
function Jc(a,b){var c=cc(b);Hc.forEach(function(a){uc(a,b,c)});Ic.forEach(function(a){uc(a,b,c)})}function Kc(a,b,c,d,e){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:e,container:d}}
function Lc(a,b){switch(a){case "focus":case "blur":Bc=null;break;case "dragenter":case "dragleave":Cc=null;break;case "mouseover":case "mouseout":Dc=null;break;case "pointerover":case "pointerout":Ec.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Fc.delete(b.pointerId)}}function Mc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=Kc(b,c,d,e,f),null!==b&&(b=Nc(b),null!==b&&xc(b)),a;a.eventSystemFlags|=d;return a}
function Oc(a,b,c,d,e){switch(b){case "focus":return Bc=Mc(Bc,a,b,c,d,e),!0;case "dragenter":return Cc=Mc(Cc,a,b,c,d,e),!0;case "mouseover":return Dc=Mc(Dc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Ec.set(f,Mc(Ec.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Fc.set(f,Mc(Fc.get(f)||null,a,b,c,d,e)),!0}return!1}
function Pc(a){var b=tc(a.target);if(null!==b){var c=dc(b);if(null!==c)if(b=c.tag,13===b){if(b=ec(c),null!==b){a.blockedOn=b;r.unstable_runWithPriority(a.priority,function(){yc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Qc(a){if(null!==a.blockedOn)return!1;var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);if(null!==b){var c=Nc(b);null!==c&&xc(c);a.blockedOn=b;return!1}return!0}
function Sc(a,b,c){Qc(a)&&c.delete(b)}function Tc(){for(zc=!1;0<Ac.length;){var a=Ac[0];if(null!==a.blockedOn){a=Nc(a.blockedOn);null!==a&&wc(a);break}var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);null!==b?a.blockedOn=b:Ac.shift()}null!==Bc&&Qc(Bc)&&(Bc=null);null!==Cc&&Qc(Cc)&&(Cc=null);null!==Dc&&Qc(Dc)&&(Dc=null);Ec.forEach(Sc);Fc.forEach(Sc)}function Uc(a,b){a.blockedOn===b&&(a.blockedOn=null,zc||(zc=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Tc)))}
function Vc(a){function b(b){return Uc(b,a)}if(0<Ac.length){Uc(Ac[0],a);for(var c=1;c<Ac.length;c++){var d=Ac[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Bc&&Uc(Bc,a);null!==Cc&&Uc(Cc,a);null!==Dc&&Uc(Dc,a);Ec.forEach(b);Fc.forEach(b);for(c=0;c<Gc.length;c++)d=Gc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Gc.length&&(c=Gc[0],null===c.blockedOn);)Pc(c),null===c.blockedOn&&Gc.shift()}
var Wc={},Yc=new Map,Zc=new Map,$c=["abort","abort",Xb,"animationEnd",Yb,"animationIteration",Zb,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking",
"seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",$b,"transitionEnd","waiting","waiting"];function ad(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1],f="on"+(e[0].toUpperCase()+e.slice(1));f={phasedRegistrationNames:{bubbled:f,captured:f+"Capture"},dependencies:[d],eventPriority:b};Zc.set(d,b);Yc.set(d,f);Wc[e]=f}}
ad("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0);
ad("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);ad($c,2);for(var bd="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),cd=0;cd<bd.length;cd++)Zc.set(bd[cd],0);
var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function F(a,b){vc(b,a,!1)}function vc(a,b,c){var d=Zc.get(b);switch(void 0===d?2:d){case 0:d=gd.bind(null,b,1,a);break;case 1:d=hd.bind(null,b,1,a);break;default:d=id.bind(null,b,1,a)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function gd(a,b,c,d){Ja||Ha();var e=id,f=Ja;Ja=!0;try{Ga(e,a,b,c,d)}finally{(Ja=f)||La()}}function hd(a,b,c,d){ed(dd,id.bind(null,a,b,c,d))}
function id(a,b,c,d){if(fd)if(0<Ac.length&&-1<Hc.indexOf(a))a=Kc(null,a,b,c,d),Ac.push(a);else{var e=Rc(a,b,c,d);if(null===e)Lc(a,d);else if(-1<Hc.indexOf(a))a=Kc(e,a,b,c,d),Ac.push(a);else if(!Oc(e,a,b,c,d)){Lc(a,d);a=rc(a,d,null,b);try{Ma(sc,a)}finally{qc(a)}}}}
function Rc(a,b,c,d){c=nc(d);c=tc(c);if(null!==c){var e=dc(c);if(null===e)c=null;else{var f=e.tag;if(13===f){c=ec(e);if(null!==c)return c;c=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;c=null}else e!==c&&(c=null)}}a=rc(a,d,c,b);try{Ma(sc,a)}finally{qc(a)}return null}
var jd={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kd=["Webkit","ms","Moz","O"];Object.keys(jd).forEach(function(a){kd.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);jd[b]=jd[a]})});function ld(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||jd.hasOwnProperty(a)&&jd[a]?(""+b).trim():b+"px"}
function md(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=ld(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var nd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function od(a,b){if(b){if(nd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,""));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(u(62,""));}}
function pd(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var qd=Mb.html;function rd(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=cc(a);b=wa[b];for(var d=0;d<b.length;d++)uc(b[d],a,c)}function sd(){}
function td(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ud(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function vd(a,b){var c=ud(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ud(c)}}
function wd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wd(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xd(){for(var a=window,b=td();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=td(a.document)}return b}
function yd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}var zd="$",Ad="/$",Bd="$?",Cd="$!",Dd=null,Ed=null;function Fd(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
function Gd(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Hd="function"===typeof setTimeout?setTimeout:void 0,Id="function"===typeof clearTimeout?clearTimeout:void 0;function Jd(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}
function Kd(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===zd||c===Cd||c===Bd){if(0===b)return a;b--}else c===Ad&&b++}a=a.previousSibling}return null}var Ld=Math.random().toString(36).slice(2),Md="__reactInternalInstance$"+Ld,Nd="__reactEventHandlers$"+Ld,Od="__reactContainere$"+Ld;
function tc(a){var b=a[Md];if(b)return b;for(var c=a.parentNode;c;){if(b=c[Od]||c[Md]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Kd(a);null!==a;){if(c=a[Md])return c;a=Kd(a)}return b}a=c;c=a.parentNode}return null}function Nc(a){a=a[Md]||a[Od];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function Pd(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function Qd(a){return a[Nd]||null}
function Rd(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}
function Sd(a,b){var c=a.stateNode;if(!c)return null;var d=la(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==typeof c)throw Error(u(231,
b,typeof c));return c}function Td(a,b,c){if(b=Sd(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a)}function Ud(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Rd(b);for(b=c.length;0<b--;)Td(c[b],"captured",a);for(b=0;b<c.length;b++)Td(c[b],"bubbled",a)}}
function Vd(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Sd(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a))}function Wd(a){a&&a.dispatchConfig.registrationName&&Vd(a._targetInst,null,a)}function Xd(a){jc(a,Ud)}var Yd=null,Zd=null,$d=null;
function ae(){if($d)return $d;var a,b=Zd,c=b.length,d,e="value"in Yd?Yd.value:Yd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return $d=e.slice(a,1<d?1-d:void 0)}function be(){return!0}function ce(){return!1}
function G(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?be:ce;this.isPropagationStopped=ce;return this}
n(G.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=be)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=be)},persist:function(){this.isPersistent=be},isPersistent:ce,destructor:function(){var a=this.constructor.Interface,
b;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ce;this._dispatchInstances=this._dispatchListeners=null}});G.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
G.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;de(c);return c};de(G);function ee(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
function fe(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function de(a){a.eventPool=[];a.getPooled=ee;a.release=fe}var ge=G.extend({data:null}),he=G.extend({data:null}),ie=[9,13,27,32],je=ya&&"CompositionEvent"in window,ke=null;ya&&"documentMode"in document&&(ke=document.documentMode);
var le=ya&&"TextEvent"in window&&!ke,me=ya&&(!je||ke&&8<ke&&11>=ke),ne=String.fromCharCode(32),oe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},pe=!1;
function qe(a,b){switch(a){case "keyup":return-1!==ie.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function re(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var se=!1;function te(a,b){switch(a){case "compositionend":return re(b);case "keypress":if(32!==b.which)return null;pe=!0;return ne;case "textInput":return a=b.data,a===ne&&pe?null:a;default:return null}}
function ue(a,b){if(se)return"compositionend"===a||!je&&qe(a,b)?(a=ae(),$d=Zd=Yd=null,se=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return me&&"ko"!==b.locale?null:b.data;default:return null}}
var ve={eventTypes:oe,extractEvents:function(a,b,c,d){var e;if(je)b:{switch(a){case "compositionstart":var f=oe.compositionStart;break b;case "compositionend":f=oe.compositionEnd;break b;case "compositionupdate":f=oe.compositionUpdate;break b}f=void 0}else se?qe(a,c)&&(f=oe.compositionEnd):"keydown"===a&&229===c.keyCode&&(f=oe.compositionStart);f?(me&&"ko"!==c.locale&&(se||f!==oe.compositionStart?f===oe.compositionEnd&&se&&(e=ae()):(Yd=d,Zd="value"in Yd?Yd.value:Yd.textContent,se=!0)),f=ge.getPooled(f,
b,c,d),e?f.data=e:(e=re(c),null!==e&&(f.data=e)),Xd(f),e=f):e=null;(a=le?te(a,c):ue(a,c))?(b=he.getPooled(oe.beforeInput,b,c,d),b.data=a,Xd(b)):b=null;return null===e?b:null===b?e:[e,b]}},we={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!we[a.type]:"textarea"===b?!0:!1}
var ye={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function ze(a,b,c){a=G.getPooled(ye.change,a,b,c);a.type="change";Da(c);Xd(a);return a}var Ae=null,Be=null;function Ce(a){mc(a)}function De(a){var b=Pd(a);if(yb(b))return a}function Ee(a,b){if("change"===a)return b}var Fe=!1;ya&&(Fe=oc("input")&&(!document.documentMode||9<document.documentMode));
function Ge(){Ae&&(Ae.detachEvent("onpropertychange",He),Be=Ae=null)}function He(a){if("value"===a.propertyName&&De(Be))if(a=ze(Be,a,nc(a)),Ja)mc(a);else{Ja=!0;try{Fa(Ce,a)}finally{Ja=!1,La()}}}function Ie(a,b,c){"focus"===a?(Ge(),Ae=b,Be=c,Ae.attachEvent("onpropertychange",He)):"blur"===a&&Ge()}function Je(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return De(Be)}function Ke(a,b){if("click"===a)return De(b)}function Le(a,b){if("input"===a||"change"===a)return De(b)}
var Me={eventTypes:ye,_isInputEventSupported:Fe,extractEvents:function(a,b,c,d){var e=b?Pd(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Ee;else if(xe(e))if(Fe)g=Le;else{g=Je;var h=Ie}else(f=e.nodeName)&&"input"===f.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(g=Ke);if(g&&(g=g(a,b)))return ze(g,c,d);h&&h(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Db(e,"number",e.value)}},Ne=G.extend({view:null,detail:null}),
Oe={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pe(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Oe[a])?!!b[a]:!1}function Qe(){return Pe}
var Re=0,Se=0,Te=!1,Ue=!1,Ve=Ne.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=Re;Re=a.screenX;return Te?"mousemove"===a.type?a.screenX-b:0:(Te=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;
var b=Se;Se=a.screenY;return Ue?"mousemove"===a.type?a.screenY-b:0:(Ue=!0,0)}}),We=Ve.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xe={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",
dependencies:["pointerout","pointerover"]}},Ye={eventTypes:Xe,extractEvents:function(a,b,c,d,e){var f="mouseover"===a||"pointerover"===a,g="mouseout"===a||"pointerout"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;f=d.window===d?d:(f=d.ownerDocument)?f.defaultView||f.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?tc(b):null,null!==b){var h=dc(b);if(b!==h||5!==b.tag&&6!==b.tag)b=null}}else g=null;if(g===b)return null;if("mouseout"===a||"mouseover"===
a){var k=Ve;var l=Xe.mouseLeave;var m=Xe.mouseEnter;var p="mouse"}else if("pointerout"===a||"pointerover"===a)k=We,l=Xe.pointerLeave,m=Xe.pointerEnter,p="pointer";a=null==g?f:Pd(g);f=null==b?f:Pd(b);l=k.getPooled(l,g,c,d);l.type=p+"leave";l.target=a;l.relatedTarget=f;c=k.getPooled(m,b,c,d);c.type=p+"enter";c.target=f;c.relatedTarget=a;d=g;p=b;if(d&&p)a:{k=d;m=p;g=0;for(a=k;a;a=Rd(a))g++;a=0;for(b=m;b;b=Rd(b))a++;for(;0<g-a;)k=Rd(k),g--;for(;0<a-g;)m=Rd(m),a--;for(;g--;){if(k===m||k===m.alternate)break a;
k=Rd(k);m=Rd(m)}k=null}else k=null;m=k;for(k=[];d&&d!==m;){g=d.alternate;if(null!==g&&g===m)break;k.push(d);d=Rd(d)}for(d=[];p&&p!==m;){g=p.alternate;if(null!==g&&g===m)break;d.push(p);p=Rd(p)}for(p=0;p<k.length;p++)Vd(k[p],"bubbled",l);for(p=d.length;0<p--;)Vd(d[p],"captured",c);return 0===(e&64)?[l]:[l,c]}};function Ze(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var $e="function"===typeof Object.is?Object.is:Ze,af=Object.prototype.hasOwnProperty;
function bf(a,b){if($e(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!af.call(b,c[d])||!$e(a[c[d]],b[c[d]]))return!1;return!0}
var cf=ya&&"documentMode"in document&&11>=document.documentMode,df={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},ef=null,ff=null,gf=null,hf=!1;
function jf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(hf||null==ef||ef!==td(c))return null;c=ef;"selectionStart"in c&&yd(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return gf&&bf(gf,c)?null:(gf=c,a=G.getPooled(df.select,ff,a,b),a.type="select",a.target=ef,Xd(a),a)}
var kf={eventTypes:df,extractEvents:function(a,b,c,d,e,f){e=f||(d.window===d?d.document:9===d.nodeType?d:d.ownerDocument);if(!(f=!e)){a:{e=cc(e);f=wa.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?Pd(b):window;switch(a){case "focus":if(xe(e)||"true"===e.contentEditable)ef=e,ff=b,gf=null;break;case "blur":gf=ff=ef=null;break;case "mousedown":hf=!0;break;case "contextmenu":case "mouseup":case "dragend":return hf=!1,jf(c,d);case "selectionchange":if(cf)break;
case "keydown":case "keyup":return jf(c,d)}return null}},lf=G.extend({animationName:null,elapsedTime:null,pseudoElement:null}),mf=G.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),nf=Ne.extend({relatedTarget:null});function of(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
var pf={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qf={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},rf=Ne.extend({key:function(a){if(a.key){var b=pf[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=of(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?qf[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(a){return"keypress"===
a.type?of(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?of(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),sf=Ve.extend({dataTransfer:null}),tf=Ne.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),uf=G.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vf=Ve.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),wf={eventTypes:Wc,extractEvents:function(a,b,c,d){var e=Yc.get(a);if(!e)return null;switch(a){case "keypress":if(0===of(c))return null;case "keydown":case "keyup":a=rf;break;case "blur":case "focus":a=nf;break;case "click":if(2===c.button)return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=
Ve;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=sf;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=tf;break;case Xb:case Yb:case Zb:a=lf;break;case $b:a=uf;break;case "scroll":a=Ne;break;case "wheel":a=vf;break;case "copy":case "cut":case "paste":a=mf;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=
We;break;default:a=G}b=a.getPooled(e,b,c,d);Xd(b);return b}};if(pa)throw Error(u(101));pa=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));ra();var xf=Nc;la=Qd;ma=xf;na=Pd;xa({SimpleEventPlugin:wf,EnterLeaveEventPlugin:Ye,ChangeEventPlugin:Me,SelectEventPlugin:kf,BeforeInputEventPlugin:ve});var yf=[],zf=-1;function H(a){0>zf||(a.current=yf[zf],yf[zf]=null,zf--)}
function I(a,b){zf++;yf[zf]=a.current;a.current=b}var Af={},J={current:Af},K={current:!1},Bf=Af;function Cf(a,b){var c=a.type.contextTypes;if(!c)return Af;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}
function Df(){H(K);H(J)}function Ef(a,b,c){if(J.current!==Af)throw Error(u(168));I(J,b);I(K,c)}function Ff(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,pb(b)||"Unknown",e));return n({},c,{},d)}function Gf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Af;Bf=J.current;I(J,a);I(K,K.current);return!0}
function Hf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(a=Ff(a,b,Bf),d.__reactInternalMemoizedMergedChildContext=a,H(K),H(J),I(J,a)):H(K);I(K,c)}
var If=r.unstable_runWithPriority,Jf=r.unstable_scheduleCallback,Kf=r.unstable_cancelCallback,Lf=r.unstable_requestPaint,Mf=r.unstable_now,Nf=r.unstable_getCurrentPriorityLevel,Of=r.unstable_ImmediatePriority,Pf=r.unstable_UserBlockingPriority,Qf=r.unstable_NormalPriority,Rf=r.unstable_LowPriority,Sf=r.unstable_IdlePriority,Tf={},Uf=r.unstable_shouldYield,Vf=void 0!==Lf?Lf:function(){},Wf=null,Xf=null,Yf=!1,Zf=Mf(),$f=1E4>Zf?Mf:function(){return Mf()-Zf};
function ag(){switch(Nf()){case Of:return 99;case Pf:return 98;case Qf:return 97;case Rf:return 96;case Sf:return 95;default:throw Error(u(332));}}function bg(a){switch(a){case 99:return Of;case 98:return Pf;case 97:return Qf;case 96:return Rf;case 95:return Sf;default:throw Error(u(332));}}function cg(a,b){a=bg(a);return If(a,b)}function dg(a,b,c){a=bg(a);return Jf(a,b,c)}function eg(a){null===Wf?(Wf=[a],Xf=Jf(Of,fg)):Wf.push(a);return Tf}function gg(){if(null!==Xf){var a=Xf;Xf=null;Kf(a)}fg()}
function fg(){if(!Yf&&null!==Wf){Yf=!0;var a=0;try{var b=Wf;cg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Wf=null}catch(c){throw null!==Wf&&(Wf=Wf.slice(a+1)),Jf(Of,gg),c;}finally{Yf=!1}}}function hg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function ig(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var jg={current:null},kg=null,lg=null,mg=null;function ng(){mg=lg=kg=null}
function og(a){var b=jg.current;H(jg);a.type._context._currentValue=b}function pg(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}function qg(a,b){kg=a;mg=lg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(rg=!0),a.firstContext=null)}
function sg(a,b){if(mg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)mg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===lg){if(null===kg)throw Error(u(308));lg=b;kg.dependencies={expirationTime:0,firstContext:b,responders:null}}else lg=lg.next=b}return a._currentValue}var tg=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}
function vg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,baseQueue:a.baseQueue,shared:a.shared,effects:a.effects})}function wg(a,b){a={expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null};return a.next=a}function xg(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}
function yg(a,b){var c=a.alternate;null!==c&&vg(c,a);a=a.updateQueue;c=a.baseQueue;null===c?(a.baseQueue=b.next=b,b.next=b):(b.next=c.next,c.next=b)}
function zg(a,b,c,d){var e=a.updateQueue;tg=!1;var f=e.baseQueue,g=e.shared.pending;if(null!==g){if(null!==f){var h=f.next;f.next=g.next;g.next=h}f=g;e.shared.pending=null;h=a.alternate;null!==h&&(h=h.updateQueue,null!==h&&(h.baseQueue=g))}if(null!==f){h=f.next;var k=e.baseState,l=0,m=null,p=null,x=null;if(null!==h){var z=h;do{g=z.expirationTime;if(g<d){var ca={expirationTime:z.expirationTime,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null};null===x?(p=x=
ca,m=k):x=x.next=ca;g>l&&(l=g)}else{null!==x&&(x=x.next={expirationTime:1073741823,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null});Ag(g,z.suspenseConfig);a:{var D=a,t=z;g=b;ca=c;switch(t.tag){case 1:D=t.payload;if("function"===typeof D){k=D.call(ca,k,g);break a}k=D;break a;case 3:D.effectTag=D.effectTag&-4097|64;case 0:D=t.payload;g="function"===typeof D?D.call(ca,k,g):D;if(null===g||void 0===g)break a;k=n({},k,g);break a;case 2:tg=!0}}null!==z.callback&&
(a.effectTag|=32,g=e.effects,null===g?e.effects=[z]:g.push(z))}z=z.next;if(null===z||z===h)if(g=e.shared.pending,null===g)break;else z=f.next=g.next,g.next=h,e.baseQueue=f=g,e.shared.pending=null}while(1)}null===x?m=k:x.next=p;e.baseState=m;e.baseQueue=x;Bg(l);a.expirationTime=l;a.memoizedState=k}}
function Cg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=e;e=c;if("function"!==typeof d)throw Error(u(191,d));d.call(e)}}}var Dg=Wa.ReactCurrentBatchConfig,Eg=(new aa.Component).refs;function Fg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;0===a.expirationTime&&(a.updateQueue.baseState=c)}
var Jg={isMounted:function(a){return(a=a._reactInternalFiber)?dc(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gg(),d=Dg.suspense;
c=Hg(c,a,d);d=wg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);xg(a,d);Ig(a,c)}};function Kg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!bf(c,d)||!bf(e,f):!0}
function Lg(a,b,c){var d=!1,e=Af;var f=b.contextType;"object"===typeof f&&null!==f?f=sg(f):(e=L(b)?Bf:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Cf(a,e):Af);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Jg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function Mg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jg.enqueueReplaceState(b,b.state,null)}
function Ng(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Eg;ug(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=sg(f):(f=L(b)?Bf:J.current,e.context=Cf(a,f));zg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Fg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||
(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jg.enqueueReplaceState(e,e.state,null),zg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.effectTag|=4)}var Og=Array.isArray;
function Pg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Eg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}
function Qg(a,b){if("textarea"!==a.type)throw Error(u(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,""));}
function Rg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Sg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Tg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Pg(a,b,c),d.return=a,d;d=Ug(c.type,c.key,c.props,null,a.mode,d);d.ref=Pg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==
c.implementation)return b=Vg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Wg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function p(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Tg(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Za:return c=Ug(b.type,b.key,b.props,null,a.mode,c),c.ref=Pg(a,null,b),c.return=a,c;case $a:return b=Vg(b,a.mode,c),b.return=a,b}if(Og(b)||
nb(b))return b=Wg(b,a.mode,c,null),b.return=a,b;Qg(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Za:return c.key===e?c.type===ab?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $a:return c.key===e?l(a,b,c,d):null}if(Og(c)||nb(c))return null!==e?null:m(a,b,c,d,null);Qg(a,c)}return null}function z(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=
a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Za:return a=a.get(null===d.key?c:d.key)||null,d.type===ab?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $a:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Og(d)||nb(d))return a=a.get(c)||null,m(b,a,d,e,null);Qg(b,d)}return null}function ca(e,g,h,k){for(var l=null,t=null,m=g,y=g=0,A=null;null!==m&&y<h.length;y++){m.index>y?(A=m,m=null):A=m.sibling;var q=x(e,m,h[y],k);if(null===q){null===m&&(m=A);break}a&&
m&&null===q.alternate&&b(e,m);g=f(q,g,y);null===t?l=q:t.sibling=q;t=q;m=A}if(y===h.length)return c(e,m),l;if(null===m){for(;y<h.length;y++)m=p(e,h[y],k),null!==m&&(g=f(m,g,y),null===t?l=m:t.sibling=m,t=m);return l}for(m=d(e,m);y<h.length;y++)A=z(m,e,y,h[y],k),null!==A&&(a&&null!==A.alternate&&m.delete(null===A.key?y:A.key),g=f(A,g,y),null===t?l=A:t.sibling=A,t=A);a&&m.forEach(function(a){return b(e,a)});return l}function D(e,g,h,l){var k=nb(h);if("function"!==typeof k)throw Error(u(150));h=k.call(h);
if(null==h)throw Error(u(151));for(var m=k=null,t=g,y=g=0,A=null,q=h.next();null!==t&&!q.done;y++,q=h.next()){t.index>y?(A=t,t=null):A=t.sibling;var D=x(e,t,q.value,l);if(null===D){null===t&&(t=A);break}a&&t&&null===D.alternate&&b(e,t);g=f(D,g,y);null===m?k=D:m.sibling=D;m=D;t=A}if(q.done)return c(e,t),k;if(null===t){for(;!q.done;y++,q=h.next())q=p(e,q.value,l),null!==q&&(g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);return k}for(t=d(e,t);!q.done;y++,q=h.next())q=z(t,e,y,q.value,l),null!==q&&(a&&null!==
q.alternate&&t.delete(null===q.key?y:q.key),g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);a&&t.forEach(function(a){return b(e,a)});return k}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ab&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Za:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ab){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,
k.sibling);d=e(k,f.props);d.ref=Pg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ab?(d=Wg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ug(f.type,f.key,f.props,null,a.mode,h),h.ref=Pg(a,d,f),h.return=a,a=h)}return g(a);case $a:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=
d.sibling}d=Vg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Tg(f,a.mode,h),d.return=a,a=d),g(a);if(Og(f))return ca(a,d,f,h);if(nb(f))return D(a,d,f,h);l&&Qg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||"Component"));}return c(a,d)}}var Xg=Rg(!0),Yg=Rg(!1),Zg={},$g={current:Zg},ah={current:Zg},bh={current:Zg};
function ch(a){if(a===Zg)throw Error(u(174));return a}function dh(a,b){I(bh,b);I(ah,a);I($g,Zg);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ob(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Ob(b,a)}H($g);I($g,b)}function eh(){H($g);H(ah);H(bh)}function fh(a){ch(bh.current);var b=ch($g.current);var c=Ob(b,a.type);b!==c&&(I(ah,a),I($g,c))}function gh(a){ah.current===a&&(H($g),H(ah))}var M={current:0};
function hh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===Bd||c.data===Cd))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function ih(a,b){return{responder:a,props:b}}
var jh=Wa.ReactCurrentDispatcher,kh=Wa.ReactCurrentBatchConfig,lh=0,N=null,O=null,P=null,mh=!1;function Q(){throw Error(u(321));}function nh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!$e(a[c],b[c]))return!1;return!0}
function oh(a,b,c,d,e,f){lh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.expirationTime=0;jh.current=null===a||null===a.memoizedState?ph:qh;a=c(d,e);if(b.expirationTime===lh){f=0;do{b.expirationTime=0;if(!(25>f))throw Error(u(301));f+=1;P=O=null;b.updateQueue=null;jh.current=rh;a=c(d,e)}while(b.expirationTime===lh)}jh.current=sh;b=null!==O&&null!==O.next;lh=0;P=O=N=null;mh=!1;if(b)throw Error(u(300));return a}
function th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function uh(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(u(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}
function vh(a,b){return"function"===typeof b?b(a):b}
function wh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.expirationTime;if(l<lh){var m={expirationTime:k.expirationTime,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=m,f=d):h=h.next=m;l>N.expirationTime&&
(N.expirationTime=l,Bg(l))}else null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),Ag(l,k.suspenseConfig),d=k.eagerReducer===a?k.eagerState:a(d,k.action);k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;$e(d,b.memoizedState)||(rg=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}
function xh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);$e(f,b.memoizedState)||(rg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}
function yh(a){var b=th();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:vh,lastRenderedState:a};a=a.dispatch=zh.bind(null,N,a);return[b.memoizedState,a]}function Ah(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}
function Bh(){return uh().memoizedState}function Ch(a,b,c,d){var e=th();N.effectTag|=a;e.memoizedState=Ah(1|b,c,void 0,void 0===d?null:d)}function Dh(a,b,c,d){var e=uh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&nh(d,g.deps)){Ah(b,c,f,d);return}}N.effectTag|=a;e.memoizedState=Ah(1|b,c,f,d)}function Eh(a,b){return Ch(516,4,a,b)}function Fh(a,b){return Dh(516,4,a,b)}function Gh(a,b){return Dh(4,2,a,b)}
function Hh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function Ih(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Dh(4,2,Hh.bind(null,b,a),c)}function Jh(){}function Kh(a,b){th().memoizedState=[a,void 0===b?null:b];return a}function Lh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}
function Mh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Nh(a,b,c){var d=ag();cg(98>d?98:d,function(){a(!0)});cg(97<d?97:d,function(){var d=kh.suspense;kh.suspense=void 0===b?null:b;try{a(!1),c()}finally{kh.suspense=d}})}
function zh(a,b,c){var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e={expirationTime:d,suspenseConfig:e,action:c,eagerReducer:null,eagerState:null,next:null};var f=b.pending;null===f?e.next=e:(e.next=f.next,f.next=e);b.pending=e;f=a.alternate;if(a===N||null!==f&&f===N)mh=!0,e.expirationTime=lh,N.expirationTime=lh;else{if(0===a.expirationTime&&(null===f||0===f.expirationTime)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.eagerReducer=f;e.eagerState=h;if($e(h,g))return}catch(k){}finally{}Ig(a,
d)}}
var sh={readContext:sg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},ph={readContext:sg,useCallback:Kh,useContext:sg,useEffect:Eh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ch(4,2,Hh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ch(4,2,a,b)},useMemo:function(a,b){var c=th();b=void 0===b?null:b;a=a();c.memoizedState=[a,
b];return a},useReducer:function(a,b,c){var d=th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=zh.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=th();a={current:a};return b.memoizedState=a},useState:yh,useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=yh(a),d=c[0],e=c[1];Eh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=
c}},[a,b]);return d},useTransition:function(a){var b=yh(!1),c=b[0];b=b[1];return[Kh(Nh.bind(null,b,a),[b,a]),c]}},qh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:wh,useRef:Bh,useState:function(){return wh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=wh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=
wh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,b,a),[b,a]),c]}},rh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:xh,useRef:Bh,useState:function(){return xh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=xh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=xh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,
b,a),[b,a]),c]}},Oh=null,Ph=null,Qh=!1;function Rh(a,b){var c=Sh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
function Th(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
function Uh(a){if(Qh){var b=Ph;if(b){var c=b;if(!Th(a,b)){b=Jd(c.nextSibling);if(!b||!Th(a,b)){a.effectTag=a.effectTag&-1025|2;Qh=!1;Oh=a;return}Rh(Oh,c)}Oh=a;Ph=Jd(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,Qh=!1,Oh=a}}function Vh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Oh=a}
function Wh(a){if(a!==Oh)return!1;if(!Qh)return Vh(a),Qh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!Gd(b,a.memoizedProps))for(b=Ph;b;)Rh(a,b),b=Jd(b.nextSibling);Vh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===Ad){if(0===b){Ph=Jd(a.nextSibling);break a}b--}else c!==zd&&c!==Cd&&c!==Bd||b++}a=a.nextSibling}Ph=null}}else Ph=Oh?Jd(a.stateNode.nextSibling):null;return!0}
function Xh(){Ph=Oh=null;Qh=!1}var Yh=Wa.ReactCurrentOwner,rg=!1;function R(a,b,c,d){b.child=null===a?Yg(b,null,c,d):Xg(b,a.child,c,d)}function Zh(a,b,c,d,e){c=c.render;var f=b.ref;qg(b,e);d=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}
function ai(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!bi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ci(a,b,g,d,e,f);a=Ug(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:bf,c(e,d)&&a.ref===b.ref))return $h(a,b,f);b.effectTag|=1;a=Sg(g,d);a.ref=b.ref;a.return=b;return b.child=a}
function ci(a,b,c,d,e,f){return null!==a&&bf(a.memoizedProps,d)&&a.ref===b.ref&&(rg=!1,e<f)?(b.expirationTime=a.expirationTime,$h(a,b,f)):di(a,b,c,d,f)}function ei(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function di(a,b,c,d,e){var f=L(c)?Bf:J.current;f=Cf(b,f);qg(b,e);c=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}
function fi(a,b,c,d,e){if(L(c)){var f=!0;Gf(b)}else f=!1;qg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Lg(b,c,d),Ng(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l));var m=c.getDerivedStateFromProps,p="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;p||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l);tg=!1;var x=b.memoizedState;g.state=x;zg(b,d,g,e);k=b.memoizedState;h!==d||x!==k||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),k=b.memoizedState),(h=tg||Kg(b,c,h,d,x,k,l))?(p||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===
typeof g.componentDidMount&&(b.effectTag|=4)):("function"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,vg(a,b),h=b.memoizedProps,g.props=b.type===b.elementType?h:ig(b.type,h),k=g.context,l=c.contextType,"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l)),m=c.getDerivedStateFromProps,(p="function"===typeof m||"function"===
typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l),tg=!1,k=b.memoizedState,g.state=k,zg(b,d,g,e),x=b.memoizedState,h!==d||k!==x||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),x=b.memoizedState),(m=tg||Kg(b,c,h,d,k,x,l))?(p||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,
x,l),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):
("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return gi(a,b,c,d,f,e)}
function gi(a,b,c,d,e,f){ei(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Hf(b,c,!1),$h(a,b,f);d=b.stateNode;Yh.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Xg(b,a.child,null,f),b.child=Xg(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Hf(b,c,!0);return b.child}function hi(a){var b=a.stateNode;b.pendingContext?Ef(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ef(a,b.context,!1);dh(a,b.containerInfo)}
var ii={dehydrated:null,retryTime:0};
function ji(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1);if(null===a){void 0!==e.fallback&&Uh(b);if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=
b;e.sibling=c;b.memoizedState=ii;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=Yg(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=Sg(a,a.pendingProps);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=Sg(d,e);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=ii;b.child=c;return d}c=Xg(b,a.child,e.children,c);b.memoizedState=null;return b.child=
c}a=a.child;if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=ii;b.child=e;return c}b.memoizedState=null;return b.child=Xg(b,a,e.children,c)}
function ki(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);pg(a.return,b)}function li(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}
function mi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&ki(a,c);else if(19===a.tag)ki(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d);if(0===(b.mode&2))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===hh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);li(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}li(b,!0,c,null,f,b.lastEffect);break;case "together":li(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}
function $h(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Bg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=Sg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Sg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}var ni,oi,pi,qi;
ni=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};oi=function(){};
pi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;ch($g.current);a=null;switch(c){case "input":f=zb(g,f);d=zb(g,d);a=[];break;case "option":f=Gb(g,f);d=Gb(g,d);a=[];break;case "select":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case "textarea":f=Ib(g,f);d=Ib(g,d);a=[];break;default:"function"!==typeof f.onClick&&"function"===typeof d.onClick&&(g.onclick=sd)}od(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if("style"===
h)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]="");else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(va.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if("style"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]="");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),
c[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else"dangerouslySetInnerHTML"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,l)):"children"===h?g===l||"string"!==typeof l&&"number"!==typeof l||(a=a||[]).push(h,""+l):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(va.hasOwnProperty(h)?(null!=l&&rd(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push("style",c);e=a;if(b.updateQueue=e)b.effectTag|=4}};
qi=function(a,b,c,d){c!==d&&(b.effectTag|=4)};function ri(a,b){switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function si(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return L(b.type)&&Df(),null;case 3:return eh(),H(K),H(J),c=b.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==a&&null!==a.child||!Wh(b)||(b.effectTag|=4),oi(b),null;case 5:gh(b);c=ch(bh.current);var e=b.type;if(null!==a&&null!=b.stateNode)pi(a,b,e,d,c),a.ref!==b.ref&&(b.effectTag|=128);else{if(!d){if(null===b.stateNode)throw Error(u(166));
return null}a=ch($g.current);if(Wh(b)){d=b.stateNode;e=b.type;var f=b.memoizedProps;d[Md]=b;d[Nd]=f;switch(e){case "iframe":case "object":case "embed":F("load",d);break;case "video":case "audio":for(a=0;a<ac.length;a++)F(ac[a],d);break;case "source":F("error",d);break;case "img":case "image":case "link":F("error",d);F("load",d);break;case "form":F("reset",d);F("submit",d);break;case "details":F("toggle",d);break;case "input":Ab(d,f);F("invalid",d);rd(c,"onChange");break;case "select":d._wrapperState=
{wasMultiple:!!f.multiple};F("invalid",d);rd(c,"onChange");break;case "textarea":Jb(d,f),F("invalid",d),rd(c,"onChange")}od(e,f);a=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(a=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(a=["children",""+h]):va.hasOwnProperty(g)&&null!=h&&rd(c,g)}switch(e){case "input":xb(d);Eb(d,f,!0);break;case "textarea":xb(d);Lb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&
(d.onclick=sd)}c=a;b.updateQueue=c;null!==c&&(b.effectTag|=4)}else{g=9===c.nodeType?c:c.ownerDocument;a===qd&&(a=Nb(e));a===qd?"script"===e?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(e,{is:d.is}):(a=g.createElement(e),"select"===e&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,e);a[Md]=b;a[Nd]=d;ni(a,b,!1,!1);b.stateNode=a;g=pd(e,d);switch(e){case "iframe":case "object":case "embed":F("load",
a);h=d;break;case "video":case "audio":for(h=0;h<ac.length;h++)F(ac[h],a);h=d;break;case "source":F("error",a);h=d;break;case "img":case "image":case "link":F("error",a);F("load",a);h=d;break;case "form":F("reset",a);F("submit",a);h=d;break;case "details":F("toggle",a);h=d;break;case "input":Ab(a,d);h=zb(a,d);F("invalid",a);rd(c,"onChange");break;case "option":h=Gb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};h=n({},d,{value:void 0});F("invalid",a);rd(c,"onChange");break;case "textarea":Jb(a,
d);h=Ib(a,d);F("invalid",a);rd(c,"onChange");break;default:h=d}od(e,h);var k=h;for(f in k)if(k.hasOwnProperty(f)){var l=k[f];"style"===f?md(a,l):"dangerouslySetInnerHTML"===f?(l=l?l.__html:void 0,null!=l&&Qb(a,l)):"children"===f?"string"===typeof l?("textarea"!==e||""!==l)&&Rb(a,l):"number"===typeof l&&Rb(a,""+l):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(va.hasOwnProperty(f)?null!=l&&rd(c,f):null!=l&&Xa(a,f,l,g))}switch(e){case "input":xb(a);Eb(a,d,!1);
break;case "textarea":xb(a);Lb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+rb(d.value));break;case "select":a.multiple=!!d.multiple;c=d.value;null!=c?Hb(a,!!d.multiple,c,!1):null!=d.defaultValue&&Hb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof h.onClick&&(a.onclick=sd)}Fd(e,d)&&(b.effectTag|=4)}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)qi(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(u(166));
c=ch(bh.current);ch($g.current);Wh(b)?(c=b.stateNode,d=b.memoizedProps,c[Md]=b,c.nodeValue!==d&&(b.effectTag|=4)):(c=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),c[Md]=b,b.stateNode=c)}return null;case 13:H(M);d=b.memoizedState;if(0!==(b.effectTag&64))return b.expirationTime=c,b;c=null!==d;d=!1;null===a?void 0!==b.memoizedProps.fallback&&Wh(b):(e=a.memoizedState,d=null!==e,c||null===e||(e=a.child.sibling,null!==e&&(f=b.firstEffect,null!==f?(b.firstEffect=e,e.nextEffect=f):(b.firstEffect=b.lastEffect=
e,e.nextEffect=null),e.effectTag=8)));if(c&&!d&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))S===ti&&(S=ui);else{if(S===ti||S===ui)S=vi;0!==wi&&null!==T&&(xi(T,U),yi(T,wi))}if(c||d)b.effectTag|=4;return null;case 4:return eh(),oi(b),null;case 10:return og(b),null;case 17:return L(b.type)&&Df(),null;case 19:H(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.effectTag&64);f=d.rendering;if(null===f)if(e)ri(d,!1);else{if(S!==ti||null!==a&&0!==(a.effectTag&
64))for(f=b.child;null!==f;){a=hh(f);if(null!==a){b.effectTag|=64;ri(d,!1);e=a.updateQueue;null!==e&&(b.updateQueue=e,b.effectTag|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;for(d=b.child;null!==d;)e=d,f=c,e.effectTag&=2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,a=e.alternate,null===a?(e.childExpirationTime=0,e.expirationTime=f,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null):(e.childExpirationTime=a.childExpirationTime,
e.expirationTime=a.expirationTime,e.child=a.child,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,f=a.dependencies,e.dependencies=null===f?null:{expirationTime:f.expirationTime,firstContext:f.firstContext,responders:f.responders}),d=d.sibling;I(M,M.current&1|2);return b.child}f=f.sibling}}else{if(!e)if(a=hh(f),null!==a){if(b.effectTag|=64,e=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.effectTag|=4),ri(d,!0),null===d.tail&&"hidden"===d.tailMode&&!f.alternate)return b=
b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*$f()-d.renderingStartTime>d.tailExpiration&&1<c&&(b.effectTag|=64,e=!0,ri(d,!1),b.expirationTime=b.childExpirationTime=c-1);d.isBackwards?(f.sibling=b.child,b.child=f):(c=d.last,null!==c?c.sibling=f:b.child=f,d.last=f)}return null!==d.tail?(0===d.tailExpiration&&(d.tailExpiration=$f()+500),c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=$f(),c.sibling=null,b=M.current,I(M,e?b&1|2:b&1),c):null}throw Error(u(156,
b.tag));}function zi(a){switch(a.tag){case 1:L(a.type)&&Df();var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:eh();H(K);H(J);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return gh(a),null;case 13:return H(M),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return H(M),null;case 4:return eh(),null;case 10:return og(a),null;default:return null}}function Ai(a,b){return{value:a,source:b,stack:qb(b)}}
var Bi="function"===typeof WeakSet?WeakSet:Set;function Ci(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=qb(c));null!==c&&pb(c.type);b=b.value;null!==a&&1===a.tag&&pb(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Di(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ei(a,c)}}function Fi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Ei(a,c)}else b.current=null}
function Gi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ig(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163));}
function Hi(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}function Ii(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}
function Ji(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:Ii(3,c);return;case 1:a=c.stateNode;if(c.effectTag&4)if(null===b)a.componentDidMount();else{var d=c.elementType===c.type?b.memoizedProps:ig(c.type,b.memoizedProps);a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}b=c.updateQueue;null!==b&&Cg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Cg(c,b,a)}return;
case 5:a=c.stateNode;null===b&&c.effectTag&4&&Fd(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Vc(c))));return;case 19:case 17:case 20:case 21:return}throw Error(u(163));}
function Ki(a,b,c){"function"===typeof Li&&Li(b);switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;cg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ei(g,h)}}a=a.next}while(a!==d)})}break;case 1:Fi(b);c=b.stateNode;"function"===typeof c.componentWillUnmount&&Di(b,c);break;case 5:Fi(b);break;case 4:Mi(a,b,c)}}
function Ni(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;a.stateNode=null;null!==b&&Ni(b)}function Oi(a){return 5===a.tag||3===a.tag||4===a.tag}
function Pi(a){a:{for(var b=a.return;null!==b;){if(Oi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Rb(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Oi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;
if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}d?Qi(a,c,b):Ri(a,c,b)}
function Qi(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=sd));else if(4!==d&&(a=a.child,null!==a))for(Qi(a,b,c),a=a.sibling;null!==a;)Qi(a,b,c),a=a.sibling}
function Ri(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Ri(a,b,c),a=a.sibling;null!==a;)Ri(a,b,c),a=a.sibling}
function Mi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Ki(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break a;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=
f,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Ki(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}
function Si(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Hi(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Nd]=d;"input"===a&&"radio"===d.type&&null!=d.name&&Bb(c,d);pd(a,e);b=pd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];"style"===g?md(c,h):"dangerouslySetInnerHTML"===g?Qb(c,h):"children"===g?Rb(c,h):Xa(c,g,h,b)}switch(a){case "input":Cb(c,d);break;
case "textarea":Kb(c,d);break;case "select":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Hb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Hb(c,!!d.multiple,d.defaultValue,!0):Hb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;return;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Vc(b.containerInfo));return;case 12:return;case 13:c=b;null===b.memoizedState?
d=!1:(d=!0,c=b.child,Ti=$f());if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null,f.style.display=ld("display",e));else if(6===a.tag)a.stateNode.nodeValue=d?"":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=
f;continue}else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===c)break;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}Ui(b);return;case 19:Ui(b);return;case 17:return}throw Error(u(163));}function Ui(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Bi);b.forEach(function(b){var d=Vi.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
var Wi="function"===typeof WeakMap?WeakMap:Map;function Xi(a,b,c){c=wg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Yi||(Yi=!0,Zi=d);Ci(a,b)};return c}
function $i(a,b,c){c=wg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ci(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===aj?aj=new Set([this]):aj.add(this),Ci(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}
var bj=Math.ceil,cj=Wa.ReactCurrentDispatcher,dj=Wa.ReactCurrentOwner,V=0,ej=8,fj=16,gj=32,ti=0,hj=1,ij=2,ui=3,vi=4,jj=5,W=V,T=null,X=null,U=0,S=ti,kj=null,lj=1073741823,mj=1073741823,nj=null,wi=0,oj=!1,Ti=0,pj=500,Y=null,Yi=!1,Zi=null,aj=null,qj=!1,rj=null,sj=90,tj=null,uj=0,vj=null,wj=0;function Gg(){return(W&(fj|gj))!==V?1073741821-($f()/10|0):0!==wj?wj:wj=1073741821-($f()/10|0)}
function Hg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=ag();if(0===(b&4))return 99===d?1073741823:1073741822;if((W&fj)!==V)return U;if(null!==c)a=hg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=hg(a,150,100);break;case 97:case 96:a=hg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==T&&a===U&&--a;return a}
function Ig(a,b){if(50<uj)throw uj=0,vj=null,Error(u(185));a=xj(a,b);if(null!==a){var c=ag();1073741823===b?(W&ej)!==V&&(W&(fj|gj))===V?yj(a):(Z(a),W===V&&gg()):Z(a);(W&4)===V||98!==c&&99!==c||(null===tj?tj=new Map([[a,b]]):(c=tj.get(a),(void 0===c||c>b)&&tj.set(a,b)))}}
function xj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(T===e&&(Bg(b),S===vi&&xi(e,U)),yi(e,b));return e}
function zj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Aj(a,b))return b;var c=a.lastPingedTime;a=a.nextKnownPendingLevel;a=c>a?c:a;return 2>=a&&b!==a?0:a}
function Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=eg(yj.bind(null,a));else{var b=zj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Gg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Tf&&Kf(c)}a.callbackExpirationTime=
b;a.callbackPriority=d;b=1073741823===b?eg(yj.bind(null,a)):dg(d,Bj.bind(null,a),{timeout:10*(1073741821-b)-$f()});a.callbackNode=b}}}
function Bj(a,b){wj=0;if(b)return b=Gg(),Cj(a,b),Z(a),null;var c=zj(a);if(0!==c){b=a.callbackNode;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&c===U||Ej(a,c);if(null!==X){var d=W;W|=fj;var e=Fj();do try{Gj();break}catch(h){Hj(a,h)}while(1);ng();W=d;cj.current=e;if(S===hj)throw b=kj,Ej(a,c),xi(a,c),Z(a),b;if(null===X)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=S,T=null,d){case ti:case hj:throw Error(u(345));case ij:Cj(a,2<c?2:c);break;case ui:xi(a,c);d=a.lastSuspendedTime;
c===d&&(a.nextKnownPendingLevel=Ij(e));if(1073741823===lj&&(e=Ti+pj-$f(),10<e)){if(oj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Ej(a,c);break}}f=zj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=Hd(Jj.bind(null,a),e);break}Jj(a);break;case vi:xi(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Ij(e));if(oj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Ej(a,c);break}e=zj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=
d;break}1073741823!==mj?d=10*(1073741821-mj)-$f():1073741823===lj?d=0:(d=10*(1073741821-lj)-5E3,e=$f(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*bj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=Hd(Jj.bind(null,a),d);break}Jj(a);break;case jj:if(1073741823!==lj&&null!==nj){f=lj;var g=nj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=$f()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){xi(a,c);a.timeoutHandle=
Hd(Jj.bind(null,a),d);break}}Jj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Bj.bind(null,a)}}return null}
function yj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&b===U||Ej(a,b);if(null!==X){var c=W;W|=fj;var d=Fj();do try{Kj();break}catch(e){Hj(a,e)}while(1);ng();W=c;cj.current=d;if(S===hj)throw c=kj,Ej(a,b),xi(a,b),Z(a),c;if(null!==X)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;T=null;Jj(a);Z(a)}return null}function Lj(){if(null!==tj){var a=tj;tj=null;a.forEach(function(a,c){Cj(c,a);Z(c)});gg()}}
function Mj(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,W===V&&gg()}}function Nj(a,b){var c=W;W&=-2;W|=ej;try{return a(b)}finally{W=c,W===V&&gg()}}
function Ej(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Id(c));if(null!==X)for(c=X.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Df();break;case 3:eh();H(K);H(J);break;case 5:gh(d);break;case 4:eh();break;case 13:H(M);break;case 19:H(M);break;case 10:og(d)}c=c.return}T=a;X=Sg(a.current,null);U=b;S=ti;kj=null;mj=lj=1073741823;nj=null;wi=0;oj=!1}
function Hj(a,b){do{try{ng();jh.current=sh;if(mh)for(var c=N.memoizedState;null!==c;){var d=c.queue;null!==d&&(d.pending=null);c=c.next}lh=0;P=O=N=null;mh=!1;if(null===X||null===X.return)return S=hj,kj=b,X=null;a:{var e=a,f=X.return,g=X,h=b;b=U;g.effectTag|=2048;g.firstEffect=g.lastEffect=null;if(null!==h&&"object"===typeof h&&"function"===typeof h.then){var k=h;if(0===(g.mode&2)){var l=g.alternate;l?(g.updateQueue=l.updateQueue,g.memoizedState=l.memoizedState,g.expirationTime=l.expirationTime):(g.updateQueue=
null,g.memoizedState=null)}var m=0!==(M.current&1),p=f;do{var x;if(x=13===p.tag){var z=p.memoizedState;if(null!==z)x=null!==z.dehydrated?!0:!1;else{var ca=p.memoizedProps;x=void 0===ca.fallback?!1:!0!==ca.unstable_avoidThisFallback?!0:m?!1:!0}}if(x){var D=p.updateQueue;if(null===D){var t=new Set;t.add(k);p.updateQueue=t}else D.add(k);if(0===(p.mode&2)){p.effectTag|=64;g.effectTag&=-2981;if(1===g.tag)if(null===g.alternate)g.tag=17;else{var y=wg(1073741823,null);y.tag=2;xg(g,y)}g.expirationTime=1073741823;
break a}h=void 0;g=b;var A=e.pingCache;null===A?(A=e.pingCache=new Wi,h=new Set,A.set(k,h)):(h=A.get(k),void 0===h&&(h=new Set,A.set(k,h)));if(!h.has(g)){h.add(g);var q=Oj.bind(null,e,k,g);k.then(q,q)}p.effectTag|=4096;p.expirationTime=b;break a}p=p.return}while(null!==p);h=Error((pb(g.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+qb(g))}S!==
jj&&(S=ij);h=Ai(h,g);p=f;do{switch(p.tag){case 3:k=h;p.effectTag|=4096;p.expirationTime=b;var B=Xi(p,k,b);yg(p,B);break a;case 1:k=h;var w=p.type,ub=p.stateNode;if(0===(p.effectTag&64)&&("function"===typeof w.getDerivedStateFromError||null!==ub&&"function"===typeof ub.componentDidCatch&&(null===aj||!aj.has(ub)))){p.effectTag|=4096;p.expirationTime=b;var vb=$i(p,k,b);yg(p,vb);break a}}p=p.return}while(null!==p)}X=Pj(X)}catch(Xc){b=Xc;continue}break}while(1)}
function Fj(){var a=cj.current;cj.current=sh;return null===a?sh:a}function Ag(a,b){a<lj&&2<a&&(lj=a);null!==b&&a<mj&&2<a&&(mj=a,nj=b)}function Bg(a){a>wi&&(wi=a)}function Kj(){for(;null!==X;)X=Qj(X)}function Gj(){for(;null!==X&&!Uf();)X=Qj(X)}function Qj(a){var b=Rj(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=Pj(a));dj.current=null;return b}
function Pj(a){X=a;do{var b=X.alternate;a=X.return;if(0===(X.effectTag&2048)){b=si(b,X,U);if(1===U||1!==X.childExpirationTime){for(var c=0,d=X.child;null!==d;){var e=d.expirationTime,f=d.childExpirationTime;e>c&&(c=e);f>c&&(c=f);d=d.sibling}X.childExpirationTime=c}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=X.firstEffect),null!==X.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=X.firstEffect),a.lastEffect=X.lastEffect),1<X.effectTag&&(null!==
a.lastEffect?a.lastEffect.nextEffect=X:a.firstEffect=X,a.lastEffect=X))}else{b=zi(X);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=X.sibling;if(null!==b)return b;X=a}while(null!==X);S===ti&&(S=jj);return null}function Ij(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Jj(a){var b=ag();cg(99,Sj.bind(null,a,b));return null}
function Sj(a,b){do Dj();while(null!==rj);if((W&(fj|gj))!==V)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Ij(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=
d-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===T&&(X=T=null,U=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=W;W|=gj;dj.current=null;Dd=fd;var g=xd();if(yd(g)){if("selectionStart"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,
m=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(wb){h=null;break a}var p=0,x=-1,z=-1,ca=0,D=0,t=g,y=null;b:for(;;){for(var A;;){t!==h||0!==l&&3!==t.nodeType||(x=p+l);t!==m||0!==k&&3!==t.nodeType||(z=p+k);3===t.nodeType&&(p+=t.nodeValue.length);if(null===(A=t.firstChild))break;y=t;t=A}for(;;){if(t===g)break b;y===h&&++ca===l&&(x=p);y===m&&++D===k&&(z=p);if(null!==(A=t.nextSibling))break;t=y;y=t.parentNode}t=A}h=-1===x||-1===z?null:{start:x,end:z}}else h=null}h=h||{start:0,end:0}}else h=
null;Ed={activeElementDetached:null,focusedElem:g,selectionRange:h};fd=!1;Y=e;do try{Tj()}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var q=Y.effectTag;q&16&&Rb(Y.stateNode,"");if(q&128){var B=Y.alternate;if(null!==B){var w=B.ref;null!==w&&("function"===typeof w?w(null):w.current=null)}}switch(q&1038){case 2:Pi(Y);Y.effectTag&=-3;break;case 6:Pi(Y);Y.effectTag&=-3;Si(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=
-1025;Si(Y.alternate,Y);break;case 4:Si(Y.alternate,Y);break;case 8:l=Y,Mi(g,l,h),Ni(l)}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);w=Ed;B=xd();q=w.focusedElem;h=w.selectionRange;if(B!==q&&q&&q.ownerDocument&&wd(q.ownerDocument.documentElement,q)){null!==h&&yd(q)&&(B=h.start,w=h.end,void 0===w&&(w=B),"selectionStart"in q?(q.selectionStart=B,q.selectionEnd=Math.min(w,q.value.length)):(w=(B=q.ownerDocument||document)&&B.defaultView||window,w.getSelection&&
(w=w.getSelection(),l=q.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!w.extend&&g>h&&(l=h,h=g,g=l),l=vd(q,g),m=vd(q,h),l&&m&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(B=B.createRange(),B.setStart(l.node,l.offset),w.removeAllRanges(),g>h?(w.addRange(B),w.extend(m.node,m.offset)):(B.setEnd(m.node,m.offset),w.addRange(B))))));B=[];for(w=q;w=w.parentNode;)1===w.nodeType&&B.push({element:w,left:w.scrollLeft,
top:w.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<B.length;q++)w=B[q],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}fd=!!Dd;Ed=Dd=null;a.current=c;Y=e;do try{for(q=a;null!==Y;){var ub=Y.effectTag;ub&36&&Ji(q,Y.alternate,Y);if(ub&128){B=void 0;var vb=Y.ref;if(null!==vb){var Xc=Y.stateNode;switch(Y.tag){case 5:B=Xc;break;default:B=Xc}"function"===typeof vb?vb(B):vb.current=B}}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=
null;Vf();W=f}else a.current=c;if(qj)qj=!1,rj=a,sj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(aj=null);1073741823===b?a===vj?uj++:(uj=0,vj=a):uj=0;"function"===typeof Uj&&Uj(c.stateNode,d);Z(a);if(Yi)throw Yi=!1,a=Zi,Zi=null,a;if((W&ej)!==V)return null;gg();return null}function Tj(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Gi(Y.alternate,Y);0===(a&512)||qj||(qj=!0,dg(97,function(){Dj();return null}));Y=Y.nextEffect}}
function Dj(){if(90!==sj){var a=97<sj?97:sj;sj=90;return cg(a,Vj)}}function Vj(){if(null===rj)return!1;var a=rj;rj=null;if((W&(fj|gj))!==V)throw Error(u(331));var b=W;W|=gj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:case 22:Hi(5,c),Ii(5,c)}}catch(d){if(null===a)throw Error(u(330));Ei(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}W=b;gg();return!0}
function Wj(a,b,c){b=Ai(c,b);b=Xi(a,b,1073741823);xg(a,b);a=xj(a,1073741823);null!==a&&Z(a)}function Ei(a,b){if(3===a.tag)Wj(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){Wj(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===aj||!aj.has(d))){a=Ai(b,a);a=$i(c,a,1073741823);xg(c,a);c=xj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}
function Oj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);T===a&&U===c?S===vi||S===ui&&1073741823===lj&&$f()-Ti<pj?Ej(a,U):oj=!0:Aj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,Z(a)))}function Vi(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Gg(),b=Hg(b,a,null));a=xj(a,b);null!==a&&Z(a)}var Rj;
Rj=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)rg=!0;else{if(d<c){rg=!1;switch(b.tag){case 3:hi(b);Xh();break;case 5:fh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Gf(b);break;case 4:dh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;e=b.type._context;I(jg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;
if(0!==d&&d>=c)return ji(a,b,c);I(M,M.current&1);b=$h(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return mi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current);if(!d)return null}return $h(a,b,c)}rg=!1}}else rg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Cf(b,J.current);qg(b,c);e=oh(null,
b,d,a,e,c);b.effectTag|=1;if("object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(L(d)){var f=!0;Gf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;ug(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Fg(b,d,g,a);e.updater=Jg;b.stateNode=e;e._reactInternalFiber=b;Ng(b,d,a,c);b=gi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:a:{e=b.elementType;null!==a&&(a.alternate=
null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;ob(e);if(1!==e._status)throw e._result;e=e._result;b.type=e;f=b.tag=Xj(e);a=ig(e,a);switch(f){case 0:b=di(null,b,e,a,c);break a;case 1:b=fi(null,b,e,a,c);break a;case 11:b=Zh(null,b,e,a,c);break a;case 14:b=ai(null,b,e,ig(e.type,a),d,c);break a}throw Error(u(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),di(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),fi(a,b,d,e,c);
case 3:hi(b);d=b.updateQueue;if(null===a||null===d)throw Error(u(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;vg(a,b);zg(b,d,null,c);d=b.memoizedState.element;if(d===e)Xh(),b=$h(a,b,c);else{if(e=b.stateNode.hydrate)Ph=Jd(b.stateNode.containerInfo.firstChild),Oh=b,e=Qh=!0;if(e)for(c=Yg(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),Xh();b=b.child}return b;case 5:return fh(b),null===a&&Uh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:
null,g=e.children,Gd(d,e)?g=null:null!==f&&Gd(d,f)&&(b.effectTag|=16),ei(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&Uh(b),null;case 13:return ji(a,b,c);case 4:return dh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Xg(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),Zh(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,
b,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(jg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=$e(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!K.current){b=$h(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==
k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=wg(c,null),l.tag=2,xg(h,l));h.expirationTime<c&&(h.expirationTime=c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);pg(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=
g}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,qg(b,c),e=sg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;case 14:return e=b.type,f=ig(e,b.pendingProps),f=ig(e.type,f),ai(a,b,e,f,d,c);case 15:return ci(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Gf(b)):a=!1,qg(b,c),Lg(b,d,e),Ng(b,d,e,c),gi(null,
b,d,!0,a,c);case 19:return mi(a,b,c)}throw Error(u(156,b.tag));};var Uj=null,Li=null;function Yj(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Uj=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Li=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}
function Zj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Sh(a,b,c,d){return new Zj(a,b,c,d)}
function bi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Xj(a){if("function"===typeof a)return bi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gb)return 11;if(a===jb)return 14}return 2}
function Sg(a,b){var c=a.alternate;null===c?(c=Sh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,
firstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function Ug(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bi(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ab:return Wg(c.children,e,f,b);case fb:g=8;e|=7;break;case bb:g=8;e|=1;break;case cb:return a=Sh(12,c,b,e|8),a.elementType=cb,a.type=cb,a.expirationTime=f,a;case hb:return a=Sh(13,c,b,e),a.type=hb,a.elementType=hb,a.expirationTime=f,a;case ib:return a=Sh(19,c,b,e),a.elementType=ib,a.expirationTime=f,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case db:g=
10;break a;case eb:g=9;break a;case gb:g=11;break a;case jb:g=14;break a;case kb:g=16;d=null;break a;case lb:g=22;break a}throw Error(u(130,null==a?a:typeof a,""));}b=Sh(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Wg(a,b,c,d){a=Sh(7,a,d,b);a.expirationTime=c;return a}function Tg(a,b,c){a=Sh(6,a,null,b);a.expirationTime=c;return a}
function Vg(a,b,c){b=Sh(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function ak(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}
function Aj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function xi(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}
function yi(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Cj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}
function bk(a,b,c,d){var e=b.current,f=Gg(),g=Dg.suspense;f=Hg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(dc(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=Ff(c,k,h);break a}}c=h}else c=Af;null===b.context?b.context=c:b.pendingContext=c;b=wg(f,g);b.payload={element:a};d=void 0===
d?null:d;null!==d&&(b.callback=d);xg(e,b);Ig(e,f);return f}function ck(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function dk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function ek(a,b){dk(a,b);(a=a.alternate)&&dk(a,b)}
function fk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new ak(a,b,c),e=Sh(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;ug(e);a[Od]=d.current;c&&0!==b&&Jc(a,9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}fk.prototype.render=function(a){bk(a,this._internalRoot,null,null)};fk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;bk(null,a,null,function(){b[Od]=null})};
function gk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function hk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new fk(a,0,b?{hydrate:!0}:void 0)}
function ik(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=ck(g);h.call(a)}}bk(b,g,a,e)}else{f=c._reactRootContainer=hk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=ck(g);k.call(a)}}Nj(function(){bk(b,g,a,e)})}return ck(g)}function jk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$a,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
wc=function(a){if(13===a.tag){var b=hg(Gg(),150,100);Ig(a,b);ek(a,b)}};xc=function(a){13===a.tag&&(Ig(a,3),ek(a,3))};yc=function(a){if(13===a.tag){var b=Gg();b=Hg(b,a,null);Ig(a,b);ek(a,b)}};
za=function(a,b,c){switch(b){case "input":Cb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Qd(d);if(!e)throw Error(u(90));yb(d);Cb(d,e)}}}break;case "textarea":Kb(a,c);break;case "select":b=c.value,null!=b&&Hb(a,!!c.multiple,b,!1)}};Fa=Mj;
Ga=function(a,b,c,d,e){var f=W;W|=4;try{return cg(98,a.bind(null,b,c,d,e))}finally{W=f,W===V&&gg()}};Ha=function(){(W&(1|fj|gj))===V&&(Lj(),Dj())};Ia=function(a,b){var c=W;W|=2;try{return a(b)}finally{W=c,W===V&&gg()}};function kk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gk(b))throw Error(u(200));return jk(a,b,null,c)}var lk={Events:[Nc,Pd,Qd,xa,ta,Xd,function(a){jc(a,Wd)},Da,Ea,id,mc,Dj,{current:!1}]};
(function(a){var b=a.findFiberByHostInstance;return Yj(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Wa.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hc(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:tc,bundleType:0,version:"16.14.0",
rendererPackageName:"react-dom"});exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lk;exports.createPortal=kk;exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if("function"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=hc(b);a=null===a?null:a.stateNode;return a};
exports.flushSync=function(a,b){if((W&(fj|gj))!==V)throw Error(u(187));var c=W;W|=1;try{return cg(99,a.bind(null,b))}finally{W=c,gg()}};exports.hydrate=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!0,c)};exports.render=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!1,c)};
exports.unmountComponentAtNode=function(a){if(!gk(a))throw Error(u(40));return a._reactRootContainer?(Nj(function(){ik(null,null,a,!1,function(){a._reactRootContainer=null;a[Od]=null})}),!0):!1};exports.unstable_batchedUpdates=Mj;exports.unstable_createPortal=function(a,b){return kk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};
exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!gk(c))throw Error(u(200));if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return ik(a,b,c,!1,d)};exports.version="16.14.0";


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(208);
} else {
  module.exports = require('./cjs/scheduler.development.js');
}


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var f,g,h,k,l;
if("undefined"===typeof window||"function"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,
y=window.setTimeout,z=window.clearTimeout;if("undefined"!==typeof console){var A=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");"function"!==typeof A&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===
typeof w&&"function"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=
function(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}
function M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;
function V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}
function X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}
function Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};
exports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=Z;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if("object"===typeof c&&null!==c){var e=c.delay;e="number"===typeof e&&0<e?d+e:d;c="number"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};
exports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The <code>DomModel</code> Class creates a data model from
 * attributes, text, and children of a given element.
 */
var DOMModel =
/*#__PURE__*/
function () {
  function DOMModel(element) {
    _classCallCheck(this, DOMModel);

    this.props = {};
    this.element = element;
    this.props.element = element;
    this.getId();
    this.getClassList();
    this.getChildNodes();
  }
  /**
   * Get `this.props.id` from `element.id`.
   */


  _createClass(DOMModel, [{
    key: "getId",
    value: function getId() {
      this.props.id = this.element.id;
    }
    /**
     * Get `this.props.classList` from `element.classList`.
     */

  }, {
    key: "getClassList",
    value: function getClassList() {
      this.props.classList = this.element.classList;
    }
    /**
     * Get the elements data attribute.
     * Note that data attribute names are specified in dash-style in the DOM,
     * but camelCase is used to specify the name here due to the use of `element.dataset`
     * (e.g: `data-my-attr-name` would be `myAttrName`)
     * @param {string} name Attribute name in camelCase
     */

  }, {
    key: "getDataAttribute",
    value: function getDataAttribute(name) {
      this.props[name] = this.element.dataset[name];
    }
    /**
     * Get an attribute from the element.  The full attribute name must be used.
     * Use `getDataAttribute` for `data-*` attributes.
     * The following are equivalent:
     *     `getAttribute('data-my-attr', 'myAttr')`
     *     `getDataAttribute('myAttr')`
     * @param {*} name - the full attribute name
     * @param {*} [propName] - The name to refer to this attribute by.  Defaults to `name`.
     */

  }, {
    key: "getAttribute",
    value: function getAttribute(name, propName) {
      if (!propName) {
        propName = name;
      }

      this.props[propName] = this.element.getAttribute(name);
    }
    /**
     * Get the text content found in the element.
     * Note that this will only retrieve the first node of text found.
     */

  }, {
    key: "getTextContent",
    value: function getTextContent() {
      var textNode = this.getChildNode('#text');

      if (textNode !== null) {
        this.props['text'] = textNode.textContent;
      } else {
        this.props['text'] = null;
      }
    }
    /**
     * Get a React DOM Component that is nested within the parent component.
     * @param {string} name - node name to find and apply `model` to
     * @param {object} model - DOMModel to apply to the `name` node
     */

  }, {
    key: "getChildDOMModel",
    value: function getChildDOMModel(name, model) {
      var childElement = this.getChildNode(name);

      if (childElement !== null) {
        this.props[name] = new model(childElement);
      } else {
        this.props[name] = null;
      }
    }
    /**
     * Get all nested React DOM Components as an array by searching
     * for all nodes that match `name`
     * @param {*} name - node name to find and apply `model` to
     * @param {*} model - DOMModel to apply to the `name` node
     */

  }, {
    key: "getChildDOMModelArray",
    value: function getChildDOMModelArray(name, model) {
      this.props[name] = [];

      for (var i = 0; i < this.nodes.length; ++i) {
        var nodeName = this.nodes[i].nodeName.toLowerCase();

        if (nodeName === name) {
          this.props[name].push(new model(this.nodes[i]));
        }
      }
    }
    /**
     * Assign `element.childNodes` to `this.nodes`.
     */

  }, {
    key: "getChildNodes",
    value: function getChildNodes() {
      this.nodes = this.element.childNodes;
    }
    /**
     * Get the first node matching `name`
     * @param {string} name - nodeName to search for
     * @returns {node} node that matches `name` || `null`
     */

  }, {
    key: "getChildNode",
    value: function getChildNode(name) {
      for (var i = 0; i < this.nodes.length; ++i) {
        var nodeName = this.nodes[i].nodeName.toLowerCase();

        if (nodeName === name) {
          return this.nodes[i];
        }
      }

      return null;
    }
  }]);

  return DOMModel;
}();

exports.default = DOMModel;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * Utility function to verify that the React and render objects are valid.
 * @param {*} react React from 'react'
 * @param {*} reactDOMRender { render } from 'react-dom'
 */
var verifyReactObjects = function verifyReactObjects(react, reactDOMRender) {
  if (!react || typeof react.createElement !== 'function' || typeof react.Component !== 'function') {
    console.warn('DOMRegistry: Invalid React object passed in.  Please verify the React parameter passed to DOMRegistry');
    return false;
  }

  var reactMajorVersion = react.version ? parseInt(react.version.split('.')[0]) : 0;

  if (reactMajorVersion < 16) {
    console.warn('DOMRegistry: Invalid React version.  React >= 16 must be used.  React major version detected: ', reactMajorVersion);
    return false;
  }

  if (typeof reactDOMRender !== 'function') {
    console.warn('DOMRegistry: Invalid reactDOMRender function passed in.  Please verify that `render` from `react-dom` is passed in.');
    return false;
  }

  return true;
};
/* global document, MutationObserver */

/**
 * The <code>DOMRegistry</code> Class is used to register, find, and
 * render React DOM Components. It provides a mechanism to determine if
 * a registered DOM Component is a child of an existing DOM Component.
 */


var DOMRegistry =
/*#__PURE__*/
function () {
  /**
   * DOMRegistry Constructor.  Pass in the React (from 'react') and render (from 'react-dom') objects
   * to use in rendering the DOMComponents.
   * @param {object} React The main React object
   * @param {function} reactDOMRender The render function from ReactDOM
   */
  function DOMRegistry(React, reactDOMRender) {
    _classCallCheck(this, DOMRegistry);

    verifyReactObjects(React, reactDOMRender);
    this.React = React;
    this.reactDOMRender = reactDOMRender;
    this.components = {};
  }
  /**
   * Register components for the registry to process
   * @param {object} components Object containing RDC components to register.  The key will be used as the
   */


  _createClass(DOMRegistry, [{
    key: "register",
    value: function register(components) {
      if (!this.components) {
        this.components = components;
      } else {
        this.components = Object.assign(this.components, components);
      }

      this.getNodeNames();
    }
    /**
     * Initialize the supplied element to find
     * child components and render them.
     *
     * @param {element} element (including children) to check for RDCs, defaults to `document`
     */

  }, {
    key: "init",
    value: function init() {
      var _this = this;

      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;
      this.element = element; // Loop through all registred DOM Components

      var compArray = Object.keys(this.components);
      compArray.forEach(function (name) {
        _this.renderAll(_this.element, _this.components[name]);
      });
    }
    /**
     * Render the component. If an element is not supplied,
     * the element class property will be used to find all
     * nodes to be rendered.
     * @param {DOMComponent} component - component to render
     * @param {HTMLElement} element
     */

  }, {
    key: "render",
    value: function render(component, element) {
      if (element) {
        component.render(element, this.React, this.reactDOMRender, this.element);
      } else {
        this.renderAll(this.element, component);
      }
    }
    /**
     * Render All of the matching components
     * @param {element} parentElement
     * @param {object} component RDC component to render
     */

  }, {
    key: "renderAll",
    value: function renderAll(parentElement, component) {
      var _this2 = this;

      // Find all potential nodes of the components
      var componentNodes = parentElement.querySelectorAll(component.nodeName); // Loop through each node and determine if we can render it.

      Array.prototype.forEach.call(componentNodes, function (componentNode) {
        var canRender = _this2.traverseUpDom(componentNode);

        if (canRender) {
          component.render(componentNode, _this2.React, _this2.reactDOMRender, _this2.element);
        }
      });
    }
    /**
     * Traverse up the DOM from the supplied node to see if any parents
     * are React DOM Components.
     * @return {boolean} canRender Whether the component can render with React.
     */

  }, {
    key: "traverseUpDom",
    value: function traverseUpDom(node) {
      var parentNode = node.parentNode; // If the DOM has already been swapped out by React, the parent node will be null.

      if (parentNode !== null) {
        var parentNodeName = parentNode.nodeName.toLowerCase();

        if (this.nodeNames.includes(parentNodeName)) {
          return false;
        } else if (parentNodeName === 'body') {
          return true;
        }

        this.traverseUpDom(parentNode);
        return true;
      }

      return false;
    }
    /**
     * Create an array of element node names to look for.
     * @return {array} nodeNames
     */

  }, {
    key: "getNodeNames",
    value: function getNodeNames() {
      var _this3 = this;

      this.nodeNames = [];
      var compArray = Object.keys(this.components);
      compArray.forEach(function (name) {
        _this3.nodeNames.push(_this3.components[name].nodeName);
      });
    }
  }]);

  return DOMRegistry;
}();

exports.default = DOMRegistry;

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createElement = createElement;
exports.render = render;
exports.default = createRDC;

function createElement(model, component, element, React) {
  // Instantiate our DomModel
  var domModel = new model(element);
  return React.createElement(component, domModel.props);
}

function render(element, React, reactDomRender, rootElement) {
  if (!React || !reactDomRender) {
    console.warn('React (from react) and render (from react-dom) must be passed in.');
  } // Create our React element


  var reactElement = createElement(this.model, this.component, element, React); // Render it using ReactDOM.render
  // Note that ref will not always be populated,
  // see the notes at https://reactjs.org/docs/react-dom.html#render for details

  var ref = reactDomRender(reactElement, element); // Every render gets a new entry in this.rendered

  this.rendered.push({
    element: element,
    reactElement: reactElement,
    ref: ref,
    rootElement: rootElement
  });
}
/**
 * Create a React DOM Component from the given parameters.
 * @param {string} nodeName Name of the element/node that will become the React component
 * @param {object} model DOMModel created for the component
 * @param {object} component React Component to use
 * @returns {object} React DOM Component to be rendered
 */


function createRDC(nodeName, model, component) {
  if (!nodeName || !model || !component) {
    console.warn('createRDC requires nodeName, model, and component parameters to be defined.');
  } // An array to store references to all rendered instances of the component


  var rendered = [];
  return {
    nodeName: nodeName,
    model: model,
    component: component,
    render: render,
    rendered: rendered
  };
}

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

const { MinPriorityQueue } = __webpack_require__(213);
const { MaxPriorityQueue } = __webpack_require__(217);
const { PriorityQueue } = __webpack_require__(64)

module.exports = { MinPriorityQueue, MaxPriorityQueue, PriorityQueue };


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>
 * @license MIT
 */

const { MinHeap } = __webpack_require__(62);
const { PriorityQueue } = __webpack_require__(64);

/**
 * @class MinPriorityQueue
 * @extends PriorityQueue
 */
class MinPriorityQueue extends PriorityQueue {
  constructor(options) {
    super(options);
    if (!this._compare) {
      this._heap = new MinHeap();
    }
  }

  static from(entries) {
    const queue = new MinPriorityQueue();

    entries.forEach(([element, priority]) => {
      queue.enqueue(element, priority);
    });

    return queue;
  }
}

exports.MinPriorityQueue = MinPriorityQueue;


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @license MIT
 * @copyright 2019 Eyas Ranjous <eyas.ranjous@gmail.com>
 */

const { Heap } = __webpack_require__(63);

/**
 * @class MinHeap
 * @extends Heap
 */
class MinHeap extends Heap {
  /**
   * Checks two nodes are in relatively valid position
   * @private
   * @param {object} parent
   * @param {object} child
   * @returns {boolean}
   */
  _compareKeys(parentKey, childKey) {
    return parentKey < childKey;
  }

  /**
   * Returns min child's index of two children before an index
   * @protected
   * @param {number} index
   * @param {number} leftChildIndex
   * @param {number} rightChildIndex
   * @returns {number}
   */
  _compareChildrenBefore(index, leftChildIndex, rightChildIndex) {
    const leftChildKey = this._getKey(this._nodes[leftChildIndex]);
    const rightChildKey = this._getKey(this._nodes[rightChildIndex]);

    if (rightChildKey < leftChildKey && rightChildIndex < index) {
      return rightChildIndex;
    }
    return leftChildIndex;
  }

  /**
   * Returns a shallow copy of the heap
   * @public
   * @returns {MinHeap}
   */
  clone() {
    return super._clone(MinHeap);
  }

  /**
   * Builds a min heap from an array of items
   * @public
   * @static
   * @param {array} list
   * @returns {MinHeap}
   */
  static heapify(list) {
    return super._heapify(list, MinHeap);
  }

  /**
   * Checks if a list of list is a valid min heap
   * @public
   * @static
   * @param {array} list
   * @returns {boolean}
   */
  static isHeapified(list) {
    return super._isHeapified(list, MinHeap);
  }
}

exports.MinHeap = MinHeap;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @license MIT
 * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>
 */

const { Heap } = __webpack_require__(63);

/**
 * @class MaxHeap
 * @extends Heap
 */
class MaxHeap extends Heap {
  /**
   * Checks two nodes are in relatively valid position
   * @private
   * @param {object} parent
   * @param {object} child
   * @returns {boolean}
   */
  _compareKeys(parentKey, childKey) {
    return parentKey > childKey;
  }

  /**
   * Returns max child's index of two children before an index
   * @private
   * @param {number} index
   * @param {number} leftChildIndex
   * @param {number} rightChildIndex
   * @returns {number}
   */
  _compareChildrenBefore(index, leftChildIndex, rightChildIndex) {
    const leftChildKey = this._getKey(this._nodes[leftChildIndex]);
    const rightChildKey = this._getKey(this._nodes[rightChildIndex]);

    if (rightChildKey > leftChildKey && rightChildIndex < index) {
      return rightChildIndex;
    }
    return leftChildIndex;
  }

  /**
   * Returns a shallow copy of the heap
   * @public
   * @returns {MaxHeap}
   */
  clone() {
    return super._clone(MaxHeap);
  }

  /**
   * Builds a max heap from an array of items
   * @public
   * @static
   * @param {array} list
   * @returns {MaxHeap}
   */
  static heapify(list) {
    return super._heapify(list, MaxHeap);
  }

  /**
   * Checks if a list of items is a valid max heap
   * @public
   * @static
   * @param {array} list
   * @returns {boolean}
   */
  static isHeapified(list) {
    return super._isHeapified(list, MaxHeap);
  }
}

exports.MaxHeap = MaxHeap;


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @license MIT
 * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>
 */

const { Heap } = __webpack_require__(63);

/**
 * @class CustomHeap
 * @extends Heap
 */
class CustomHeap extends Heap {
  constructor(comparator, nodes, leaf) {
    if (typeof comparator !== 'function') {
      throw new Error('CustomHeap expects a comparator function');
    }
    super(nodes, leaf);
    this._comparator = comparator;
  }

  /**
   * Compares parent & child nodes
   * and returns true if they are in right positions
   *
   * @private
   * @param {object|number|string} parent
   * @param {object|number|string} child
   * @returns {number}
   */
  _compare(parentNode, childNode) {
    return this._comparator(parentNode, childNode) <= 0;
  }

  /**
   * Returns child's index of two children before an index
   * @private
   * @param {number} index
   * @param {number} leftChildIndex
   * @param {number} rightChildIndex
   * @returns {number}
   */
  _compareChildrenBefore(index, leftChildIndex, rightChildIndex) {
    const compare = this._comparator(
      this._nodes[rightChildIndex],
      this._nodes[leftChildIndex]
    );

    if (compare <= 0 && rightChildIndex < index) {
      return rightChildIndex;
    }

    return leftChildIndex;
  }

  /**
   * Returns a shallow copy of the heap
   * @public
   * @returns {CustomHeap}
   */
  clone() {
    return new CustomHeap(
      this._comparator,
      this._nodes.slice(),
      this._leaf
    );
  }

  /**
   * Builds a custom heap from an array of items
   * @public
   * @static
   * @param {array} list
   * @param {function} comparator
   * @returns {CustomHeap}
   */
  static heapify(list, comparator) {
    if (!Array.isArray(list)) {
      throw new Error('.heapify expects an array');
    }

    if (typeof comparator !== 'function') {
      throw new Error('.heapify expects a comparator function');
    }

    return new CustomHeap(comparator, list).fix();
  }

  /**
   * Checks if a list of items is a valid custom heap
   * @public
   * @static
   * @param {array} list
   * @param {function} comparator
   * @returns {boolean}
   */
  static isHeapified(list, comparator) {
    if (!Array.isArray(list)) {
      throw new Error('.heapify expects an array');
    }

    if (typeof comparator !== 'function') {
      throw new Error('.isHeapified expects a comparator function');
    }

    return new CustomHeap(comparator, list).isValid();
  }
}

exports.CustomHeap = CustomHeap;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>
 * @license MIT
 */

const { MaxHeap } = __webpack_require__(62);
const { PriorityQueue } = __webpack_require__(64);

/**
 * @class MaxPriorityQueue
 * @extends PriorityQueue
 */
class MaxPriorityQueue extends PriorityQueue {
  constructor(options) {
    super(options);
    if (!this._compare) {
      this._heap = new MaxHeap();
    }
  }

  static from(entries) {
    const queue = new MaxPriorityQueue();

    entries.forEach(([element, priority]) => {
      queue.enqueue(element, priority);
    });

    return queue;
  }
}

exports.MaxPriorityQueue = MaxPriorityQueue;


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(219);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 220 */
/***/ (function(module, exports) {

(function(self) {
  'use strict';

  if (self.fetch) {
    return
  }

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && (function() {
      try {
        new Blob()
        return true
      } catch(e) {
        return false
      }
    })(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ]

    var isDataView = function(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj)
    }

    var isArrayBufferView = ArrayBuffer.isView || function(obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
    }
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name)
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value)
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift()
        return {done: value === undefined, value: value}
      }
    }

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      }
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {}

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value)
      }, this)
    } else if (Array.isArray(headers)) {
      headers.forEach(function(header) {
        this.append(header[0], header[1])
      }, this)
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name])
      }, this)
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name)
    value = normalizeValue(value)
    var oldValue = this.map[name]
    this.map[name] = oldValue ? oldValue+','+value : value
  }

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)]
  }

  Headers.prototype.get = function(name) {
    name = normalizeName(name)
    return this.has(name) ? this.map[name] : null
  }

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  }

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value)
  }

  Headers.prototype.forEach = function(callback, thisArg) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this)
      }
    }
  }

  Headers.prototype.keys = function() {
    var items = []
    this.forEach(function(value, name) { items.push(name) })
    return iteratorFor(items)
  }

  Headers.prototype.values = function() {
    var items = []
    this.forEach(function(value) { items.push(value) })
    return iteratorFor(items)
  }

  Headers.prototype.entries = function() {
    var items = []
    this.forEach(function(value, name) { items.push([name, value]) })
    return iteratorFor(items)
  }

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result)
      }
      reader.onerror = function() {
        reject(reader.error)
      }
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader()
    var promise = fileReaderReady(reader)
    reader.readAsArrayBuffer(blob)
    return promise
  }

  function readBlobAsText(blob) {
    var reader = new FileReader()
    var promise = fileReaderReady(reader)
    reader.readAsText(blob)
    return promise
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf)
    var chars = new Array(view.length)

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i])
    }
    return chars.join('')
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength)
      view.set(new Uint8Array(buf))
      return view.buffer
    }
  }

  function Body() {
    this.bodyUsed = false

    this._initBody = function(body) {
      this._bodyInit = body
      if (!body) {
        this._bodyText = ''
      } else if (typeof body === 'string') {
        this._bodyText = body
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString()
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer)
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer])
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body)
      } else {
        throw new Error('unsupported BodyInit type')
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8')
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type)
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
        }
      }
    }

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this)
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      }

      this.arrayBuffer = function() {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
        } else {
          return this.blob().then(readBlobAsArrayBuffer)
        }
      }
    }

    this.text = function() {
      var rejected = consumed(this)
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text')
      } else {
        return Promise.resolve(this._bodyText)
      }
    }

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      }
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    }

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

  function normalizeMethod(method) {
    var upcased = method.toUpperCase()
    return (methods.indexOf(upcased) > -1) ? upcased : method
  }

  function Request(input, options) {
    options = options || {}
    var body = options.body

    if (input instanceof Request) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url
      this.credentials = input.credentials
      if (!options.headers) {
        this.headers = new Headers(input.headers)
      }
      this.method = input.method
      this.mode = input.mode
      if (!body && input._bodyInit != null) {
        body = input._bodyInit
        input.bodyUsed = true
      }
    } else {
      this.url = String(input)
    }

    this.credentials = options.credentials || this.credentials || 'omit'
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers)
    }
    this.method = normalizeMethod(options.method || this.method || 'GET')
    this.mode = options.mode || this.mode || null
    this.referrer = null

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body)
  }

  Request.prototype.clone = function() {
    return new Request(this, { body: this._bodyInit })
  }

  function decode(body) {
    var form = new FormData()
    body.trim().split('&').forEach(function(bytes) {
      if (bytes) {
        var split = bytes.split('=')
        var name = split.shift().replace(/\+/g, ' ')
        var value = split.join('=').replace(/\+/g, ' ')
        form.append(decodeURIComponent(name), decodeURIComponent(value))
      }
    })
    return form
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers()
    // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
    // https://tools.ietf.org/html/rfc7230#section-3.2
    var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ')
    preProcessedHeaders.split(/\r?\n/).forEach(function(line) {
      var parts = line.split(':')
      var key = parts.shift().trim()
      if (key) {
        var value = parts.join(':').trim()
        headers.append(key, value)
      }
    })
    return headers
  }

  Body.call(Request.prototype)

  function Response(bodyInit, options) {
    if (!options) {
      options = {}
    }

    this.type = 'default'
    this.status = options.status === undefined ? 200 : options.status
    this.ok = this.status >= 200 && this.status < 300
    this.statusText = 'statusText' in options ? options.statusText : 'OK'
    this.headers = new Headers(options.headers)
    this.url = options.url || ''
    this._initBody(bodyInit)
  }

  Body.call(Response.prototype)

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  }

  Response.error = function() {
    var response = new Response(null, {status: 0, statusText: ''})
    response.type = 'error'
    return response
  }

  var redirectStatuses = [301, 302, 303, 307, 308]

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  }

  self.Headers = Headers
  self.Request = Request
  self.Response = Response

  self.fetch = function(input, init) {
    return new Promise(function(resolve, reject) {
      var request = new Request(input, init)
      var xhr = new XMLHttpRequest()

      xhr.onload = function() {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        }
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
        var body = 'response' in xhr ? xhr.response : xhr.responseText
        resolve(new Response(body, options))
      }

      xhr.onerror = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.ontimeout = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.open(request.method, request.url, true)

      if (request.credentials === 'include') {
        xhr.withCredentials = true
      } else if (request.credentials === 'omit') {
        xhr.withCredentials = false
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob'
      }

      request.headers.forEach(function(value, name) {
        xhr.setRequestHeader(name, value)
      })

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
    })
  }
  self.fetch.polyfill = true
})(typeof self !== 'undefined' ? self : this);


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _hooks = __webpack_require__(5);

var _config = __webpack_require__(19);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    autoWidth: false,
    optionsAlignment: 'right'
};

/**
 * Sort popup
 *
 * @component
 * @example
 * const props= {
    val: Object,
    values: Array,
    onSelect: Function,
    autoWidth: Boolean,
    optionsAlignment: String,
    id: String,
 * }
 * return (
 *   <Select {...props}/>
 * )
 */
var Popup = function Popup(_ref) {
    var val = _ref.val,
        values = _ref.values,
        onSelect = _ref.onSelect,
        autoWidth = _ref.autoWidth,
        optionsAlignment = _ref.optionsAlignment,
        id = _ref.id;

    /**
     **** Authored Configs ****
     */
    var getConfig = (0, _hooks.useConfig)();
    var sortByAria = getConfig('collection', 'i18n.sortByAria');

    /**
     * @typedef {String} OpenDropdownState - Id of a selected dropdown
     * @description — Passed in Context Provider So All Nested Components can be in sync
     *
     * @typedef {Function} Handles toggling popup
     * @description
     *
     * @type {[String, Function]} OpenDropdown
     */

    var _useExpandable = (0, _hooks.useExpandable)(id),
        _useExpandable2 = _slicedToArray(_useExpandable, 2),
        openDropdown = _useExpandable2[0],
        handleToggle = _useExpandable2[1];

    /**
     * Handles whether the sort dropdown is visible or not
     * @type {Boolean}
     */


    var opened = openDropdown === id;

    /**
     * Handles choosing of a sort option
     *
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleOptionClick = function handleOptionClick(e, item) {
        onSelect(item);
        handleToggle(e);
    };

    var shouldAutoWidthSortClass = (0, _classnames2.default)({
        'consonant-Select': true,
        'consonant-Select--autoWidth': autoWidth
    });

    var openButtonClass = (0, _classnames2.default)({
        'consonant-Select-btn': true,
        'is-active': opened
    });

    return _react2.default.createElement(
        'div',
        {
            className: shouldAutoWidthSortClass },
        _react2.default.createElement(
            'button',
            {
                'data-testid': 'consonant-Select-btn',
                type: 'button',
                onClick: handleToggle,
                className: openButtonClass,
                tabIndex: '0',
                'aria-haspopup': 'menu',
                'aria-expanded': opened },
            val.label
        ),
        opened && _react2.default.createElement(
            'div',
            {
                'data-testid': 'consonant-Select-options',
                className: 'consonant-Select-options consonant-Select-options--' + optionsAlignment,
                role: 'menu' },
            values.map(function (item) {
                return _react2.default.createElement(
                    'button',
                    {
                        'data-testid': 'consonant-Select-option',
                        key: item.label,
                        type: 'button',
                        role: 'menuitem',
                        'aria-label': sortByAria && sortByAria.replace('{key}', item.label),
                        className: item.label === val.label ? 'consonant-Select-option is-selected' : 'consonant-Select-option',
                        onClick: function onClick(e) {
                            return handleOptionClick(e, item);
                        },
                        tabIndex: 0 },
                    item.label
                );
            })
        )
    );
};

Popup.defaultProps = defaultProps;

exports.default = Popup;

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _hooks = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    name: '',
    value: '',
    autofocus: true,
    placeholderText: ''
};

/**
 * Used as unique id for accessibility labels/attributes
 * @type {Number}
 */
var searchId = 'consonant-search';

/**
 * Search Component (Used in both Top And Left Filter Views)
 *
 * @component
 * @example
 * const props= {
    value: Function,
    onSearch: String,
    name: String,
    autofocus: Boolean,
    placeholderText: String,
 * }
 * return (
 *   <Search {...props}/>
 * )
 */
var Search = function Search(_ref) {
    var value = _ref.value,
        onSearch = _ref.onSearch,
        name = _ref.name,
        autofocus = _ref.autofocus,
        placeholderText = _ref.placeholderText;

    var getConfig = (0, _hooks.useConfig)();

    /**
     * Authored Search Title
     * @type {String}
     */
    var leftPanelTitle = getConfig('search', 'i18n.leftFilterPanel.searchTitle');

    /**
     * Refernce to input element
     * @type {HTMLElement}
     */
    var textInput = (0, _react.useRef)(null);

    /**
     * Handles search box input changes
     * is clicked
     *
     * @param {InputChangeEvent} e
     * @listens InputChangeEvent
     */
    var handleSearch = function handleSearch(e) {
        onSearch(e.target.value);
    };

    /**
     * Handles focus events for text input
     *
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var focusTextInput = function focusTextInput() {
        textInput.current.focus();
    };

    /**
     * Handles clearing user's search query
     *
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var clearSearch = function clearSearch() {
        onSearch('');
        focusTextInput();
    };

    /**
    * Handles focus for search box
    * @returns {Void} - an updated state
    */
    (0, _react.useEffect)(function () {
        if (autofocus && textInput.current) {
            textInput.current.focus();
        }
    }, [autofocus, textInput]);

    return _react2.default.createElement(
        'div',
        {
            'data-testid': name,
            className: 'consonant-Search' },
        _react2.default.createElement(
            'label',
            {
                htmlFor: searchId },
            _react2.default.createElement(
                'span',
                {
                    className: 'consonant-Search-inputTitle' },
                leftPanelTitle
            ),
            _react2.default.createElement(
                'span',
                {
                    className: 'consonant-Search-inputWrapper' },
                _react2.default.createElement('input', {
                    id: searchId,
                    'data-testid': 'consonant-Search-input',
                    type: 'search',
                    placeholder: placeholderText,
                    onClick: function onClick(e) {
                        return e.stopPropagation();
                    },
                    value: value,
                    onChange: handleSearch,
                    ref: textInput,
                    className: 'consonant-Search-input' }),
                _react2.default.createElement('button', {
                    'data-testid': 'consonant-Search-inputClear',
                    type: 'button',
                    title: '',
                    'aria-label': 'Clear Search filter',
                    className: 'consonant-Search-inputClear',
                    onClick: clearSearch,
                    tabIndex: '0' })
            )
        )
    );
};

Search.defaultProps = defaultProps;

exports.default = Search;

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _constants = __webpack_require__(14);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    hidden: false,
    absolute: false,
    size: _constants.LOADER_SIZE.BIG
};

/**
 * Loading Spinner (Used when waiting for API call)
 *
 * @component
 * @example
 * const props= {
    size: String,
    hidden: Boolean,
    absolute: Boolean,
 * }
 * return (
 *   <Loader {...props}/>
 * )
 */
var Loader = function Loader(_ref) {
    var size = _ref.size,
        hidden = _ref.hidden,
        absolute = _ref.absolute;

    var className = (0, _classnames2.default)({
        'consonant-Loader--medium': size === _constants.LOADER_SIZE.MEDIUM,
        'consonant-Loader--big': size === _constants.LOADER_SIZE.BIG,
        'consonant-Loader': true,
        'consonant-Loader--absolute': absolute
    });

    return !hidden && _react2.default.createElement(
        'div',
        {
            'data-testid': 'consonant-Loader',
            className: className },
        _react2.default.createElement('div', null),
        _react2.default.createElement('div', null),
        _react2.default.createElement('div', null),
        _react2.default.createElement('div', null)
    );
};

Loader.defaultProps = defaultProps;

exports.default = Loader;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* eslint-disable react/jsx-no-bind,react/forbid-prop-types,react/jsx-no-bind */


exports.getCardWidth = getCardWidth;
exports.userIsTabbing = userIsTabbing;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _hooks = __webpack_require__(5);

var _Grid = __webpack_require__(106);

var _Grid2 = _interopRequireDefault(_Grid);

var _rendering = __webpack_require__(38);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NEXT_BUTTON_NAME = 'next';
var PREV_BUTTON_NAME = 'previous';
var TABLET_BREAKPOINT = 1199;
var cardsShiftedPerClick = null;
var cardWidth = null;

/**
 * Gets the width of the card based on the size and gap.
 * @param {string} size - The layout type ('2up', '3up', '4up', or '5up').
 * @param {number} gap - The gutter gap (in px).
 * @returns {number} - The card width for that size+gap, or 0 if invalid.
 */
function getCardWidth(size, gap) {
    var cardWidths = {
        '2up': {
            '8px': 579,
            '16px': 575,
            '24px': 571,
            '32px': 566
        },
        '3up': {
            '8px': 394,
            '16px': 389,
            '24px': 384,
            '32px': 378
        },
        '4up': {
            '8px': 294,
            '16px': 288,
            '24px': 282,
            '32px': 276
        },
        '5up': {
            '8px': 226,
            '16px': 220,
            '24px': 214,
            '32px': 207
        }
    };

    // Look up the map for this size; if none, return 0
    var sizeMap = cardWidths[size];
    if (!sizeMap) {
        return 0;
    }

    // Build the gap key and only return it if it actually exists
    var key = gap + 'px';
    if (Object.prototype.hasOwnProperty.call(sizeMap, key)) {
        return sizeMap[key];
    }

    // Fallback when the gap isn't defined for this size
    return 0;
}

function userIsTabbing() {
    return document.body.classList.contains('tabbing');
}

function CardsCarousel() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        cards = _ref.cards,
        cardStyle = _ref.cardStyle,
        onCardBookmark = _ref.onCardBookmark,
        resQty = _ref.resQty;

    var getConfig = (0, _hooks.useConfig)();
    var cardsUp = getConfig('collection', 'layout.type');
    var gridGap = parseInt(getConfig('collection', 'layout.gutter'), 10) * 8;
    var title = getConfig('collection', 'i18n.title');
    var showTotalResults = getConfig('collection', 'showTotalResults');
    var showTotalResultsText = getConfig('collection', 'i18n.totalResultsText');
    var nextCard = getConfig('collection', 'i18n.nextCards');
    var prevCard = getConfig('collection', 'i18n.prevCards');
    var useLightText = getConfig('collection', 'useLightText');
    var isIncremental = getConfig('pagination', 'animationStyle') === 'incremental';
    var renderOverlay = getConfig('collection', 'useOverlayLinks');

    if (cardsUp.includes('2up')) {
        cardWidth = getCardWidth('2up', gridGap);
        cardsShiftedPerClick = isIncremental ? 1 : 2;
    } else if (cardsUp.includes('3up')) {
        cardWidth = getCardWidth('3up', gridGap);
        cardsShiftedPerClick = isIncremental ? 1 : 3;
    } else if (cardsUp.includes('4up')) {
        cardWidth = getCardWidth('4up', gridGap);
        cardsShiftedPerClick = isIncremental ? 1 : 4;
    } else if (cardsUp.includes('5up')) {
        cardWidth = getCardWidth('5up', gridGap);
        cardsShiftedPerClick = isIncremental ? 1 : 5;
    }
    var HeadingLevel = getConfig('collection', 'i18n.titleHeadingLevel');
    var cardsPerPage = parseInt(cardsUp, 10);

    var _useState = (0, _react.useState)(Number.POSITIVE_INFINITY),
        _useState2 = _slicedToArray(_useState, 1),
        pages = _useState2[0];

    var carouselRef = (0, _react.useRef)(null);
    var prev = (0, _react.useRef)(null);
    var next = (0, _react.useRef)(null);

    var firstVisibleCard = 1;
    var lastVisibleCard = firstVisibleCard + cardsPerPage - 1;

    function isMobile() {
        return window.innerWidth < TABLET_BREAKPOINT;
    }

    function hideNextButton() {
        var nextBtn = next.current;
        if (nextBtn) {
            nextBtn.classList.add('hide');
            nextBtn.setAttribute('aria-hidden', 'true');
        }
    }

    function hidePrevButton() {
        var prevBtn = prev.current;
        if (prevBtn) {
            prevBtn.classList.add('hide');
            prevBtn.setAttribute('aria-hidden', 'true');
        }
    }

    function showNextButton() {
        var nextBtn = next.current;
        if (nextBtn) {
            nextBtn.classList.remove('hide');
            nextBtn.setAttribute('aria-hidden', 'false');
        }
    }

    function showPrevButton() {
        var prevBtn = prev.current;
        if (prevBtn) {
            prevBtn.classList.remove('hide');
            prevBtn.setAttribute('aria-hidden', 'false');
        }
    }

    function hideNav() {
        hidePrevButton();
        hideNextButton();
    }

    function showNav() {
        showPrevButton();
        showNextButton();
    }

    function setFocusPrevBtn() {
        var prevBtn = prev.current;
        if (prevBtn) prevBtn.focus();
    }

    function setFocusNextBtn() {
        var nextBtn = next.current;
        if (nextBtn) nextBtn.focus();
    }

    function shouldHidePrevButton() {
        if (firstVisibleCard === 1) {
            hidePrevButton();
            if (userIsTabbing()) {
                setFocusNextBtn();
            }
        }
    }

    function shouldHideNextButton() {
        var atEndOfCarousel = firstVisibleCard >= cards.length - cardsPerPage;
        if (atEndOfCarousel) {
            hideNextButton();
            if (userIsTabbing()) {
                setFocusPrevBtn();
            }
        }
    }

    function mobileLogic() {
        if (isMobile()) {
            hideNav();
        } else {
            showNav();
            shouldHidePrevButton();
            shouldHideNextButton();
        }
    }

    /**
     * 620 = (tablet range) + average grid gap
     * 620 = 1200px - 600px + (8 + 32)/2
     */
    function centerClick() {
        var carousel = carouselRef.current;
        /* eslint-disable-next-line no-mixed-operators */
        carousel.scrollLeft += -window.innerWidth / 2 + 620;
    }

    /**
     * Jira ticket: MWPW-164509
     * Sets the ARIA attributes for the cards based on their visibility.
     * @param {HTMLElement} carousel - The carousel element.
     */
    function setAriaAttributes(carousel) {
        var shouldRenderOverlay = renderOverlay || cardStyle === 'half-height';

        carousel.querySelectorAll('.consonant-Card').forEach(function (card, index) {
            var cardLinks = card.querySelectorAll('a, button');

            if (!cardLinks.length) return;
            cardLinks.forEach(function (link) {
                link.setAttribute('aria-hidden', 'true');
                link.setAttribute('tabindex', '-1');
            });

            if (index + 1 >= firstVisibleCard && index + 1 <= lastVisibleCard) {
                if (shouldRenderOverlay) {
                    var linkBlockers = card.querySelectorAll('.consonant-LinkBlocker');
                    linkBlockers.forEach(function (link) {
                        link.removeAttribute('aria-hidden');
                        link.setAttribute('tabindex', '0');
                    });
                    var modalVideo = card.querySelector('.consonant-Card-videoIco');
                    if (modalVideo) {
                        modalVideo.removeAttribute('aria-hidden');
                        modalVideo.setAttribute('tabindex', '0');
                    }
                } else {
                    cardLinks.forEach(function (link) {
                        link.removeAttribute('aria-hidden');
                        link.setAttribute('tabindex', '0');
                    });
                }
            }
        });
    }

    /**
     * Jira ticket: MWPW-164509
     * Sets first and last visible cards based on the navigation direction and pagination type.
     * @param {string} direction - The direction of the click.
     */
    function setVisibleCards(direction) {
        var incrementBy = isIncremental ? 1 : cardsPerPage;
        if (direction === 'next') {
            firstVisibleCard += incrementBy;
            lastVisibleCard += incrementBy;
        } else {
            firstVisibleCard -= incrementBy;
            lastVisibleCard -= incrementBy;
        }
    }

    function nextButtonClick() {
        if (isMobile()) {
            centerClick();
        } else {
            var carousel = carouselRef.current;
            carousel.scrollLeft += (cardWidth + gridGap) * cardsShiftedPerClick;
            setVisibleCards('next');
            setAriaAttributes(carousel);
            showPrevButton();
            shouldHideNextButton();
        }
    }

    function prevButtonClick() {
        if (isMobile()) {
            centerClick();
        } else {
            var carousel = carouselRef.current;
            carousel.scrollLeft -= (cardWidth + gridGap) * cardsShiftedPerClick;
            setVisibleCards('prev');
            setAriaAttributes(carousel);
            showNextButton();
            shouldHidePrevButton();
        }
    }

    var carouselTitleClass = (0, _classnames2.default)({
        'consonant-CarouselInfo-collectionTitle': true,
        'consonant-CarouselInfo-collectionTitle--withLightText': useLightText
    });

    var carouselTotalResultsClass = (0, _classnames2.default)({
        'consonant-CarouselInfo-results': true,
        'consonant-CarouselInfo-results--withLightText': useLightText
    });

    var totalResultsHtml = (0, _rendering.RenderTotalResults)(showTotalResultsText, resQty);

    (0, _react.useEffect)(function () {
        mobileLogic();
        setAriaAttributes(carouselRef.current);
    }, []);

    return _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement(
            'div',
            { className: 'consonant-Navigation--carousel' },
            _react2.default.createElement('button', {
                'aria-label': prevCard,
                'aria-hidden': 'true',
                className: 'consonant-Button--previous',
                onClick: prevButtonClick,
                'daa-ll': 'Previous',
                'daa-state': 'true',
                name: PREV_BUTTON_NAME,
                ref: prev,
                type: 'button' }),
            _react2.default.createElement('button', {
                'aria-label': nextCard,
                className: 'consonant-Button--next',
                'daa-ll': 'Next',
                'daa-state': 'true',
                onClick: nextButtonClick,
                name: NEXT_BUTTON_NAME,
                ref: next,
                type: 'button' })
        ),
        _react2.default.createElement(
            'div',
            {
                className: 'consonant-CarouselInfo' },
            title && _react2.default.createElement(
                HeadingLevel,
                {
                    'data-testid': 'consonant-CarouselInfo-collectionTitle',
                    className: carouselTitleClass },
                title
            ),
            showTotalResults && _react2.default.createElement(
                'div',
                {
                    'data-testid': 'consonant-CarouselInfo-results',
                    className: carouselTotalResultsClass },
                totalResultsHtml
            )
        ),
        _react2.default.createElement(
            'div',
            {
                className: 'consonant-Container--carousel',
                ref: carouselRef },
            _react2.default.createElement(_Grid2.default, {
                cards: cards,
                containerType: 'carousel',
                resultsPerPage: cardsPerPage,
                onCardBookmark: onCardBookmark,
                pages: pages,
                renderOverlay: renderOverlay })
        )
    );
}

exports.default = CardsCarousel;

/***/ }),
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domToReact", function() { return domToReact; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "htmlToDOM", function() { return htmlToDOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attributesToProps", function() { return attributesToProps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Element", function() { return Element; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_js__ = __webpack_require__(226);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__index_js__);


var domToReact = __WEBPACK_IMPORTED_MODULE_0__index_js___default.a.domToReact;
var htmlToDOM = __WEBPACK_IMPORTED_MODULE_0__index_js___default.a.htmlToDOM;
var attributesToProps = __WEBPACK_IMPORTED_MODULE_0__index_js___default.a.attributesToProps;
var Element = __WEBPACK_IMPORTED_MODULE_0__index_js___default.a.Element;

/* harmony default export */ __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0__index_js___default.a);


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

var domToReact = __webpack_require__(227);
var attributesToProps = __webpack_require__(107);
var htmlToDOM = __webpack_require__(234);

// support backwards compatibility for ES Module
htmlToDOM =
  /* istanbul ignore next */
  typeof htmlToDOM.default === 'function' ? htmlToDOM.default : htmlToDOM;

var domParserOptions = { lowerCaseAttributeNames: false };

/**
 * Converts HTML string to React elements.
 *
 * @param {string} html - HTML string.
 * @param {object} [options] - Parser options.
 * @param {object} [options.htmlparser2] - htmlparser2 options.
 * @param {object} [options.library] - Library for React, Preact, etc.
 * @param {Function} [options.replace] - Replace method.
 * @returns {JSX.Element|JSX.Element[]|string} - React element(s), empty array, or string.
 */
function HTMLReactParser(html, options) {
  if (typeof html !== 'string') {
    throw new TypeError('First argument must be a string');
  }
  if (html === '') {
    return [];
  }
  options = options || {};
  return domToReact(
    htmlToDOM(html, options.htmlparser2 || domParserOptions),
    options
  );
}

HTMLReactParser.domToReact = domToReact;
HTMLReactParser.htmlToDOM = htmlToDOM;
HTMLReactParser.attributesToProps = attributesToProps;
HTMLReactParser.Element = __webpack_require__(239).Element;

// support CommonJS and ES Modules
module.exports = HTMLReactParser;
module.exports.default = HTMLReactParser;


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__(0);
var attributesToProps = __webpack_require__(107);
var utilities = __webpack_require__(108);

var setStyleProp = utilities.setStyleProp;
var canTextBeChildOfNode = utilities.canTextBeChildOfNode;

/**
 * Converts DOM nodes to JSX element(s).
 *
 * @param {DomElement[]} nodes - DOM nodes.
 * @param {object} [options={}] - Options.
 * @param {Function} [options.replace] - Replacer.
 * @param {object} [options.library] - Library (React, Preact, etc.).
 * @returns - String or JSX element(s).
 */
function domToReact(nodes, options) {
  options = options || {};

  var library = options.library || React;
  var cloneElement = library.cloneElement;
  var createElement = library.createElement;
  var isValidElement = library.isValidElement;

  var result = [];
  var node;
  var isWhitespace;
  var hasReplace = typeof options.replace === 'function';
  var replaceElement;
  var props;
  var children;
  var trim = options.trim;

  for (var i = 0, len = nodes.length; i < len; i++) {
    node = nodes[i];

    // replace with custom React element (if present)
    if (hasReplace) {
      replaceElement = options.replace(node);

      if (isValidElement(replaceElement)) {
        // set "key" prop for sibling elements
        // https://fb.me/react-warning-keys
        if (len > 1) {
          replaceElement = cloneElement(replaceElement, {
            key: replaceElement.key || i
          });
        }
        result.push(replaceElement);
        continue;
      }
    }

    if (node.type === 'text') {
      isWhitespace = !node.data.trim().length;

      if (isWhitespace && node.parent && !canTextBeChildOfNode(node.parent)) {
        // We have a whitespace node that can't be nested in its parent
        // so skip it
        continue;
      }

      if (trim && isWhitespace) {
        // Trim is enabled and we have a whitespace node
        // so skip it
        continue;
      }

      // We have a text node that's not whitespace and it can be nested
      // in its parent so add it to the results
      result.push(node.data);
      continue;
    }

    props = node.attribs;
    if (skipAttributesToProps(node)) {
      setStyleProp(props.style, props);
    } else if (props) {
      props = attributesToProps(props);
    }

    children = null;

    switch (node.type) {
      case 'script':
      case 'style':
        // prevent text in <script> or <style> from being escaped
        // https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml
        if (node.children[0]) {
          props.dangerouslySetInnerHTML = {
            __html: node.children[0].data
          };
        }
        break;

      case 'tag':
        // setting textarea value in children is an antipattern in React
        // https://reactjs.org/docs/forms.html#the-textarea-tag
        if (node.name === 'textarea' && node.children[0]) {
          props.defaultValue = node.children[0].data;
        } else if (node.children && node.children.length) {
          // continue recursion of creating React elements (if applicable)
          children = domToReact(node.children, options);
        }
        break;

      // skip all other cases (e.g., comment)
      default:
        continue;
    }

    // set "key" prop for sibling elements
    // https://fb.me/react-warning-keys
    if (len > 1) {
      props.key = i;
    }

    result.push(createElement(node.name, props, children));
  }

  return result.length === 1 ? result[0] : result;
}

/**
 * Determines whether DOM element attributes should be transformed to props.
 * Web Components should not have their attributes transformed except for `style`.
 *
 * @param {DomElement} node
 * @returns - Whether node attributes should be converted to props.
 */
function skipAttributesToProps(node) {
  return (
    utilities.PRESERVE_CUSTOM_ATTRIBUTES &&
    node.type === 'tag' &&
    utilities.isCustomComponent(node.name, node.attribs)
  );
}

module.exports = domToReact;


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', { value: true });

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0; // A simple string attribute.
// Attributes that aren't in the filter are presumed to have this type.

var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.

var BOOLEANISH_STRING = 2; // A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.

var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.

var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.

var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.

var POSITIVE_NUMERIC = 6;
function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
  this.sanitizeURL = sanitizeURL;
  this.removeEmptyString = removeEmptyString;
} // When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.


var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

var reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];
reservedProps.forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.

[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      name = _ref2[0],
      attributeName = _ref2[1];

  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).

['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.

['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML boolean attributes.

['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.

['checked', // Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.

['capture', 'download' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be positive numbers.

['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be numbers.

['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
});
var CAMELIZE = /[\-\:]([a-z])/g;

var capitalize = function capitalize(token) {
  return token[1].toUpperCase();
}; // This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML attribute filter.
// Some of these attributes can be hard to find. This list was created by
// scraping the MDN documentation.


['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // String SVG attributes with the xlink namespace.

['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL
  false);
}); // String SVG attributes with the xml namespace.

['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL
  false);
}); // These attribute exists both in HTML and SVG.
// The attribute name is case-sensitive in SVG so we can't just use
// the React name like we do for attributes that exist only in HTML.

['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These attributes accept URLs. These must not allow javascript: URLS.
// These will also need to accept Trusted Types object in the future.

var xlinkHref = 'xlinkHref';
properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL
false);
['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  true, // sanitizeURL
  true);
});

var _require = __webpack_require__(229),
    CAMELCASE = _require.CAMELCASE,
    SAME = _require.SAME,
    possibleStandardNamesOptimized = _require.possibleStandardNames;

var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
/**
 * Checks whether a property name is a custom attribute.
 *
 * @see {@link https://github.com/facebook/react/blob/15-stable/src/renderers/dom/shared/HTMLDOMPropertyConfig.js#L23-L25}
 *
 * @param {string}
 * @return {boolean}
 */

var isCustomAttribute = RegExp.prototype.test.bind( // eslint-disable-next-line no-misleading-character-class
new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));
var possibleStandardNames = Object.keys(possibleStandardNamesOptimized).reduce(function (accumulator, standardName) {
  var propName = possibleStandardNamesOptimized[standardName];

  if (propName === SAME) {
    accumulator[standardName] = standardName;
  } else if (propName === CAMELCASE) {
    accumulator[standardName.toLowerCase()] = standardName;
  } else {
    accumulator[standardName] = propName;
  }

  return accumulator;
}, {});

exports.BOOLEAN = BOOLEAN;
exports.BOOLEANISH_STRING = BOOLEANISH_STRING;
exports.NUMERIC = NUMERIC;
exports.OVERLOADED_BOOLEAN = OVERLOADED_BOOLEAN;
exports.POSITIVE_NUMERIC = POSITIVE_NUMERIC;
exports.RESERVED = RESERVED;
exports.STRING = STRING;
exports.getPropertyInfo = getPropertyInfo;
exports.isCustomAttribute = isCustomAttribute;
exports.possibleStandardNames = possibleStandardNames;


/***/ }),
/* 229 */
/***/ (function(module, exports) {

// An attribute in which the DOM/SVG standard name is the same as the React prop name (e.g., 'accept').
var SAME = 0;
exports.SAME = SAME;

// An attribute in which the React prop name is the camelcased version of the DOM/SVG standard name (e.g., 'acceptCharset').
var CAMELCASE = 1;
exports.CAMELCASE = CAMELCASE;

exports.possibleStandardNames = {
  accept: 0,
  acceptCharset: 1,
  'accept-charset': 'acceptCharset',
  accessKey: 1,
  action: 0,
  allowFullScreen: 1,
  alt: 0,
  as: 0,
  async: 0,
  autoCapitalize: 1,
  autoComplete: 1,
  autoCorrect: 1,
  autoFocus: 1,
  autoPlay: 1,
  autoSave: 1,
  capture: 0,
  cellPadding: 1,
  cellSpacing: 1,
  challenge: 0,
  charSet: 1,
  checked: 0,
  children: 0,
  cite: 0,
  class: 'className',
  classID: 1,
  className: 1,
  cols: 0,
  colSpan: 1,
  content: 0,
  contentEditable: 1,
  contextMenu: 1,
  controls: 0,
  controlsList: 1,
  coords: 0,
  crossOrigin: 1,
  dangerouslySetInnerHTML: 1,
  data: 0,
  dateTime: 1,
  default: 0,
  defaultChecked: 1,
  defaultValue: 1,
  defer: 0,
  dir: 0,
  disabled: 0,
  disablePictureInPicture: 1,
  disableRemotePlayback: 1,
  download: 0,
  draggable: 0,
  encType: 1,
  enterKeyHint: 1,
  for: 'htmlFor',
  form: 0,
  formMethod: 1,
  formAction: 1,
  formEncType: 1,
  formNoValidate: 1,
  formTarget: 1,
  frameBorder: 1,
  headers: 0,
  height: 0,
  hidden: 0,
  high: 0,
  href: 0,
  hrefLang: 1,
  htmlFor: 1,
  httpEquiv: 1,
  'http-equiv': 'httpEquiv',
  icon: 0,
  id: 0,
  innerHTML: 1,
  inputMode: 1,
  integrity: 0,
  is: 0,
  itemID: 1,
  itemProp: 1,
  itemRef: 1,
  itemScope: 1,
  itemType: 1,
  keyParams: 1,
  keyType: 1,
  kind: 0,
  label: 0,
  lang: 0,
  list: 0,
  loop: 0,
  low: 0,
  manifest: 0,
  marginWidth: 1,
  marginHeight: 1,
  max: 0,
  maxLength: 1,
  media: 0,
  mediaGroup: 1,
  method: 0,
  min: 0,
  minLength: 1,
  multiple: 0,
  muted: 0,
  name: 0,
  noModule: 1,
  nonce: 0,
  noValidate: 1,
  open: 0,
  optimum: 0,
  pattern: 0,
  placeholder: 0,
  playsInline: 1,
  poster: 0,
  preload: 0,
  profile: 0,
  radioGroup: 1,
  readOnly: 1,
  referrerPolicy: 1,
  rel: 0,
  required: 0,
  reversed: 0,
  role: 0,
  rows: 0,
  rowSpan: 1,
  sandbox: 0,
  scope: 0,
  scoped: 0,
  scrolling: 0,
  seamless: 0,
  selected: 0,
  shape: 0,
  size: 0,
  sizes: 0,
  span: 0,
  spellCheck: 1,
  src: 0,
  srcDoc: 1,
  srcLang: 1,
  srcSet: 1,
  start: 0,
  step: 0,
  style: 0,
  summary: 0,
  tabIndex: 1,
  target: 0,
  title: 0,
  type: 0,
  useMap: 1,
  value: 0,
  width: 0,
  wmode: 0,
  wrap: 0,
  about: 0,
  accentHeight: 1,
  'accent-height': 'accentHeight',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 1,
  'alignment-baseline': 'alignmentBaseline',
  allowReorder: 1,
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 1,
  'arabic-form': 'arabicForm',
  ascent: 0,
  attributeName: 1,
  attributeType: 1,
  autoReverse: 1,
  azimuth: 0,
  baseFrequency: 1,
  baselineShift: 1,
  'baseline-shift': 'baselineShift',
  baseProfile: 1,
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 1,
  capHeight: 1,
  'cap-height': 'capHeight',
  clip: 0,
  clipPath: 1,
  'clip-path': 'clipPath',
  clipPathUnits: 1,
  clipRule: 1,
  'clip-rule': 'clipRule',
  color: 0,
  colorInterpolation: 1,
  'color-interpolation': 'colorInterpolation',
  colorInterpolationFilters: 1,
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorProfile: 1,
  'color-profile': 'colorProfile',
  colorRendering: 1,
  'color-rendering': 'colorRendering',
  contentScriptType: 1,
  contentStyleType: 1,
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  datatype: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 1,
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 1,
  'dominant-baseline': 'dominantBaseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 1,
  elevation: 0,
  enableBackground: 1,
  'enable-background': 'enableBackground',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 1,
  fill: 0,
  fillOpacity: 1,
  'fill-opacity': 'fillOpacity',
  fillRule: 1,
  'fill-rule': 'fillRule',
  filter: 0,
  filterRes: 1,
  filterUnits: 1,
  floodOpacity: 1,
  'flood-opacity': 'floodOpacity',
  floodColor: 1,
  'flood-color': 'floodColor',
  focusable: 0,
  fontFamily: 1,
  'font-family': 'fontFamily',
  fontSize: 1,
  'font-size': 'fontSize',
  fontSizeAdjust: 1,
  'font-size-adjust': 'fontSizeAdjust',
  fontStretch: 1,
  'font-stretch': 'fontStretch',
  fontStyle: 1,
  'font-style': 'fontStyle',
  fontVariant: 1,
  'font-variant': 'fontVariant',
  fontWeight: 1,
  'font-weight': 'fontWeight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 1,
  'glyph-name': 'glyphName',
  glyphOrientationHorizontal: 1,
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphOrientationVertical: 1,
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphRef: 1,
  gradientTransform: 1,
  gradientUnits: 1,
  hanging: 0,
  horizAdvX: 1,
  'horiz-adv-x': 'horizAdvX',
  horizOriginX: 1,
  'horiz-origin-x': 'horizOriginX',
  ideographic: 0,
  imageRendering: 1,
  'image-rendering': 'imageRendering',
  in2: 0,
  in: 0,
  inlist: 0,
  intercept: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  k: 0,
  kernelMatrix: 1,
  kernelUnitLength: 1,
  kerning: 0,
  keyPoints: 1,
  keySplines: 1,
  keyTimes: 1,
  lengthAdjust: 1,
  letterSpacing: 1,
  'letter-spacing': 'letterSpacing',
  lightingColor: 1,
  'lighting-color': 'lightingColor',
  limitingConeAngle: 1,
  local: 0,
  markerEnd: 1,
  'marker-end': 'markerEnd',
  markerHeight: 1,
  markerMid: 1,
  'marker-mid': 'markerMid',
  markerStart: 1,
  'marker-start': 'markerStart',
  markerUnits: 1,
  markerWidth: 1,
  mask: 0,
  maskContentUnits: 1,
  maskUnits: 1,
  mathematical: 0,
  mode: 0,
  numOctaves: 1,
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 1,
  'overline-position': 'overlinePosition',
  overlineThickness: 1,
  'overline-thickness': 'overlineThickness',
  paintOrder: 1,
  'paint-order': 'paintOrder',
  panose1: 0,
  'panose-1': 'panose1',
  pathLength: 1,
  patternContentUnits: 1,
  patternTransform: 1,
  patternUnits: 1,
  pointerEvents: 1,
  'pointer-events': 'pointerEvents',
  points: 0,
  pointsAtX: 1,
  pointsAtY: 1,
  pointsAtZ: 1,
  prefix: 0,
  preserveAlpha: 1,
  preserveAspectRatio: 1,
  primitiveUnits: 1,
  property: 0,
  r: 0,
  radius: 0,
  refX: 1,
  refY: 1,
  renderingIntent: 1,
  'rendering-intent': 'renderingIntent',
  repeatCount: 1,
  repeatDur: 1,
  requiredExtensions: 1,
  requiredFeatures: 1,
  resource: 0,
  restart: 0,
  result: 0,
  results: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  security: 0,
  seed: 0,
  shapeRendering: 1,
  'shape-rendering': 'shapeRendering',
  slope: 0,
  spacing: 0,
  specularConstant: 1,
  specularExponent: 1,
  speed: 0,
  spreadMethod: 1,
  startOffset: 1,
  stdDeviation: 1,
  stemh: 0,
  stemv: 0,
  stitchTiles: 1,
  stopColor: 1,
  'stop-color': 'stopColor',
  stopOpacity: 1,
  'stop-opacity': 'stopOpacity',
  strikethroughPosition: 1,
  'strikethrough-position': 'strikethroughPosition',
  strikethroughThickness: 1,
  'strikethrough-thickness': 'strikethroughThickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 1,
  'stroke-dasharray': 'strokeDasharray',
  strokeDashoffset: 1,
  'stroke-dashoffset': 'strokeDashoffset',
  strokeLinecap: 1,
  'stroke-linecap': 'strokeLinecap',
  strokeLinejoin: 1,
  'stroke-linejoin': 'strokeLinejoin',
  strokeMiterlimit: 1,
  'stroke-miterlimit': 'strokeMiterlimit',
  strokeWidth: 1,
  'stroke-width': 'strokeWidth',
  strokeOpacity: 1,
  'stroke-opacity': 'strokeOpacity',
  suppressContentEditableWarning: 1,
  suppressHydrationWarning: 1,
  surfaceScale: 1,
  systemLanguage: 1,
  tableValues: 1,
  targetX: 1,
  targetY: 1,
  textAnchor: 1,
  'text-anchor': 'textAnchor',
  textDecoration: 1,
  'text-decoration': 'textDecoration',
  textLength: 1,
  textRendering: 1,
  'text-rendering': 'textRendering',
  to: 0,
  transform: 0,
  typeof: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 1,
  'underline-position': 'underlinePosition',
  underlineThickness: 1,
  'underline-thickness': 'underlineThickness',
  unicode: 0,
  unicodeBidi: 1,
  'unicode-bidi': 'unicodeBidi',
  unicodeRange: 1,
  'unicode-range': 'unicodeRange',
  unitsPerEm: 1,
  'units-per-em': 'unitsPerEm',
  unselectable: 0,
  vAlphabetic: 1,
  'v-alphabetic': 'vAlphabetic',
  values: 0,
  vectorEffect: 1,
  'vector-effect': 'vectorEffect',
  version: 0,
  vertAdvY: 1,
  'vert-adv-y': 'vertAdvY',
  vertOriginX: 1,
  'vert-origin-x': 'vertOriginX',
  vertOriginY: 1,
  'vert-origin-y': 'vertOriginY',
  vHanging: 1,
  'v-hanging': 'vHanging',
  vIdeographic: 1,
  'v-ideographic': 'vIdeographic',
  viewBox: 1,
  viewTarget: 1,
  visibility: 0,
  vMathematical: 1,
  'v-mathematical': 'vMathematical',
  vocab: 0,
  widths: 0,
  wordSpacing: 1,
  'word-spacing': 'wordSpacing',
  writingMode: 1,
  'writing-mode': 'writingMode',
  x1: 0,
  x2: 0,
  x: 0,
  xChannelSelector: 1,
  xHeight: 1,
  'x-height': 'xHeight',
  xlinkActuate: 1,
  'xlink:actuate': 'xlinkActuate',
  xlinkArcrole: 1,
  'xlink:arcrole': 'xlinkArcrole',
  xlinkHref: 1,
  'xlink:href': 'xlinkHref',
  xlinkRole: 1,
  'xlink:role': 'xlinkRole',
  xlinkShow: 1,
  'xlink:show': 'xlinkShow',
  xlinkTitle: 1,
  'xlink:title': 'xlinkTitle',
  xlinkType: 1,
  'xlink:type': 'xlinkType',
  xmlBase: 1,
  'xml:base': 'xmlBase',
  xmlLang: 1,
  'xml:lang': 'xmlLang',
  xmlns: 0,
  'xml:space': 'xmlSpace',
  xmlnsXlink: 1,
  'xmlns:xlink': 'xmlnsXlink',
  xmlSpace: 1,
  y1: 0,
  y2: 0,
  y: 0,
  yChannelSelector: 1,
  z: 0,
  zoomAndPan: 1
};


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var style_to_object_1 = __importDefault(__webpack_require__(231));
var utilities_1 = __webpack_require__(233);
function StyleToJS(style, options) {
    var output = {};
    if (!style || typeof style !== 'string') {
        return output;
    }
    (0, style_to_object_1["default"])(style, function (property, value) {
        if (property && value) {
            output[(0, utilities_1.camelCase)(property, options)] = value;
        }
    });
    return output;
}
exports["default"] = StyleToJS;


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(232);

/**
 * Parses inline style to object.
 *
 * @example
 * // returns { 'line-height': '42' }
 * StyleToObject('line-height: 42;');
 *
 * @param  {String}      style      - The inline style.
 * @param  {Function}    [iterator] - The iterator function.
 * @return {null|Object}
 */
function StyleToObject(style, iterator) {
  var output = null;
  if (!style || typeof style !== 'string') {
    return output;
  }

  var declaration;
  var declarations = parse(style);
  var hasIterator = typeof iterator === 'function';
  var property;
  var value;

  for (var i = 0, len = declarations.length; i < len; i++) {
    declaration = declarations[i];
    property = declaration.property;
    value = declaration.value;

    if (hasIterator) {
      iterator(property, value, declaration);
    } else if (value) {
      output || (output = {});
      output[property] = value;
    }
  }

  return output;
}

module.exports = StyleToObject;


/***/ }),
/* 232 */
/***/ (function(module, exports) {

// http://www.w3.org/TR/CSS21/grammar.html
// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027
var COMMENT_REGEX = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;

var NEWLINE_REGEX = /\n/g;
var WHITESPACE_REGEX = /^\s*/;

// declaration
var PROPERTY_REGEX = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/;
var COLON_REGEX = /^:\s*/;
var VALUE_REGEX = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/;
var SEMICOLON_REGEX = /^[;\s]*/;

// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill
var TRIM_REGEX = /^\s+|\s+$/g;

// strings
var NEWLINE = '\n';
var FORWARD_SLASH = '/';
var ASTERISK = '*';
var EMPTY_STRING = '';

// types
var TYPE_COMMENT = 'comment';
var TYPE_DECLARATION = 'declaration';

/**
 * @param {String} style
 * @param {Object} [options]
 * @return {Object[]}
 * @throws {TypeError}
 * @throws {Error}
 */
module.exports = function(style, options) {
  if (typeof style !== 'string') {
    throw new TypeError('First argument must be a string');
  }

  if (!style) return [];

  options = options || {};

  /**
   * Positional.
   */
  var lineno = 1;
  var column = 1;

  /**
   * Update lineno and column based on `str`.
   *
   * @param {String} str
   */
  function updatePosition(str) {
    var lines = str.match(NEWLINE_REGEX);
    if (lines) lineno += lines.length;
    var i = str.lastIndexOf(NEWLINE);
    column = ~i ? str.length - i : column + str.length;
  }

  /**
   * Mark position and patch `node.position`.
   *
   * @return {Function}
   */
  function position() {
    var start = { line: lineno, column: column };
    return function(node) {
      node.position = new Position(start);
      whitespace();
      return node;
    };
  }

  /**
   * Store position information for a node.
   *
   * @constructor
   * @property {Object} start
   * @property {Object} end
   * @property {undefined|String} source
   */
  function Position(start) {
    this.start = start;
    this.end = { line: lineno, column: column };
    this.source = options.source;
  }

  /**
   * Non-enumerable source string.
   */
  Position.prototype.content = style;

  var errorsList = [];

  /**
   * Error `msg`.
   *
   * @param {String} msg
   * @throws {Error}
   */
  function error(msg) {
    var err = new Error(
      options.source + ':' + lineno + ':' + column + ': ' + msg
    );
    err.reason = msg;
    err.filename = options.source;
    err.line = lineno;
    err.column = column;
    err.source = style;

    if (options.silent) {
      errorsList.push(err);
    } else {
      throw err;
    }
  }

  /**
   * Match `re` and return captures.
   *
   * @param {RegExp} re
   * @return {undefined|Array}
   */
  function match(re) {
    var m = re.exec(style);
    if (!m) return;
    var str = m[0];
    updatePosition(str);
    style = style.slice(str.length);
    return m;
  }

  /**
   * Parse whitespace.
   */
  function whitespace() {
    match(WHITESPACE_REGEX);
  }

  /**
   * Parse comments.
   *
   * @param {Object[]} [rules]
   * @return {Object[]}
   */
  function comments(rules) {
    var c;
    rules = rules || [];
    while ((c = comment())) {
      if (c !== false) {
        rules.push(c);
      }
    }
    return rules;
  }

  /**
   * Parse comment.
   *
   * @return {Object}
   * @throws {Error}
   */
  function comment() {
    var pos = position();
    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;

    var i = 2;
    while (
      EMPTY_STRING != style.charAt(i) &&
      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))
    ) {
      ++i;
    }
    i += 2;

    if (EMPTY_STRING === style.charAt(i - 1)) {
      return error('End of comment missing');
    }

    var str = style.slice(2, i - 2);
    column += 2;
    updatePosition(str);
    style = style.slice(i);
    column += 2;

    return pos({
      type: TYPE_COMMENT,
      comment: str
    });
  }

  /**
   * Parse declaration.
   *
   * @return {Object}
   * @throws {Error}
   */
  function declaration() {
    var pos = position();

    // prop
    var prop = match(PROPERTY_REGEX);
    if (!prop) return;
    comment();

    // :
    if (!match(COLON_REGEX)) return error("property missing ':'");

    // val
    var val = match(VALUE_REGEX);

    var ret = pos({
      type: TYPE_DECLARATION,
      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),
      value: val
        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))
        : EMPTY_STRING
    });

    // ;
    match(SEMICOLON_REGEX);

    return ret;
  }

  /**
   * Parse declarations.
   *
   * @return {Object[]}
   */
  function declarations() {
    var decls = [];

    comments(decls);

    // declarations
    var decl;
    while ((decl = declaration())) {
      if (decl !== false) {
        decls.push(decl);
        comments(decls);
      }
    }

    return decls;
  }

  whitespace();
  return declarations();
};

/**
 * Trim `str`.
 *
 * @param {String} str
 * @return {String}
 */
function trim(str) {
  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;
}


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.__esModule = true;
exports.camelCase = void 0;
var CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;
var HYPHEN_REGEX = /-([a-z])/g;
var NO_HYPHEN_REGEX = /^[^-]+$/;
var VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;
var MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;
var skipCamelCase = function (property) {
    return !property ||
        NO_HYPHEN_REGEX.test(property) ||
        CUSTOM_PROPERTY_REGEX.test(property);
};
var capitalize = function (match, character) {
    return character.toUpperCase();
};
var trimHyphen = function (match, prefix) { return "".concat(prefix, "-"); };
var camelCase = function (property, options) {
    if (options === void 0) { options = {}; }
    if (skipCamelCase(property)) {
        return property;
    }
    property = property.toLowerCase();
    if (options.reactCompat) {
        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);
    }
    else {
        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);
    }
    return property.replace(HYPHEN_REGEX, capitalize);
};
exports.camelCase = camelCase;


/***/ }),
/* 234 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_js__ = __webpack_require__(235);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__index_js__);


/* harmony default export */ __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0__index_js___default.a);


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

var domparser = __webpack_require__(236);
var formatDOM = __webpack_require__(109).formatDOM;

var DIRECTIVE_REGEX = /<(![a-zA-Z\s]+)>/; // e.g., <!doctype html>

/**
 * Parses HTML string to DOM nodes in browser.
 *
 * @param  {string} html  - HTML markup.
 * @return {DomElement[]} - DOM elements.
 */
function HTMLDOMParser(html) {
  if (typeof html !== 'string') {
    throw new TypeError('First argument must be a string');
  }

  if (html === '') {
    return [];
  }

  // match directive
  var match = html.match(DIRECTIVE_REGEX);
  var directive;

  if (match && match[1]) {
    directive = match[1];
  }

  return formatDOM(domparser(html), null, directive);
}

module.exports = HTMLDOMParser;


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

// constants
var HTML = 'html';
var HEAD = 'head';
var BODY = 'body';
var FIRST_TAG_REGEX = /<([a-zA-Z]+[0-9]?)/; // e.g., <h1>
var HEAD_TAG_REGEX = /<head.*>/i;
var BODY_TAG_REGEX = /<body.*>/i;

// falls back to `parseFromString` if `createHTMLDocument` cannot be used
var parseFromDocument = function () {
  throw new Error(
    'This browser does not support `document.implementation.createHTMLDocument`'
  );
};

var parseFromString = function () {
  throw new Error(
    'This browser does not support `DOMParser.prototype.parseFromString`'
  );
};

/**
 * DOMParser (performance: slow).
 *
 * @see https://developer.mozilla.org/docs/Web/API/DOMParser#Parsing_an_SVG_or_HTML_document
 */
if (typeof window.DOMParser === 'function') {
  var domParser = new window.DOMParser();
  var mimeType = 'text/html';

  /**
   * Creates an HTML document using `DOMParser.parseFromString`.
   *
   * @param  {string} html      - The HTML string.
   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).
   * @return {HTMLDocument}
   */
  parseFromString = function (html, tagName) {
    if (tagName) {
      html = '<' + tagName + '>' + html + '</' + tagName + '>';
    }

    return domParser.parseFromString(html, mimeType);
  };

  parseFromDocument = parseFromString;
}

/**
 * DOMImplementation (performance: fair).
 *
 * @see https://developer.mozilla.org/docs/Web/API/DOMImplementation/createHTMLDocument
 */
if (document.implementation) {
  var isIE = __webpack_require__(109).isIE;

  // title parameter is required in IE
  // https://msdn.microsoft.com/en-us/library/ff975457(v=vs.85).aspx
  var doc = document.implementation.createHTMLDocument(
    isIE() ? 'html-dom-parser' : undefined
  );

  /**
   * Use HTML document created by `document.implementation.createHTMLDocument`.
   *
   * @param  {string} html      - The HTML string.
   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).
   * @return {HTMLDocument}
   */
  parseFromDocument = function (html, tagName) {
    if (tagName) {
      doc.documentElement.getElementsByTagName(tagName)[0].innerHTML = html;
      return doc;
    }

    doc.documentElement.innerHTML = html;
    return doc;
  };
}

/**
 * Template (performance: fast).
 *
 * @see https://developer.mozilla.org/docs/Web/HTML/Element/template
 */
var template = document.createElement('template');
var parseFromTemplate;

if (template.content) {
  /**
   * Uses a template element (content fragment) to parse HTML.
   *
   * @param  {string} html - The HTML string.
   * @return {NodeList}
   */
  parseFromTemplate = function (html) {
    template.innerHTML = html;
    return template.content.childNodes;
  };
}

/**
 * Parses HTML string to DOM nodes.
 *
 * @param  {string}   html - HTML markup.
 * @return {NodeList}
 */
function domparser(html) {
  var firstTagName;
  var match = html.match(FIRST_TAG_REGEX);

  if (match && match[1]) {
    firstTagName = match[1].toLowerCase();
  }

  var doc;
  var element;
  var elements;

  switch (firstTagName) {
    case HTML:
      doc = parseFromString(html);

      // the created document may come with filler head/body elements,
      // so make sure to remove them if they don't actually exist
      if (!HEAD_TAG_REGEX.test(html)) {
        element = doc.getElementsByTagName(HEAD)[0];
        if (element) {
          element.parentNode.removeChild(element);
        }
      }

      if (!BODY_TAG_REGEX.test(html)) {
        element = doc.getElementsByTagName(BODY)[0];
        if (element) {
          element.parentNode.removeChild(element);
        }
      }

      return doc.getElementsByTagName(HTML);

    case HEAD:
    case BODY:
      elements = parseFromDocument(html).getElementsByTagName(firstTagName);

      // if there's a sibling element, then return both elements
      if (BODY_TAG_REGEX.test(html) && HEAD_TAG_REGEX.test(html)) {
        return elements[0].parentNode.childNodes;
      }
      return elements;

    // low-level tag or text
    default:
      if (parseFromTemplate) {
        return parseFromTemplate(html);
      }

      return parseFromDocument(html, BODY).getElementsByTagName(BODY)[0]
        .childNodes;
  }
}

module.exports = domparser;


/***/ }),
/* 237 */
/***/ (function(module, exports) {

/**
 * SVG elements are case-sensitive.
 *
 * @see {@link https://developer.mozilla.org/docs/Web/SVG/Element#SVG_elements_A_to_Z}
 */
var CASE_SENSITIVE_TAG_NAMES = [
  'animateMotion',
  'animateTransform',
  'clipPath',
  'feBlend',
  'feColorMatrix',
  'feComponentTransfer',
  'feComposite',
  'feConvolveMatrix',
  'feDiffuseLighting',
  'feDisplacementMap',
  'feDropShadow',
  'feFlood',
  'feFuncA',
  'feFuncB',
  'feFuncG',
  'feFuncR',
  'feGaussainBlur',
  'feImage',
  'feMerge',
  'feMergeNode',
  'feMorphology',
  'feOffset',
  'fePointLight',
  'feSpecularLighting',
  'feSpotLight',
  'feTile',
  'feTurbulence',
  'foreignObject',
  'linearGradient',
  'radialGradient',
  'textPath'
];

module.exports = {
  CASE_SENSITIVE_TAG_NAMES: CASE_SENSITIVE_TAG_NAMES
};


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cloneNode = exports.hasChildren = exports.isDocument = exports.isDirective = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = exports.Element = exports.Document = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;
var domelementtype_1 = __webpack_require__(65);
var nodeTypes = new Map([
    [domelementtype_1.ElementType.Tag, 1],
    [domelementtype_1.ElementType.Script, 1],
    [domelementtype_1.ElementType.Style, 1],
    [domelementtype_1.ElementType.Directive, 1],
    [domelementtype_1.ElementType.Text, 3],
    [domelementtype_1.ElementType.CDATA, 4],
    [domelementtype_1.ElementType.Comment, 8],
    [domelementtype_1.ElementType.Root, 9],
]);
/**
 * This object will be used as the prototype for Nodes when creating a
 * DOM-Level-1-compliant structure.
 */
var Node = /** @class */ (function () {
    /**
     *
     * @param type The type of the node.
     */
    function Node(type) {
        this.type = type;
        /** Parent of the node */
        this.parent = null;
        /** Previous sibling */
        this.prev = null;
        /** Next sibling */
        this.next = null;
        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */
        this.startIndex = null;
        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */
        this.endIndex = null;
    }
    Object.defineProperty(Node.prototype, "nodeType", {
        // Read-only aliases
        /**
         * [DOM spec](https://dom.spec.whatwg.org/#dom-node-nodetype)-compatible
         * node {@link type}.
         */
        get: function () {
            var _a;
            return (_a = nodeTypes.get(this.type)) !== null && _a !== void 0 ? _a : 1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Node.prototype, "parentNode", {
        // Read-write aliases for properties
        /**
         * Same as {@link parent}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.parent;
        },
        set: function (parent) {
            this.parent = parent;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Node.prototype, "previousSibling", {
        /**
         * Same as {@link prev}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.prev;
        },
        set: function (prev) {
            this.prev = prev;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Node.prototype, "nextSibling", {
        /**
         * Same as {@link next}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.next;
        },
        set: function (next) {
            this.next = next;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Clone this node, and optionally its children.
     *
     * @param recursive Clone child nodes as well.
     * @returns A clone of the node.
     */
    Node.prototype.cloneNode = function (recursive) {
        if (recursive === void 0) { recursive = false; }
        return cloneNode(this, recursive);
    };
    return Node;
}());
exports.Node = Node;
/**
 * A node that contains some data.
 */
var DataNode = /** @class */ (function (_super) {
    __extends(DataNode, _super);
    /**
     * @param type The type of the node
     * @param data The content of the data node
     */
    function DataNode(type, data) {
        var _this = _super.call(this, type) || this;
        _this.data = data;
        return _this;
    }
    Object.defineProperty(DataNode.prototype, "nodeValue", {
        /**
         * Same as {@link data}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.data;
        },
        set: function (data) {
            this.data = data;
        },
        enumerable: false,
        configurable: true
    });
    return DataNode;
}(Node));
exports.DataNode = DataNode;
/**
 * Text within the document.
 */
var Text = /** @class */ (function (_super) {
    __extends(Text, _super);
    function Text(data) {
        return _super.call(this, domelementtype_1.ElementType.Text, data) || this;
    }
    return Text;
}(DataNode));
exports.Text = Text;
/**
 * Comments within the document.
 */
var Comment = /** @class */ (function (_super) {
    __extends(Comment, _super);
    function Comment(data) {
        return _super.call(this, domelementtype_1.ElementType.Comment, data) || this;
    }
    return Comment;
}(DataNode));
exports.Comment = Comment;
/**
 * Processing instructions, including doc types.
 */
var ProcessingInstruction = /** @class */ (function (_super) {
    __extends(ProcessingInstruction, _super);
    function ProcessingInstruction(name, data) {
        var _this = _super.call(this, domelementtype_1.ElementType.Directive, data) || this;
        _this.name = name;
        return _this;
    }
    return ProcessingInstruction;
}(DataNode));
exports.ProcessingInstruction = ProcessingInstruction;
/**
 * A `Node` that can have children.
 */
var NodeWithChildren = /** @class */ (function (_super) {
    __extends(NodeWithChildren, _super);
    /**
     * @param type Type of the node.
     * @param children Children of the node. Only certain node types can have children.
     */
    function NodeWithChildren(type, children) {
        var _this = _super.call(this, type) || this;
        _this.children = children;
        return _this;
    }
    Object.defineProperty(NodeWithChildren.prototype, "firstChild", {
        // Aliases
        /** First child of the node. */
        get: function () {
            var _a;
            return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeWithChildren.prototype, "lastChild", {
        /** Last child of the node. */
        get: function () {
            return this.children.length > 0
                ? this.children[this.children.length - 1]
                : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeWithChildren.prototype, "childNodes", {
        /**
         * Same as {@link children}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.children;
        },
        set: function (children) {
            this.children = children;
        },
        enumerable: false,
        configurable: true
    });
    return NodeWithChildren;
}(Node));
exports.NodeWithChildren = NodeWithChildren;
/**
 * The root node of the document.
 */
var Document = /** @class */ (function (_super) {
    __extends(Document, _super);
    function Document(children) {
        return _super.call(this, domelementtype_1.ElementType.Root, children) || this;
    }
    return Document;
}(NodeWithChildren));
exports.Document = Document;
/**
 * An element within the DOM.
 */
var Element = /** @class */ (function (_super) {
    __extends(Element, _super);
    /**
     * @param name Name of the tag, eg. `div`, `span`.
     * @param attribs Object mapping attribute names to attribute values.
     * @param children Children of the node.
     */
    function Element(name, attribs, children, type) {
        if (children === void 0) { children = []; }
        if (type === void 0) { type = name === "script"
            ? domelementtype_1.ElementType.Script
            : name === "style"
                ? domelementtype_1.ElementType.Style
                : domelementtype_1.ElementType.Tag; }
        var _this = _super.call(this, type, children) || this;
        _this.name = name;
        _this.attribs = attribs;
        return _this;
    }
    Object.defineProperty(Element.prototype, "tagName", {
        // DOM Level 1 aliases
        /**
         * Same as {@link name}.
         * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
         */
        get: function () {
            return this.name;
        },
        set: function (name) {
            this.name = name;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Element.prototype, "attributes", {
        get: function () {
            var _this = this;
            return Object.keys(this.attribs).map(function (name) {
                var _a, _b;
                return ({
                    name: name,
                    value: _this.attribs[name],
                    namespace: (_a = _this["x-attribsNamespace"]) === null || _a === void 0 ? void 0 : _a[name],
                    prefix: (_b = _this["x-attribsPrefix"]) === null || _b === void 0 ? void 0 : _b[name],
                });
            });
        },
        enumerable: false,
        configurable: true
    });
    return Element;
}(NodeWithChildren));
exports.Element = Element;
/**
 * @param node Node to check.
 * @returns `true` if the node is a `Element`, `false` otherwise.
 */
function isTag(node) {
    return (0, domelementtype_1.isTag)(node);
}
exports.isTag = isTag;
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `CDATA`, `false` otherwise.
 */
function isCDATA(node) {
    return node.type === domelementtype_1.ElementType.CDATA;
}
exports.isCDATA = isCDATA;
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `Text`, `false` otherwise.
 */
function isText(node) {
    return node.type === domelementtype_1.ElementType.Text;
}
exports.isText = isText;
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `Comment`, `false` otherwise.
 */
function isComment(node) {
    return node.type === domelementtype_1.ElementType.Comment;
}
exports.isComment = isComment;
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.
 */
function isDirective(node) {
    return node.type === domelementtype_1.ElementType.Directive;
}
exports.isDirective = isDirective;
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.
 */
function isDocument(node) {
    return node.type === domelementtype_1.ElementType.Root;
}
exports.isDocument = isDocument;
/**
 * @param node Node to check.
 * @returns `true` if the node is a `NodeWithChildren` (has children), `false` otherwise.
 */
function hasChildren(node) {
    return Object.prototype.hasOwnProperty.call(node, "children");
}
exports.hasChildren = hasChildren;
/**
 * Clone a node, and optionally its children.
 *
 * @param recursive Clone child nodes as well.
 * @returns A clone of the node.
 */
function cloneNode(node, recursive) {
    if (recursive === void 0) { recursive = false; }
    var result;
    if (isText(node)) {
        result = new Text(node.data);
    }
    else if (isComment(node)) {
        result = new Comment(node.data);
    }
    else if (isTag(node)) {
        var children = recursive ? cloneChildren(node.children) : [];
        var clone_1 = new Element(node.name, __assign({}, node.attribs), children);
        children.forEach(function (child) { return (child.parent = clone_1); });
        if (node.namespace != null) {
            clone_1.namespace = node.namespace;
        }
        if (node["x-attribsNamespace"]) {
            clone_1["x-attribsNamespace"] = __assign({}, node["x-attribsNamespace"]);
        }
        if (node["x-attribsPrefix"]) {
            clone_1["x-attribsPrefix"] = __assign({}, node["x-attribsPrefix"]);
        }
        result = clone_1;
    }
    else if (isCDATA(node)) {
        var children = recursive ? cloneChildren(node.children) : [];
        var clone_2 = new NodeWithChildren(domelementtype_1.ElementType.CDATA, children);
        children.forEach(function (child) { return (child.parent = clone_2); });
        result = clone_2;
    }
    else if (isDocument(node)) {
        var children = recursive ? cloneChildren(node.children) : [];
        var clone_3 = new Document(children);
        children.forEach(function (child) { return (child.parent = clone_3); });
        if (node["x-mode"]) {
            clone_3["x-mode"] = node["x-mode"];
        }
        result = clone_3;
    }
    else if (isDirective(node)) {
        var instruction = new ProcessingInstruction(node.name, node.data);
        if (node["x-name"] != null) {
            instruction["x-name"] = node["x-name"];
            instruction["x-publicId"] = node["x-publicId"];
            instruction["x-systemId"] = node["x-systemId"];
        }
        result = instruction;
    }
    else {
        throw new Error("Not implemented yet: ".concat(node.type));
    }
    result.startIndex = node.startIndex;
    result.endIndex = node.endIndex;
    if (node.sourceCodeLocation != null) {
        result.sourceCodeLocation = node.sourceCodeLocation;
    }
    return result;
}
exports.cloneNode = cloneNode;
function cloneChildren(childs) {
    var children = childs.map(function (child) { return cloneNode(child, true); });
    for (var i = 1; i < children.length; i++) {
        children[i].prev = children[i - 1];
        children[i - 1].next = children[i];
    }
    return children;
}


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DomHandler = void 0;
var domelementtype_1 = __webpack_require__(65);
var node_1 = __webpack_require__(110);
__exportStar(__webpack_require__(110), exports);
var reWhitespace = /\s+/g;
// Default options
var defaultOpts = {
    normalizeWhitespace: false,
    withStartIndices: false,
    withEndIndices: false,
    xmlMode: false,
};
var DomHandler = /** @class */ (function () {
    /**
     * @param callback Called once parsing has completed.
     * @param options Settings for the handler.
     * @param elementCB Callback whenever a tag is closed.
     */
    function DomHandler(callback, options, elementCB) {
        /** The elements of the DOM */
        this.dom = [];
        /** The root element for the DOM */
        this.root = new node_1.Document(this.dom);
        /** Indicated whether parsing has been completed. */
        this.done = false;
        /** Stack of open tags. */
        this.tagStack = [this.root];
        /** A data node that is still being written to. */
        this.lastNode = null;
        /** Reference to the parser instance. Used for location information. */
        this.parser = null;
        // Make it possible to skip arguments, for backwards-compatibility
        if (typeof options === "function") {
            elementCB = options;
            options = defaultOpts;
        }
        if (typeof callback === "object") {
            options = callback;
            callback = undefined;
        }
        this.callback = callback !== null && callback !== void 0 ? callback : null;
        this.options = options !== null && options !== void 0 ? options : defaultOpts;
        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;
    }
    DomHandler.prototype.onparserinit = function (parser) {
        this.parser = parser;
    };
    // Resets the handler back to starting state
    DomHandler.prototype.onreset = function () {
        this.dom = [];
        this.root = new node_1.Document(this.dom);
        this.done = false;
        this.tagStack = [this.root];
        this.lastNode = null;
        this.parser = null;
    };
    // Signals the handler that parsing is done
    DomHandler.prototype.onend = function () {
        if (this.done)
            return;
        this.done = true;
        this.parser = null;
        this.handleCallback(null);
    };
    DomHandler.prototype.onerror = function (error) {
        this.handleCallback(error);
    };
    DomHandler.prototype.onclosetag = function () {
        this.lastNode = null;
        var elem = this.tagStack.pop();
        if (this.options.withEndIndices) {
            elem.endIndex = this.parser.endIndex;
        }
        if (this.elementCB)
            this.elementCB(elem);
    };
    DomHandler.prototype.onopentag = function (name, attribs) {
        var type = this.options.xmlMode ? domelementtype_1.ElementType.Tag : undefined;
        var element = new node_1.Element(name, attribs, undefined, type);
        this.addNode(element);
        this.tagStack.push(element);
    };
    DomHandler.prototype.ontext = function (data) {
        var normalizeWhitespace = this.options.normalizeWhitespace;
        var lastNode = this.lastNode;
        if (lastNode && lastNode.type === domelementtype_1.ElementType.Text) {
            if (normalizeWhitespace) {
                lastNode.data = (lastNode.data + data).replace(reWhitespace, " ");
            }
            else {
                lastNode.data += data;
            }
            if (this.options.withEndIndices) {
                lastNode.endIndex = this.parser.endIndex;
            }
        }
        else {
            if (normalizeWhitespace) {
                data = data.replace(reWhitespace, " ");
            }
            var node = new node_1.Text(data);
            this.addNode(node);
            this.lastNode = node;
        }
    };
    DomHandler.prototype.oncomment = function (data) {
        if (this.lastNode && this.lastNode.type === domelementtype_1.ElementType.Comment) {
            this.lastNode.data += data;
            return;
        }
        var node = new node_1.Comment(data);
        this.addNode(node);
        this.lastNode = node;
    };
    DomHandler.prototype.oncommentend = function () {
        this.lastNode = null;
    };
    DomHandler.prototype.oncdatastart = function () {
        var text = new node_1.Text("");
        var node = new node_1.NodeWithChildren(domelementtype_1.ElementType.CDATA, [text]);
        this.addNode(node);
        text.parent = node;
        this.lastNode = text;
    };
    DomHandler.prototype.oncdataend = function () {
        this.lastNode = null;
    };
    DomHandler.prototype.onprocessinginstruction = function (name, data) {
        var node = new node_1.ProcessingInstruction(name, data);
        this.addNode(node);
    };
    DomHandler.prototype.handleCallback = function (error) {
        if (typeof this.callback === "function") {
            this.callback(error, this.dom);
        }
        else if (error) {
            throw error;
        }
    };
    DomHandler.prototype.addNode = function (node) {
        var parent = this.tagStack[this.tagStack.length - 1];
        var previousSibling = parent.children[parent.children.length - 1];
        if (this.options.withStartIndices) {
            node.startIndex = this.parser.startIndex;
        }
        if (this.options.withEndIndices) {
            node.endIndex = this.parser.endIndex;
        }
        parent.children.push(node);
        if (previousSibling) {
            node.prev = previousSibling;
            previousSibling.next = node;
        }
        node.parent = parent;
        this.lastNode = null;
    };
    return DomHandler;
}());
exports.DomHandler = DomHandler;
exports.default = DomHandler;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _cuid = __webpack_require__(66);

var _cuid2 = _interopRequireDefault(_cuid);

var _propTypes = __webpack_require__(1);

var _CardFooter = __webpack_require__(243);

var _CardFooter2 = _interopRequireDefault(_CardFooter);

var _prettyFormat = __webpack_require__(113);

var _prettyFormat2 = _interopRequireDefault(_prettyFormat);

var _constants = __webpack_require__(14);

var _Helpers = __webpack_require__(21);

var _general = __webpack_require__(6);

var _hooks = __webpack_require__(5);

var _card = __webpack_require__(37);

var _LinkBlocker = __webpack_require__(274);

var _LinkBlocker2 = _interopRequireDefault(_LinkBlocker);

var _videoButton = __webpack_require__(112);

var _videoButton2 = _interopRequireDefault(_videoButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    cardStyle: '',
    footer: [],
    styles: {},
    overlays: {},
    dateFormat: '',
    contentArea: {},
    lh: '',
    isBookmarked: false,
    disableBookmarkIco: false,
    renderBorder: true,
    renderDivider: false,
    renderOverlay: false,
    overlayLink: '',
    hideCTA: false,
    startDate: '',
    endDate: '',
    cardDate: '',
    modifiedDate: '',
    tags: [],
    bannerMap: {},
    origin: '',
    ariaHidden: false,
    tabIndex: 0
};

/**
 * 1/2 image aspect ratio card
 *
 * @component
 * @example
 * const props= {
    id: String,
    styles: Object,
    contentArea: Object,
    overlays: Object,
    renderBorder: Boolean,
    renderOverlay: Boolean,
    overlayLink: String,
 * }
 * return (
 *   <Card {...props}/>
 * )
 */
var Card = function Card(props) {
    var id = props.id,
        footer = props.footer,
        lh = props.lh,
        tags = props.tags,
        cardStyle = props.cardStyle,
        disableBookmarkIco = props.disableBookmarkIco,
        isBookmarked = props.isBookmarked,
        onClick = props.onClick,
        dateFormat = props.dateFormat,
        cardDate = props.cardDate,
        modifiedDate = props.modifiedDate,
        _props$styles = props.styles,
        image = _props$styles.backgroundImage,
        altText = _props$styles.backgroundAltText,
        mnemonic = _props$styles.mnemonic,
        cardIcon = _props$styles.icon,
        iconAlt = _props$styles.iconAlt,
        _props$contentArea = props.contentArea;
    _props$contentArea = _props$contentArea === undefined ? {} : _props$contentArea;
    var title = _props$contentArea.title,
        highlightedTitle = _props$contentArea.highlightedTitle,
        label = _props$contentArea.detailText,
        description = _props$contentArea.description,
        highlightedDescription = _props$contentArea.highlightedDescription,
        _props$contentArea$da = _props$contentArea.dateDetailText;
    _props$contentArea$da = _props$contentArea$da === undefined ? {} : _props$contentArea$da;
    var _props$contentArea$da2 = _props$contentArea$da.startTime,
        startTime = _props$contentArea$da2 === undefined ? '' : _props$contentArea$da2,
        _props$contentArea$da3 = _props$contentArea$da.endTime,
        endTime = _props$contentArea$da3 === undefined ? '' : _props$contentArea$da3,
        _props$overlays = props.overlays;
    _props$overlays = _props$overlays === undefined ? {} : _props$overlays;
    var _props$overlays$banne = _props$overlays.banner;
    _props$overlays$banne = _props$overlays$banne === undefined ? {} : _props$overlays$banne;
    var bannerDescription = _props$overlays$banne.description,
        bannerFontColor = _props$overlays$banne.fontColor,
        bannerBackgroundColor = _props$overlays$banne.backgroundColor,
        bannerIcon = _props$overlays$banne.icon,
        _props$overlays$video = _props$overlays.videoButton;
    _props$overlays$video = _props$overlays$video === undefined ? {} : _props$overlays$video;
    var videoURL = _props$overlays$video.url,
        _props$overlays$logo = _props$overlays.logo;
    _props$overlays$logo = _props$overlays$logo === undefined ? {} : _props$overlays$logo;
    var logoSrc = _props$overlays$logo.src,
        logoAlt = _props$overlays$logo.alt,
        logoBg = _props$overlays$logo.backgroundColor,
        logoBorderBg = _props$overlays$logo.borderColor,
        _props$overlays$label = _props$overlays.label;
    _props$overlays$label = _props$overlays$label === undefined ? {} : _props$overlays$label;
    var badgeText = _props$overlays$label.description,
        renderBorder = props.renderBorder,
        renderDivider = props.renderDivider,
        renderOverlay = props.renderOverlay,
        overlayLink = props.overlayLink,
        hideCTA = props.hideCTA,
        startDate = props.startDate,
        endDate = props.endDate,
        bannerMap = props.bannerMap,
        onFocus = props.onFocus,
        origin = props.origin,
        ariaHidden = props.ariaHidden,
        tabIndex = props.tabIndex;


    var bannerBackgroundColorToUse = bannerBackgroundColor;
    var bannerIconToUse = bannerIcon;
    var bannerFontColorToUse = bannerFontColor;
    var bannerDescriptionToUse = bannerDescription;
    var videoURLToUse = videoURL;
    var gateVideo = false;

    var getConfig = (0, _hooks.useConfig)();

    /**
     **** Authored Configs ****
     */
    var i18nFormat = getConfig('collection', 'i18n.prettyDateIntervalFormat');
    var locale = getConfig('language', '');
    var disableBanners = getConfig('collection', 'disableBanners');
    var cardButtonStyle = getConfig('collection', 'button.style');
    var headingLevel = getConfig('collection.i18n', 'cardTitleAccessibilityLevel');
    var additionalParams = getConfig('collection', 'additionalRequestParams');
    var detailsTextOption = getConfig('collection', 'detailsTextOption');
    var lastModified = getConfig('collection', 'i18n.lastModified');
    var registrationUrl = getConfig('collection', 'banner.register.url');
    var hideDateInterval = getConfig('collection', 'hideDateInterval');
    var showCardBadges = getConfig('collection', 'showCardBadges');
    var altCtaUsed = getConfig('collection', 'dynamicCTAForLiveEvents');
    var ctaAction = getConfig('collection', 'ctaAction');
    var bladeCard = getConfig('collection', 'bladeCard');
    var searchEnabled = getConfig('search', 'enabled');

    /**
     * Class name for the card:
     * whether card border should be rendered or no;
     * @type {String}
     */
    var cardClassName = (0, _classnames2.default)({
        'consonant-Card': true,
        'consonant-u-noBorders': !renderBorder,
        'consonant-hide-cta': hideCTA
    });

    /**
     * Formatted date string
     * @type {String}
     */
    var prettyDate = startTime ? (0, _prettyFormat2.default)(startTime, endTime, locale, i18nFormat) : '';

    /**
     * Detail text
     * @type {String}
     */
    var detailText = prettyDate || label;
    if (detailsTextOption === 'modifiedDate' && modifiedDate) {
        var localModifiedDate = new Date(modifiedDate);
        detailText = lastModified && lastModified.replace('{date}', localModifiedDate.toLocaleDateString()) || localModifiedDate.toLocaleDateString();
    } else if (detailsTextOption === 'createdDate' && cardDate) {
        var localCreatedDate = new Date(cardDate);
        detailText = localCreatedDate.toLocaleDateString();
    } else if (detailsTextOption === 'staticDate' && cardDate) {
        var staticDate = new Date(cardDate.replace(/Z$/, ''));
        detailText = staticDate.toLocaleDateString();
    }

    /**
     * isGated
     * @type {Boolean}
     */
    var isGated = (0, _Helpers.hasTag)(/caas:gated/, tags) || (0, _Helpers.hasTag)(/caas:card-style\/half-height-featured/, tags) || (0, _Helpers.hasTag)(/7ed3/, tags) || (0, _Helpers.hasTag)(/1j6zgcx\/3bhv/, tags);

    /**
     * isRegistered
     * @type {Boolean}
     */
    var isRegistered = (0, _hooks.useRegistered)(false);

    /**
     * isInPerson
     * @type {Boolean}
     */
    var isInPerson = (0, _Helpers.hasTag)(/events\/session-format\/in-person/, tags) || (0, _Helpers.hasTag)(/e505\/3ssk/, tags);

    /**
     * Extends infobits with the configuration data
     * @param {Array} data - Array of the infobits
     * @return {Array} - Array of the infobits with the configuration data added
     */
    function extendFooterData(data) {
        if (!data) return [];

        return data.map(function (infobit) {
            // MWPW-129085: Compiler wrongly compiles this object to private, read-only,
            // Created copy so object instance has public methods and properties.
            var copy = _extends({}, infobit);
            if (copy.type === _constants.INFOBIT_TYPE.BOOKMARK) {
                if (isGated) {
                    copy.type = _constants.INFOBIT_TYPE.GATED;
                }
                return _extends({}, copy, {
                    cardId: id,
                    disableBookmarkIco: disableBookmarkIco,
                    isBookmarked: isBookmarked,
                    onClick: onClick
                });
            } else if (copy.type === _constants.INFOBIT_TYPE.DATE) {
                return _extends({}, copy, {
                    dateFormat: dateFormat,
                    locale: locale
                });
            } else if (cardButtonStyle === 'link') {
                copy.type = _constants.INFOBIT_TYPE.LINK;
            }
            return _extends({}, copy, {
                isCta: true
            });
        });
    }

    /**
     * Extends footer data and extracts an alt CTA if it exists
     * this is important for when overlay links are being used for live events
     * @param {Array} footerData
     * @return {String}
     */
    function getAltCtaLink(footerData) {
        if (!footerData) return '';
        if (footerData.length === 1) {
            var _footerData$0$altCta = footerData[0].altCta,
                altCta = _footerData$0$altCta === undefined ? [] : _footerData$0$altCta;

            if (altCta.length === 1) {
                return altCta[0].href;
            }
        }
        // default value is an unauthored alt cta
        return '';
    }

    /**
     * Get CTA text from footer data for analytics on overlay cards
     * @param {Array} footerData
     * @return {String}
     */
    function getCtaText(footerData, ctaUsed) {
        if (!footerData) return '';
        if (footerData.length === 1) {
            var _footerData$ = footerData[0],
                _footerData$$altCta = _footerData$.altCta,
                altCta = _footerData$$altCta === undefined ? [] : _footerData$$altCta,
                _footerData$$right = _footerData$.right,
                right = _footerData$$right === undefined ? [] : _footerData$$right;

            if (ctaUsed === 'right' && right.length === 1) {
                return right[0].text;
            } else if (ctaUsed === 'alt' && altCta.length === 1) {
                return altCta[0].text;
            }
            return '';
        }
        return '';
    }

    // Card styles
    var isOneHalf = cardStyle === 'one-half';
    var isThreeFourths = cardStyle === 'three-fourths';
    var isDoubleWide = cardStyle === 'double-wide';
    var isHalfHeight = cardStyle === 'half-height';
    var isProduct = cardStyle === 'product';
    var isText = cardStyle === 'text-card';
    var isFull = cardStyle === 'full-card';
    var isIcon = cardStyle === 'icon-card';
    var isNews = cardStyle === 'news-card';

    var isBlade = cardStyle === 'blade-card';
    var bladeVariant = isBlade ? [bladeCard.reverse ? 'reverse' : '', bladeCard.lightText ? 'light-text' : '', bladeCard.transparent ? 'transparent' : ''].filter(Boolean).join(' ') : '';
    var isHorizontal = cardStyle === 'horizontal-card';

    // Card elements to show
    var isTitleOnly = isHalfHeight || isThreeFourths || isFull || isIcon || isNews || isHorizontal;
    var showHeader = !isProduct;
    var fromDexter = origin === 'Dexter';
    var showBadge = (isOneHalf || isThreeFourths || isFull) && (fromDexter || showCardBadges);
    var showLogo = isOneHalf || isThreeFourths || isFull || isText || isHalfHeight && showCardBadges;
    var showLabel = !isProduct && !isText;
    var showVideoButton = !isProduct && !isText && !isIcon;
    var showText = !isHalfHeight && !isFull && !isNews && !isHorizontal;
    var showFooter = isOneHalf || isProduct || isText || isNews || isBlade;
    var showFooterLeft = !isProduct;
    var showFooterCenter = !isProduct && !altCtaUsed;
    var hideBanner = false;
    var eventBanner = '';
    var hideOnDemandDates = hideDateInterval && (0, _general.isDateAfterInterval)((0, _general.getCurrentDate)(), endDate);
    var isEventsCard = (0, _general.getSearchParam)(getConfig('collection', 'endpoint'), 'originSelection') === 'events';

    if (isHalfHeight && isGated && !isRegistered) {
        bannerDescriptionToUse = bannerMap.register.description;
        bannerIconToUse = '';
        bannerBackgroundColorToUse = bannerMap.register.backgroundColor;
        bannerFontColorToUse = bannerMap.register.fontColor;
        videoURLToUse = registrationUrl;
        gateVideo = true;
    } else if (startDate && endDate) {
        eventBanner = (0, _general.getEventBanner)(startDate, endDate, bannerMap);
        bannerBackgroundColorToUse = eventBanner.backgroundColor;
        bannerDescriptionToUse = eventBanner.description;
        bannerFontColorToUse = eventBanner.fontColor;
        bannerIconToUse = eventBanner.icon;
        if (isHalfHeight) {
            var now = (0, _general.getCurrentDate)();
            if ((0, _general.isDateBeforeInterval)(now, startDate)) {
                detailText = (0, _prettyFormat2.default)(startDate, endDate, locale, i18nFormat);
            }
        }
    }

    // Events card custom banners
    /* istanbul ignore if */
    if (isEventsCard) {
        hideBanner = isInPerson && eventBanner === bannerMap.onDemand;
        bannerDescriptionToUse = isInPerson && eventBanner === bannerMap.live ? 'Live Today' : bannerDescriptionToUse;
    }

    var hasBanner = bannerDescriptionToUse && bannerFontColorToUse && bannerBackgroundColorToUse && !hideBanner;

    var headingAria = videoURL || label || detailText || description || logoSrc || badgeText || hasBanner && !disableBanners || !isIcon ? '' : title;

    var linkBlockerTarget = (0, _general.getLinkTarget)(overlayLink, ctaAction);
    var addParams = new URLSearchParams(additionalParams);
    var overlayParams = additionalParams && addParams.keys().next().value ? overlayLink + '?' + addParams.toString() : overlayLink;
    var isLive = (0, _general.isDateWithinInterval)((0, _general.getCurrentDate)(), startDate, endDate);
    var isUpcoming = (0, _general.isDateBeforeInterval)((0, _general.getCurrentDate)(), startDate);
    var altCtaLink = getAltCtaLink(footer);
    var ctaText = altCtaUsed && isUpcoming && altCtaLink !== '' ? getCtaText(footer, 'alt') : getCtaText(footer, 'right');
    var overlay = altCtaUsed && isLive && altCtaLink !== '' ? altCtaLink : overlayParams;
    var getsFocus = isHalfHeight && !videoURLToUse || isThreeFourths || isFull || isDoubleWide || isIcon || hideCTA;

    // Sanitize markdown before dangerouslySetInnerHTML
    var parseMarkDown = function parseMarkDown() {
        var md = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

        if (searchEnabled) {
            return (0, _general.removeMarkDown)(md.replace(/<[^>]*>/g, ''));
        }
        var markup = '';
        if (isProduct && mnemonic) {
            markup += '<img src=' + mnemonic + ' alt="mnemonic" loading="lazy" />';
        }
        markup += md && md.toString().replace(/<[^>]*>/g, '') // remove any markup <>
        .replaceAll('{**', '<b>').replaceAll('**}', '</b>').replaceAll('{*', '<i>').replaceAll('*}', '</i>');
        return markup;
    };

    return _react2.default.createElement(
        'div',
        {
            'daa-lh': lh,
            className: cardStyle + ' ' + cardClassName + ' ' + bladeVariant,
            'data-testid': 'consonant-Card',
            id: id },
        showHeader && _react2.default.createElement(
            'div',
            {
                'data-testid': 'consonant-Card-header',
                className: 'consonant-Card-header',
                style: { backgroundImage: 'url("' + image + '")' },
                role: altText && 'img',
                'aria-label': altText },
            hasBanner && !disableBanners && !isIcon && !isNews && _react2.default.createElement(
                'span',
                {
                    'data-testid': 'consonant-Card-banner',
                    className: 'consonant-Card-banner',
                    style: {
                        backgroundColor: bannerBackgroundColorToUse,
                        color: bannerFontColorToUse
                    } },
                bannerIconToUse && _react2.default.createElement(
                    'div',
                    {
                        className: 'consonant-Card-bannerIconWrapper' },
                    _react2.default.createElement('img', {
                        alt: '',
                        loading: 'lazy',
                        src: bannerIconToUse,
                        'data-testid': 'consonant-Card-bannerImg' })
                ),
                _react2.default.createElement(
                    'span',
                    null,
                    bannerDescriptionToUse
                )
            ),
            showBadge && badgeText && _react2.default.createElement(
                'span',
                {
                    className: 'consonant-Card-badge' },
                badgeText
            ),
            showVideoButton && videoURL && !isHalfHeight && _react2.default.createElement(_videoButton2.default, {
                title: title,
                videoURL: videoURLToUse,
                gateVideo: gateVideo,
                onFocus: onFocus,
                tabIndex: tabIndex,
                className: 'consonant-Card-videoIco' }),
            showLogo && (logoSrc || isText && image) && _react2.default.createElement(
                'div',
                {
                    style: {
                        backgroundColor: logoBg,
                        borderColor: logoBorderBg
                    },
                    'data-testid': 'consonant-Card-logo',
                    className: 'consonant-Card-logo' },
                _react2.default.createElement('img', {
                    // the text card uses the image as logo
                    src: isText ? image : logoSrc,
                    alt: isText ? altText : logoAlt || '',
                    loading: 'lazy',
                    width: '32' })
            ),
            isIcon && _react2.default.createElement(
                'div',
                {
                    'data-testid': 'consonant-Card-logo',
                    className: 'consonant-Card-logo' },
                _react2.default.createElement('img', {
                    src: cardIcon,
                    alt: '',
                    loading: 'lazy',
                    width: '32',
                    'data-testid': 'consonant-Card-logoImg' })
            )
        ),
        _react2.default.createElement(
            'div',
            {
                className: 'consonant-Card-content' },
            showVideoButton && videoURL && isHalfHeight && _react2.default.createElement(_videoButton2.default, {
                title: title,
                videoURL: videoURLToUse,
                gateVideo: gateVideo,
                onFocus: onFocus,
                tabIndex: tabIndex,
                className: 'consonant-Card-videoIco' }),
            showLabel && detailText && _react2.default.createElement(
                'span',
                {
                    'data-testid': 'consonant-Card-label',
                    className: 'consonant-Card-label' },
                detailText
            ),
            isIcon && detailText === '' && _react2.default.createElement(
                'span',
                {
                    'data-testid': 'consonant-Card-label',
                    className: 'consonant-Card-label' },
                iconAlt
            ),
            isTitleOnly && highlightedTitle && _react2.default.createElement(
                'p',
                {
                    'data-testid': 'consonant-Card-title',
                    className: 'consonant-Card-title' },
                highlightedTitle
            ),
            isTitleOnly && !highlightedTitle && _react2.default.createElement('p', {
                'data-testid': 'consonant-Card-title',
                className: 'consonant-Card-title',
                title: (0, _general.removeMarkDown)(title),
                dangerouslySetInnerHTML: { __html: parseMarkDown(title) } }),
            !isTitleOnly && highlightedTitle && _react2.default.createElement(
                'p',
                {
                    role: 'heading',
                    'aria-label': headingAria,
                    'aria-level': headingLevel,
                    'data-testid': 'consonant-Card-title',
                    className: 'consonant-Card-title',
                    title: (0, _general.removeMarkDown)(title) },
                highlightedTitle
            ),
            !isTitleOnly && !highlightedTitle && _react2.default.createElement('p', {
                role: 'heading',
                'aria-label': headingAria,
                'aria-level': headingLevel,
                'data-testid': 'consonant-Card-title',
                className: 'consonant-Card-title',
                title: (0, _general.removeMarkDown)(title),
                dangerouslySetInnerHTML: { __html: parseMarkDown(title) } }),
            showText && !isIcon && (highlightedDescription ? _react2.default.createElement(
                'p',
                {
                    'data-testid': 'consonant-Card-text',
                    className: 'consonant-Card-text' },
                highlightedDescription
            ) : description && _react2.default.createElement('p', {
                'data-testid': 'consonant-Card-text',
                className: 'consonant-Card-text',
                dangerouslySetInnerHTML: { __html: parseMarkDown(description) } })),
            showFooter && !hideCTA && footer.map(function (footerItem) {
                return _react2.default.createElement(_CardFooter2.default, {
                    divider: renderDivider || footerItem.divider,
                    isFluid: footerItem.isFluid,
                    key: (0, _cuid2.default)(),
                    left: showFooterLeft && !hideOnDemandDates ? extendFooterData(footerItem.left) : [],
                    center: showFooterCenter ? extendFooterData(footerItem.center) : [],
                    right: extendFooterData(footerItem.right),
                    altRight: altCtaUsed ? extendFooterData(footerItem.altCta) : [],
                    startDate: startDate,
                    endDate: endDate,
                    cardStyle: cardStyle,
                    onFocus: onFocus,
                    title: title,
                    tabIndex: tabIndex,
                    renderOverlay: renderOverlay });
            }),
            (isThreeFourths || isDoubleWide || isFull) && !renderOverlay && _react2.default.createElement(_LinkBlocker2.default, {
                target: linkBlockerTarget,
                link: overlay,
                title: title,
                getsFocus: getsFocus || true,
                daa: ctaText })
        ),
        (renderOverlay || hideCTA || isHalfHeight || isIcon || isHorizontal) && _react2.default.createElement(_LinkBlocker2.default, {
            target: linkBlockerTarget,
            link: overlay,
            title: title,
            getsFocus: getsFocus || true,
            ariaHidden: ariaHidden,
            tabIndex: ariaHidden ? -1 : 0,
            daa: ctaText })
    );
};

Card.defaultProps = defaultProps;

exports.default = Card;

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

var pad = __webpack_require__(111);

var env = typeof window === 'object' ? window : self;
var globalCount = Object.keys(env).length;
var mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;
var clientId = pad((mimeTypesLength +
  navigator.userAgent.length).toString(36) +
  globalCount.toString(36), 4);

module.exports = function fingerprint () {
  return clientId;
};


/***/ }),
/* 242 */
/***/ (function(module, exports) {


var getRandomValue;

var crypto = typeof window !== 'undefined' &&
  (window.crypto || window.msCrypto) ||
  typeof self !== 'undefined' &&
  self.crypto;

if (crypto) {
    var lim = Math.pow(2, 32) - 1;
    getRandomValue = function () {
        return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);
    };
} else {
    getRandomValue = Math.random;
}

module.exports = getRandomValue;


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _Group = __webpack_require__(244);

var _Group2 = _interopRequireDefault(_Group);

var _card = __webpack_require__(37);

var _constants = __webpack_require__(14);

var _general = __webpack_require__(6);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    left: [],
    center: [],
    right: [],
    altRight: [],
    divider: false,
    isFluid: false
};

/**
 * The footer that is displayed for 3:2 cards
 *
 * @component
 * @example
 * const props= {
    divider: Boolean,
    left: Array,
    center: Array,
    right: Array,
    isFluid: Boolean,
 * }
 * return (
 *   <CardFooter {...props}/>
 * )
 */
var CardFooter = function CardFooter(props) {
    var divider = props.divider,
        left = props.left,
        center = props.center,
        right = props.right,
        altRight = props.altRight,
        startDate = props.startDate,
        endDate = props.endDate,
        isFluid = props.isFluid,
        onFocus = props.onFocus,
        title = props.title,
        tabIndex = props.tabIndex,
        renderOverlay = props.renderOverlay;

    /**
     * Is the card currently live?
     * @type {Boolean}
     */

    var isLive = (0, _general.isDateWithinInterval)((0, _general.getCurrentDate)(), startDate, endDate);
    var isUpcoming = (0, _general.isDateBeforeInterval)((0, _general.getCurrentDate)(), startDate);

    /**
     * Class name for the card footer:
     * whether the card footer should have a horizontal divider
     * @type {Number}
     */
    var footerClassName = (0, _classnames2.default)({
        'consonant-CardFooter': true,
        'consonant-CardFooter--divider': divider
    });

    /**
     * Class name for the card footer row:
     * whether the the card footer row should be fluid or of fixed width
     * @type {Number}
     */
    var rowClassName = (0, _classnames2.default)({
        'consonant-CardFooter-row': true,
        'consonant-CardFooter-row--fluid': isFluid
    });

    /**
     * How many groups are displayed in the footer
     * @type {Number}
     */
    var dataCells = left.some(function (_ref) {
        var type = _ref.type;
        return type === _constants.INFOBIT_TYPE.DATE;
    }) ? 2 : 1;

    /**
     * Whether the left footer infobits should render
     * @type {Boolean}
     */
    var shouldRenderLeft = left && left.length > 0;

    /**
     * Whether the center footer infobits should render
     * @type {Boolean}
     */
    var shouldRenderCenter = center && center.length > 0;

    /**
     * Whether the right footer infobits should render
     * @type {Boolean}
     */
    var shouldRenderRight = right && right.length > 0 && (!isLive || altRight.length === 0) && (!isUpcoming || altRight.length === 0);

    /**
     * Whether an alternate right footer infobits should render for upcoming
     * @type {Boolean}
     */
    var shouldRenderAltRightUpcoming = altRight && altRight.length > 0 && isUpcoming;

    /**
     * Whether an alternate right footer infobets should render for live events
     */
    var shouldRenderAltRightLive = altRight && altRight.length > 0 && isLive;

    /**
     * This is some franken logic to make one alt cta space work for two different card states
     */
    var altRightUpcoming = []; // isUpcoming
    var altRightLive = []; // isLive
    /* istanbul ignore if */
    if (altRight && altRight.length > 0 && right && right.length > 0) {
        var upcoming = {
            href: right[0].href,
            text: altRight[0].text,
            type: right[0].type
        };
        var live = {
            href: altRight[0].href,
            text: right[0].text,
            type: altRight[0].type
        };
        altRightUpcoming.push(upcoming);
        altRightLive.push(live);
    }

    return _react2.default.createElement(
        'div',
        {
            className: footerClassName,
            'data-testid': 'consonant-Card-footer' },
        _react2.default.createElement(
            'div',
            {
                className: rowClassName,
                'data-cells': dataCells },
            shouldRenderLeft && _react2.default.createElement(
                'div',
                {
                    className: 'consonant-CardFooter-cell consonant-CardFooter-cell--left' },
                _react2.default.createElement(_Group2.default, { renderList: left, onFocus: onFocus })
            ),
            shouldRenderCenter && _react2.default.createElement(
                'div',
                {
                    className: 'consonant-CardFooter-cell consonant-CardFooter-cell--center' },
                _react2.default.createElement(_Group2.default, { renderList: center, tabIndex: tabIndex, onFocus: onFocus })
            ),
            shouldRenderRight && _react2.default.createElement(
                'div',
                {
                    className: 'consonant-CardFooter-cell consonant-CardFooter-cell--right' },
                _react2.default.createElement(_Group2.default, {
                    renderList: right,
                    onFocus: onFocus,
                    title: title,
                    tabIndex: tabIndex,
                    renderOverlay: renderOverlay
                })
            ),
            shouldRenderAltRightUpcoming && _react2.default.createElement(
                'div',
                {
                    className: 'consonant-CardFooter-cell consonant-CardFooter-cell--right' },
                _react2.default.createElement(_Group2.default, { renderList: altRightUpcoming, onFocus: onFocus, title: title })
            ),
            shouldRenderAltRightLive && _react2.default.createElement(
                'div',
                {
                    className: 'consonant-CardFooter-cell consonant-CardFooter-cell--right' },
                _react2.default.createElement(_Group2.default, { renderList: altRightLive, onFocus: onFocus, title: title })
            )
        )
    );
};

CardFooter.defaultProps = defaultProps;

exports.default = CardFooter;

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _cuid = __webpack_require__(66);

var _cuid2 = _interopRequireDefault(_cuid);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _Icon = __webpack_require__(245);

var _Icon2 = _interopRequireDefault(_Icon);

var _Text = __webpack_require__(246);

var _Text2 = _interopRequireDefault(_Text);

var _Price = __webpack_require__(247);

var _Price2 = _interopRequireDefault(_Price);

var _Button = __webpack_require__(248);

var _Button2 = _interopRequireDefault(_Button);

var _Link = __webpack_require__(263);

var _Link2 = _interopRequireDefault(_Link);

var _Rating = __webpack_require__(264);

var _Rating2 = _interopRequireDefault(_Rating);

var _Progress = __webpack_require__(265);

var _Progress2 = _interopRequireDefault(_Progress);

var _IconWithText = __webpack_require__(266);

var _IconWithText2 = _interopRequireDefault(_IconWithText);

var _LinkWithIcon = __webpack_require__(267);

var _LinkWithIcon2 = _interopRequireDefault(_LinkWithIcon);

var _DateInterval = __webpack_require__(268);

var _DateInterval2 = _interopRequireDefault(_DateInterval);

var _Bookmark = __webpack_require__(269);

var _Bookmark2 = _interopRequireDefault(_Bookmark);

var _Gated = __webpack_require__(271);

var _Gated2 = _interopRequireDefault(_Gated);

var _constants = __webpack_require__(14);

var _general = __webpack_require__(6);

var _card = __webpack_require__(37);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    renderList: [],
    onFocus: function onFocus() {},
    title: '',
    tabIndex: 0,
    renderOverlay: false
};

/**
 * Group of Infobits (shown in 3:2 Card Footer)
 *
 * @component
 * @example
 * const props= {
    renderList: Array,
 * }
 * return (
 *   <Group {...props}/>
 * )
 */
var Group = function Group(props) {
    var renderList = props.renderList,
        onFocus = props.onFocus,
        title = props.title,
        tabIndex = props.tabIndex,
        renderOverlay = props.renderOverlay;


    return _react2.default.createElement(
        _react.Fragment,
        null,
        renderList.map(function (infobit) {
            switch (infobit.type) {
                case _constants.INFOBIT_TYPE.PRICE:
                    return _react2.default.createElement(_Price2.default, _extends({}, infobit, {
                        key: (0, _cuid2.default)() }));

                case _constants.INFOBIT_TYPE.BUTTON:
                    return _react2.default.createElement(_Button2.default, _extends({}, infobit, {
                        key: (0, _cuid2.default)(),
                        onFocus: onFocus,
                        title: title,
                        tabIndex: tabIndex,
                        renderOverlay: renderOverlay }));

                case _constants.INFOBIT_TYPE.ICON_TEXT:
                    return _react2.default.createElement(_IconWithText2.default, _extends({}, infobit, {
                        tabIndex: tabIndex,
                        key: (0, _cuid2.default)() }));

                case _constants.INFOBIT_TYPE.LINK_ICON:
                    return _react2.default.createElement(_LinkWithIcon2.default, _extends({}, infobit, {
                        tabIndex: tabIndex,
                        key: (0, _cuid2.default)() }));

                case _constants.INFOBIT_TYPE.TEXT:
                    return _react2.default.createElement(_Text2.default, _extends({}, infobit, {
                        key: (0, _cuid2.default)() }));

                case _constants.INFOBIT_TYPE.ICON:
                    return _react2.default.createElement(_Icon2.default, _extends({}, infobit, {
                        key: (0, _cuid2.default)() }));

                case _constants.INFOBIT_TYPE.LINK:
                    return _react2.default.createElement(_Link2.default, _extends({}, infobit, {
                        tabIndex: tabIndex,
                        key: (0, _cuid2.default)(),
                        title: title }));

                case _constants.INFOBIT_TYPE.PROGRESS:
                    return _react2.default.createElement(_Progress2.default, _extends({}, infobit, {
                        key: (0, _cuid2.default)() }));

                case _constants.INFOBIT_TYPE.RATING:
                    return _react2.default.createElement(_Rating2.default, {
                        key: (0, _cuid2.default)(),
                        label: infobit.label,
                        totalStars: (0, _general.parseToPrimitive)(infobit.totalStars),
                        starsFilled: (0, _general.parseToPrimitive)(infobit.starsFilled) });

                case _constants.INFOBIT_TYPE.BOOKMARK:
                    return _react2.default.createElement(_Bookmark2.default, _extends({}, infobit, {
                        key: (0, _cuid2.default)() }));

                case _constants.INFOBIT_TYPE.DATE:
                    return _react2.default.createElement(_DateInterval2.default, _extends({}, infobit, {
                        key: (0, _cuid2.default)() }));

                case _constants.INFOBIT_TYPE.GATED:
                    return _react2.default.createElement(_Gated2.default, _extends({}, infobit, {
                        key: (0, _cuid2.default)() }));

                default:
                    return null;
            }
        })
    );
};

Group.defaultProps = defaultProps;

exports.default = Group;

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    alt: ''
};

/**
 * Icon With Text Infobit (shown in 3:2 Card Footer)
 *
 * @component
 * @example
 * const props= {
    src: String,
    srcAltText: String,
    text: String,
 * }
 * return (
 *   <IconWithText {...props}/>
 * )
 */
var Icon = function Icon(_ref) {
    var src = _ref.src,
        alt = _ref.alt;
    return _react2.default.createElement('img', {
        className: 'consonant-IconInfobit',
        width: '28',
        src: src,
        alt: alt,
        loading: 'lazy' });
};

Icon.defaultProps = defaultProps;

exports.default = Icon;

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Text infobit (shown in 3:2 Card Footer)
 *
 * @component
 * @example
 * const props= {
    text: String,
 * }
 * return (
 *   <Text {...props}/>
 * )
 */
var Text = function Text(_ref) {
  var text = _ref.text;
  return _react2.default.createElement(
    'p',
    { className: 'consonant-TextInfobit' },
    text
  );
};

exports.default = Text;

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    term: ''
};

/**
 * Price Infobit (shown in 3:2 Card Footer)
 *
 * @component
 * @example
 * const props= {
    price: String,
    term: String,
 * }
 * return (
 *   <Price {...props}/>
 * )
 */
var Price = function Price(_ref) {
    var price = _ref.price,
        term = _ref.term;
    return _react2.default.createElement(
        'span',
        {
            className: 'consonant-PriceInfobit' },
        _react2.default.createElement(
            'strong',
            {
                className: 'consonant-PriceInfobit-price' },
            price
        ),
        _react2.default.createElement(
            'span',
            {
                className: 'consonant-PriceInfobit-term' },
            term
        )
    );
};

Price.defaultProps = defaultProps;

exports.default = Price;

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _hooks = __webpack_require__(5);

var _general = __webpack_require__(6);

var _videoButton = __webpack_require__(112);

var _videoButton2 = _interopRequireDefault(_videoButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BUTTON_STYLE = {
    PRIMARY: 'primary',
    SECONDARY: 'secondary',
    CTA: 'call-to-action',
    DARK: 'dark'
};

var defaultProps = {
    href: '',
    text: '',
    iconSrc: '',
    iconAlt: '',
    iconPos: '',
    isCta: false,
    style: BUTTON_STYLE.CTA,
    onFocus: function onFocus() {},
    title: '',
    tabIndex: 0,
    renderOverlay: false
};

/**
 * Button Infobit (shown in 3:2 Card Footer)
 *
 * @component
 * @example
 * const props= {
    style: String,
    href: String,
    text: String,
 * }
 * return (
 *   <Button {...props}/>
 * )
 */
var Button = function Button(_ref) {
    var style = _ref.style,
        text = _ref.text,
        href = _ref.href,
        iconSrc = _ref.iconSrc,
        iconAlt = _ref.iconAlt,
        iconPos = _ref.iconPos,
        isCta = _ref.isCta,
        onFocus = _ref.onFocus,
        title = _ref.title,
        tabIndex = _ref.tabIndex,
        renderOverlay = _ref.renderOverlay;

    /**
     **** Authored Configs ****
     */
    var getConfig = (0, _hooks.useConfig)();
    var cardButtonStyle = getConfig('collection', 'button.style');
    var additionalParams = getConfig('collection', 'additionalRequestParams');

    var ctaAction = '';

    /**
     * Whether we should render a dark button
     */
    var isDarkButton = cardButtonStyle === BUTTON_STYLE.DARK;

    /**
     * Whether we should render cta button or not
     * cardButtonStyle has higher priority than style
     * @type {Boolean}
     */
    var isCtaButton = !isDarkButton && style !== BUTTON_STYLE.PRIMARY && cardButtonStyle !== BUTTON_STYLE.PRIMARY && cardButtonStyle !== BUTTON_STYLE.SECONDARY;

    if (isCta) {
        ctaAction = getConfig('collection', 'ctaAction');
    }

    /**
     * Class name for button:
     * Whether we should render cta button or not
     * @type {String}
     */
    var buttonClass = (0, _classnames2.default)({
        'consonant-BtnInfobit': true,
        'consonant-BtnInfobit--cta': isCtaButton,
        'consonant-BtnInfobit--dark': isDarkButton
    });

    /**
     * Class name for button icon:
     * Whether icon should be placed before or after the text
     * @type {String}
     */
    var iconClass = (0, _classnames2.default)({
        'consonant-BtnInfobit-ico': true,
        'consonant-BtnInfobit-ico--last': iconPos.toLowerCase() === 'aftertext'
    });

    var target = (0, _general.getLinkTarget)(href, ctaAction);
    var addParams = new URLSearchParams(additionalParams);
    var buttonLink = additionalParams && addParams.keys().next().value ? href + '?' + addParams.toString() : href;
    var ariaLabel = text + ' ' + title;

    if (buttonLink.includes('#_modal')) {
        return _react2.default.createElement(_videoButton2.default, {
            title: title,
            name: text,
            videoURL: buttonLink,
            className: 'caas-modal-cta ' + buttonClass
        });
    }

    return _react2.default.createElement(
        'a',
        {
            className: buttonClass,
            'daa-ll': text,
            'data-testid': 'consonant-BtnInfobit',
            tabIndex: renderOverlay ? '-1' : tabIndex,
            rel: 'noopener noreferrer',
            target: target,
            href: buttonLink,
            onFocus: onFocus,
            'aria-label': ariaLabel },
        iconSrc && _react2.default.createElement('img', {
            'data-testid': 'consonant-BtnInfobit-ico',
            src: iconSrc,
            width: '20',
            height: '20',
            className: iconClass,
            alt: iconAlt,
            loading: 'lazy' }),
        _react2.default.createElement(
            'span',
            null,
            text
        )
    );
};

Button.defaultProps = defaultProps;

exports.default = Button;

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable jsx-a11y/anchor-is-valid  */
var VideoModal = function VideoModal(_ref) {
    var name = _ref.name,
        videoURL = _ref.videoURL,
        innerRef = _ref.innerRef,
        videoPolicy = _ref.videoPolicy;
    return _react2.default.createElement(
        'div',
        { className: 'modal', id: 'dexter-Modal_' + Math.floor(Math.random() * 10e12) },
        _react2.default.createElement(
            'div',
            {
                className: 'dexter-Modal_overlay mobile-place-center mobile-place-middle closePlacement-outsideTopRight is-Open tablet-inherit desktop-place-center desktop-inherit',
                'data-conf-display': 'onPageLoad',
                'data-page-name': 'dexter-modal-video',
                'aria-modal': 'true',
                'aria-label': 'Modal Video',
                role: 'dialog',
                style: { backgroundColor: 'rgba(0, 0, 0, 0.9)' } },
            _react2.default.createElement(
                'div',
                { ref: innerRef, className: 'dexter-Modal mobile-width-100 mobile-height-auto tablet-width-640 desktop-width-1024 is-Open', id: 'video-' + name },
                _react2.default.createElement(
                    'h6',
                    { id: 'video-' + name + '-modalTitle', className: 'hide-all' },
                    'Video Modal'
                ),
                _react2.default.createElement(
                    'p',
                    { id: 'video-' + name + '-modalDescription', className: 'hide-all' },
                    'Video Modal'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'video aem-Grid aem-Grid--12 aem-Grid--default--12' },
                    _react2.default.createElement(
                        'div',
                        { className: 'videoContainer', 'data-in-modal': 'true' },
                        _react2.default.createElement('iframe', {
                            title: 'Featured Video',
                            'data-video-src': videoURL,
                            allow: videoPolicy,
                            frameBorder: '0',
                            webkitallowfullscreen: 'true',
                            mozallowfullscreen: 'true',
                            allowFullScreen: '',
                            src: videoURL,
                            tabIndex: '0' })
                    )
                ),
                _react2.default.createElement(
                    'a',
                    { href: '#', className: 'dexter-CloseButton', 'aria-label': 'Close', role: 'button', tabIndex: '0' },
                    _react2.default.createElement('i', { className: 'dexter-CloseButton_icon spectrum-close-circle-dark' })
                )
            )
        )
    );
};

exports.default = VideoModal;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable */


var _environment = __webpack_require__(67);

var _video = __webpack_require__(251);

var _video2 = _interopRequireDefault(_video);

var _iframe = __webpack_require__(252);

var _iframe2 = _interopRequireDefault(_iframe);

var _backgroundVideo = __webpack_require__(253);

var _backgroundVideo2 = _interopRequireDefault(_backgroundVideo);

var _SendLink = __webpack_require__(258);

var _SendLink2 = _interopRequireDefault(_SendLink);

var _modalFocus = __webpack_require__(259);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BG_COLOR_STYLE = 'background-color';
var DATA_REMEMBER_CLOSE_ACTION = 'data-remember-close-action';
var DISPLAY_TYPE_HASH_CHANGE = 'onHashChange';
var DISPLAY_TYPE_PAGE_LOAD = 'onPageLoad';
var IS_OPEN = 'is-Open';
var LOCALE_MODAL_ID = 'localeModal';
var STICKY_BOTTOM_PRESET = 'stickybottom';

var hasInlineBgColorStyle = function hasInlineBgColorStyle(el) {
    return !!el.style.getPropertyValue(BG_COLOR_STYLE);
};
var urlNoHash = function urlNoHash() {
    return window.location.href.replace(window.location.hash, '');
};

/**
 * Convert the given element to a Modal.
 *
 * @param {Element} element will be converted
 * @param {object} [callbacks={}] An optional object that contains callback functions for
 *  some modal behavior.  The supported callbacks are:
 *   {
 *      close: Called when the modal is closed by any means
 *      buttonClose: Called when the modal close (X) button is clicked
 *      escClose: Called when the esc button is used to close the modal
 *      onOpen: Called when the modal is opened
 *      overlayClose: Called when the modal is closed by clicking on the overlay
 *   }
 * @param {boolean} resetHashOnClose Reset URL hash, false to skip.
 * (e.g: when closing locale modal).
 */

var Modal = function () {
    function Modal(element) {
        var callbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, Modal);

        this.callbacks = callbacks;
        this.element = element;
        if (this.isHashChangeModal() || hasInlineBgColorStyle(element.parentElement)) {
            element.parentElement.enableFocusTrap = true;
            this.getOverlay();
            this.setupOverlayClick();
        }
        this.isLocaleModal = this.element.id === LOCALE_MODAL_ID;
        // Always get a close button
        this.setupCloseClick();
        if (this.isPageLoadModal()) {
            this.pageLoadDisplayed = false;
        }
        if (!(0, _environment.isAuthor)() && this.isStickyBottom()) {
            this.setupFooterObserver();
        }
    }

    _createClass(Modal, [{
        key: 'isCloseEnabledRepeatUser',
        value: function isCloseEnabledRepeatUser() {
            var repeatUser = window.localStorage.getItem(this.getUserStorageValue());
            return this.closeButton.hasAttribute(DATA_REMEMBER_CLOSE_ACTION) && JSON.parse(repeatUser);
        }
    }, {
        key: 'isPageLoadModal',
        value: function isPageLoadModal() {
            return this.getDisplayType() === DISPLAY_TYPE_PAGE_LOAD;
        }
    }, {
        key: 'isHashChangeModal',
        value: function isHashChangeModal() {
            return this.getDisplayType() === DISPLAY_TYPE_HASH_CHANGE;
        }
    }, {
        key: 'isStickyBottom',
        value: function isStickyBottom() {
            if (this.getPresetValue()) {
                return this.getPresetValue().toLowerCase().includes(STICKY_BOTTOM_PRESET);
            }
            return false;
        }
    }, {
        key: 'getDisplayType',
        value: function getDisplayType() {
            if (this.element.parentElement) {
                return this.element.parentElement.dataset.confDisplay;
            }
            return {};
        }
    }, {
        key: 'getId',
        value: function getId() {
            return this.element.id;
        }
    }, {
        key: 'getDelay',
        value: function getDelay() {
            var delay = this.element.parentElement.dataset.confDelay;
            return parseInt(delay, 10);
        }
    }, {
        key: 'getPageName',
        value: function getPageName() {
            return this.element.parentElement.dataset.pageName;
        }
    }, {
        key: 'getPresetValue',
        value: function getPresetValue() {
            return this.element.parentElement.dataset.confPreset;
        }
    }, {
        key: 'getUserStorageValue',
        value: function getUserStorageValue() {
            // creating the localstorage key in the format : modalId_pageName,
            // unless a custom name is set by authors
            var pageName = this.getPageName();
            var customStorageName = this.closeButton.dataset.rememberCloseName;
            return customStorageName || this.getId().concat('_', pageName);
        }
    }, {
        key: 'setupCloseClick',
        value: function setupCloseClick() {
            var _this = this;

            this.closeButton = this.element.querySelector('.dexter-CloseButton');
            var closeButtonHandler = function closeButtonHandler(event) {
                event.stopPropagation();
                event.preventDefault();
                if (_this.closeButton.hasAttribute(DATA_REMEMBER_CLOSE_ACTION)) {
                    // setting the userVisited to true
                    window.localStorage.setItem(_this.getUserStorageValue(), true);
                }
                if (typeof _this.callbacks.buttonClose === 'function') _this.callbacks.buttonClose();
                _this.close();
            };
            this.closeButton.addEventListener('click', closeButtonHandler);

            // set up to allow the space key to activate the modal close button
            var onKeyDown = function onKeyDown(event) {
                var isSpace = false;
                if ('key' in event) {
                    isSpace = event.code === 'Space';
                } else {
                    isSpace = event.keyCode === 32;
                }
                if (isSpace) {
                    closeButtonHandler(event);
                }
            };
            this.closeButton.addEventListener('keydown', onKeyDown);
        }
    }, {
        key: 'sendCloseAnalytics',
        value: function sendCloseAnalytics() {
            /* eslint-disable no-underscore-dangle */
            if (window.digitalData && window._satellite) {
                window.digitalData._set('primaryEvent.eventInfo.eventName', window.digitalData._get('digitalData.page.pageInfo.pageName').concat(':tryFreeCloseClick', this.getId()));
                window._satellite.track('event', {
                    digitalData: window.digitalData._snapshot()
                });
            }
            /* eslint-enable no-underscore-dangle */
        }
    }, {
        key: 'getOverlay',
        value: function getOverlay() {
            this.modalOverlay = this.element.parentElement;
        }
    }, {
        key: 'getIframes',
        value: function getIframes() {
            if (!this.iframes || this.iframes.length === 0) {
                var iframeElements = this.element.querySelectorAll('.frame-container iframe');
                this.iframes = Array.from(iframeElements, function (element) {
                    return new _iframe2.default(element);
                });
            }
        }
    }, {
        key: 'getSendLink',
        value: function getSendLink() {
            if (!this.sendLink || this.sendLink.length === 0) {
                var sendLinkElement = this.element.querySelector('.sendLink');
                if (sendLinkElement) {
                    this.sendLink = new _SendLink2.default(sendLinkElement);
                }
            }
        }
    }, {
        key: 'setupFooterObserver',
        value: function setupFooterObserver() {
            var _this2 = this;

            var footer = document.querySelector('.globalNavFooter');
            if (!footer) {
                return;
            }
            this.isIntersecting = false;
            var rootParent = this.element.closest('.modal');
            var onIntersect = function onIntersect() {
                var anchor = document.body.clientHeight - window.innerHeight - footer.clientHeight;
                rootParent.classList.add('stuck-above-footer');
                _this2.element.parentElement.style.top = anchor + 'px';
                if (anchor < 0) {
                    _this2.element.parentElement.style.bottom = Math.abs(anchor) + 'px';
                }
            };
            var intersectHandler = function intersectHandler(_ref) {
                var _ref2 = _slicedToArray(_ref, 1),
                    entry = _ref2[0];

                if (entry.isIntersecting) {
                    onIntersect();
                    _this2.isIntersecting = true;
                } else {
                    rootParent.classList.remove('stuck-above-footer');
                    _this2.element.parentElement.style.top = '';
                    _this2.element.parentElement.style.bottom = '';
                    _this2.isIntersecting = false;
                }
            };
            var observer = new IntersectionObserver(intersectHandler);
            this.callbacks.onOpen = function () {
                footer.style.marginTop = _this2.element.clientHeight + 'px';
                if (_this2.isIntersecting) onIntersect();
            };
            window.addEventListener('resize', function () {
                if (_this2.isIntersecting) onIntersect();
            });
            document.querySelector('#languageNavigation').addEventListener('modalClose', function () {
                if (_this2.isIntersecting) requestAnimationFrame(onIntersect);
            });
            observer.observe(footer);
        }
    }, {
        key: 'setupOverlayClick',
        value: function setupOverlayClick() {
            var _this3 = this;

            if (this.isPageLoadModal()) {
                this.modalOverlay.style.pointerEvents = 'auto';
            }
            var overlayHandler = function overlayHandler(event) {
                if (event.target.classList.contains('dexter-Modal_overlay')) {
                    event.stopPropagation();
                    event.preventDefault();
                    if (typeof _this3.callbacks.overlayClose === 'function') _this3.callbacks.overlayClose();
                    _this3.close();
                }
            };
            this.modalOverlay.addEventListener('click', overlayHandler);
        }
    }, {
        key: 'open',
        value: function open(previousHashValue, focusState, isDeepLinked) {
            var _this4 = this;

            var openEvent = new Event('modalOpen');
            this.element.dispatchEvent(openEvent);

            this.openHistoryLength = window.history.length;

            this.isOpen = true;
            this.isDeepLinked = !!isDeepLinked;
            if (focusState) {
                this.focusState = focusState;
                this.focusState.modalOpen = true;
            }
            // saving the focused element before open
            this.lastScrollPosition = window.scrollY;
            this.previousHashValue = previousHashValue && previousHashValue.replace('#', '');
            if (this.modalOverlay) {
                this.modalOverlay.classList.add(IS_OPEN);
            }
            this.element.parentElement.classList.add(IS_OPEN);
            this.element.classList.add(IS_OPEN);
            this.getVideos();
            this.videos.forEach(function (video) {
                video.setSrc();
            });
            this.getIframes();
            var focusIntoIframe = function focusIntoIframe() {
                var iframe = _this4.element.querySelector('iframe');
                if (iframe) {
                    iframe.focus();
                }
            };
            this.iframes.forEach(function (iframe) {
                iframe.element.onload = focusIntoIframe;
                iframe.setSrc();
            });
            this.getSendLink();
            if (this.sendLink) {
                this.sendLink.openView();
            }
            (0, _backgroundVideo2.default)(this.element, false);
            this.closeEscapeListener = this.setupCloseEscape();

            if ((0, _modalFocus.getActiveModalEl)() === this.element.parentElement) {
                // if model is open behind another modal, skip focus change.
                (0, _modalFocus.focusActiveModal)();
            }

            if (typeof this.callbacks.onOpen === 'function') this.callbacks.onOpen();
        }
    }, {
        key: 'getVideos',
        value: function getVideos() {
            if (!this.videos || this.videos.length === 0) {
                var videoElements = this.element.querySelectorAll('.videoContainer iframe');
                this.videos = Array.from(videoElements, function (element) {
                    return new _video2.default(element);
                });
            }
        }

        /**
         * Close the modal
         * @param {Object} options - Optional options
         * @param {string} options.modifyHistory - Defaults to `true`
         *     Note that this will only apply if this is not a page load modal
         */

    }, {
        key: 'close',
        value: function close() {
            var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                _ref3$modifyHistory = _ref3.modifyHistory,
                modifyHistory = _ref3$modifyHistory === undefined ? true : _ref3$modifyHistory;

            var closeEvent = new Event('modalClose');
            this.element.dispatchEvent(closeEvent);

            if (this.focusState) {
                this.focusState.modalOpen = false;
            }
            if (this.closeEscapeListener) {
                this.closeEscapeListener();
                delete this.closeEscapeListener;
            }

            if (this.videos && this.videos.length) {
                this.videos.forEach(function (video) {
                    video.removeSrc();
                });
            }
            if (this.modalOverlay) {
                this.modalOverlay.classList.remove(IS_OPEN);
            }
            if (this.iframes && this.iframes.length) {
                this.iframes.forEach(function (iframe) {
                    iframe.removeSrc();
                });
            }
            this.element.classList.remove(IS_OPEN);

            this.resetFocus();
            if (typeof this.callbacks.close === 'function') this.callbacks.close();
            this.isOpen = false;

            if (this.isPageLoadModal()) {
                // Page load modals do not have any href/history modifications done
                (0, _modalFocus.focusActiveModal)();
                return;
            }
            if (!this.isLocaleModal) {
                if (this.isDeepLinked) {
                    // Deeplink modals are kept in history
                    window.location.hash = '';
                    (0, _modalFocus.focusActiveModal)(); // if there is any other open modal.
                    return;
                }

                var currentHash = window.location.hash;

                if (this.previousHashValue && this.previousHashValue !== this.getId()) {
                    window.history.replaceState(null, null, urlNoHash() + '#' + this.previousHashValue);
                } else {
                    window.history.replaceState(null, null, urlNoHash());
                }
                if (modifyHistory && currentHash !== this.deepLinkedModalId) {
                    // This accounts for Safari where opening iFrames adds history entries
                    // for every iFrame opened.
                    var goBackCount = window.history.length - this.openHistoryLength + 1;
                    window.history.go(-goBackCount);
                }
            }
            (0, _modalFocus.focusActiveModal)(); // if there is any other open modal.
            // analytics for modal close button
            this.sendCloseAnalytics();
        }
    }, {
        key: 'resetFocus',
        value: function resetFocus() {
            try {
                window.scrollTo(0, this.lastScrollPosition);
                this.focusState.lastFocusedElement.focus();
            } catch (e) {
                // prevent console error
            }
        }
    }, {
        key: 'setupCloseEscape',
        value: function setupCloseEscape() {
            var _this5 = this;

            var onKeyDown = function onKeyDown(event) {
                var isEscape = false;
                if ('key' in event) {
                    isEscape = event.key === 'Escape' || event.key === 'Esc';
                } else {
                    isEscape = event.keyCode === 27;
                }
                if (isEscape) {
                    if (typeof _this5.callbacks.escClose === 'function') _this5.callbacks.escClose();
                    document.removeEventListener('keydown', onKeyDown);
                    _this5.close();
                }
            };
            document.addEventListener('keydown', onKeyDown);
            return function () {
                return document.removeEventListener('keydown', onKeyDown);
            };
        }
    }]);

    return Modal;
}();

exports.default = Modal;

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Video = function () {
    function Video(element) {
        _classCallCheck(this, Video);

        this.element = element;
    }

    _createClass(Video, [{
        key: 'setSrc',
        value: function setSrc() {
            this.element.src = this.element.dataset.videoSrc;
        }
    }, {
        key: 'removeSrc',
        value: function removeSrc() {
            // Get parent element
            var parent = this.element.parentElement;
            // Temporarily store current element
            var tempElement = this.element;
            // Remove current element to prevent history change
            parent.removeChild(this.element);
            // Reset the source of the temp element
            tempElement.src = '';
            // Reset this.element
            this.element = tempElement;
            // Add it back to the DOM
            parent.appendChild(this.element);
        }
    }]);

    return Video;
}();

exports.default = Video;

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Iframe = function () {
    function Iframe(element) {
        _classCallCheck(this, Iframe);

        this.element = element;
    }

    _createClass(Iframe, [{
        key: 'setSrc',
        value: function setSrc() {
            this.element.src = this.element.dataset.src;
        }
    }, {
        key: 'removeSrc',
        value: function removeSrc() {
            this.element.onload = undefined;
            // Get parent element
            var parent = this.element.parentElement;
            // Temporarily store current element
            var tempElement = this.element;
            // Remove current element to prevent history change
            parent.removeChild(this.element);
            // Reset the source of the temp element
            tempElement.src = '';
            // Reset this.element
            this.element = tempElement;
            // Add it back to the DOM
            parent.appendChild(this.element);
        }
    }]);

    return Iframe;
}();

exports.default = Iframe;

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _environment = __webpack_require__(67);

var _debug = __webpack_require__(254);

var _debug2 = _interopRequireDefault(_debug);

var _isVisible = __webpack_require__(255);

var _isVisible2 = _interopRequireDefault(_isVisible);

var _breakpoints = __webpack_require__(256);

var _breakpoints2 = _interopRequireDefault(_breakpoints);

var _throttle = __webpack_require__(257);

var _throttle2 = _interopRequireDefault(_throttle);

var _lana = __webpack_require__(48);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var THROTTLE_TIME = 300;
var VIDEO_VIEW_SELECTOR = '.video-Wrapper.has-playOnView video';
var VIDEO_HOVER_SELECTOR = '.video-Wrapper.has-playOnHover video';

var debug = new _debug2.default({ debug: false, control: 'BackgroundVideo' });

/**
 * Determine if HTMLMediaElement is playing.
 * @param {HTMLMediaElement} video
 */
var isPlaying = function isPlaying(video) {
    return !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2);
};

var getParentContainer = function getParentContainer(video) {
    return video.closest('.dexter-FlexContainer') || video.closest('.dexter-Position');
};

var playVideo = function playVideo(video) {
    var promise = video.play();
    return promise && promise.then(function () {
        debug.log('Video starts playing successfully');
    }).catch(function () {
        (0, _lana.logLana)({ message: 'error while playing a video', tags: 'backgroundVideo' });
        debug.log('Error while playing video');
    });
};

/**
 * Set the state of the video to play or pause.
 * @param {HTMLMediaElement} video
 */
var setViewVideoState = function setViewVideoState(video) {
    if ((0, _isVisible2.default)(video) && !isPlaying(video) && !video.ended) {
        if (video.getAttribute('preload') === 'none') {
            video.setAttribute('preload', 'metadata');
        }
        if (!video.classList.contains('play-Onclick')) {
            playVideo(video);
        }
    } else if (!(0, _isVisible2.default)(video) && isPlaying(video)) {
        video.pause();
    }
};

var setHoverVideoState = function setHoverVideoState(video) {
    var parent = getParentContainer(video);

    parent.addEventListener('mouseover', function () {
        if ((0, _isVisible2.default)(video) && !isPlaying(video) && !video.ended) {
            playVideo(video);
        }
    });
    parent.addEventListener('mouseout', function () {
        if (isPlaying(video)) {
            video.pause();
        }
    });
};

/**
 * If we have videos, loop through them and set their state.
 * @param {NodeList} videos
 */
var setVideoStates = function setVideoStates(opts) {
    var videos = opts.videos,
        callback = opts.callback;

    if (videos) {
        videos.forEach(function (video) {
            callback(video);
        });
    }
};

/**
 * @method mediaWatcher
 * @desc MediaMatch handler will be fired if mediaMatch changes
 *
 * @param e {Object}
 * @param opts {Object}
 */
var mediaWatcher = function mediaWatcher(e, opts) {
    if (e.matches) {
        setVideoStates(opts);
    }
};

/**
 * @method enableResponsiveEvent
 * @desc Enables Responsive behaviour for background video
 *
 * @param opts {Object}
 */
var enableResponsiveEvent = function enableResponsiveEvent(opts) {
    Object.keys(_breakpoints2.default.mediaExpression).forEach(function (surface) {
        var surfacePoint = window.matchMedia(_breakpoints2.default.mediaExpression[surface]);
        surfacePoint.addListener(function (e) {
            return mediaWatcher(e, opts);
        });
    });
};

var initViewVideos = function initViewVideos(parentElement, setScroll) {
    var selector = parentElement instanceof HTMLDocument ? '.root ' + VIDEO_VIEW_SELECTOR : VIDEO_VIEW_SELECTOR;
    var videos = parentElement.querySelectorAll(selector);
    if (videos.length > 0) {
        setVideoStates({ videos: videos, callback: setViewVideoState });
        enableResponsiveEvent({ videos: videos, callback: setViewVideoState });
        if (setScroll) {
            window.addEventListener('scroll', (0, _throttle2.default)(THROTTLE_TIME, setVideoStates, { videos: videos, callback: setViewVideoState }));
        }
    }
};

var initHoverVideos = function initHoverVideos(parentElement) {
    var videos = parentElement.querySelectorAll(VIDEO_HOVER_SELECTOR);
    if (videos.length > 0) {
        setVideoStates({ videos: videos, callback: setHoverVideoState });
    }
};

/**
 * Initialize background videos.
 * @param {HTMLElement} parentElement
 * @param {Boolean} setScroll
 */
var initBackgroundVideos = function initBackgroundVideos() {
    var parentElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;
    var setScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    // Don't play videos in author.
    if (!(0, _environment.isAuthor)()) {
        // If the element is document, search root to prevent modal videos from being iterated on.
        initViewVideos(parentElement, setScroll);
        initHoverVideos(parentElement);
    }
};

exports.default = initBackgroundVideos;

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

__webpack_require__(98);

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}(); /* eslint-disable */
/**
 * @file debug.js
 * @desc Console debugger for optionally logging step by step progress.
 * Can be used with a {debug: true} in the instantiating call, or by URL parameter.
 * Setup: this.debug = new Debug({debug: true, control: 'Price'});
 * @author jisutton
 * @since 03/22/18 16:20
 * @func Debug
 * @constructs Base.Utilities.Debug
 * @exports class Debug
 */

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

var Debug = function () {
    /**
     * @func constructor
     * @desc initializing Debug constructor
     * @memberof Debug
     */
    function Debug() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, Debug);

        this.log = this.logFactory('log');
        this.warn = this.logFactory('warn');
        this.error = this.logFactory('error');
        this.info = this.logFactory('info');
        this.debug = this.logFactory('debug');
        this.table = this.logFactory('table');
        this.trace = this.logFactory('trace');

        var hasControl = options.control !== undefined;
        var decodeSearch = new URLSearchParams(window.location.search);
        this.options = {
            debug: false,
            param: 'dexter:debug',
            urlMode: 'Enabling URL Debug mode for',
            fileMode: 'Enabling File Debug mode for',
            debugAll: 'All',
            concatenator: ':',
            control: hasControl ? options.control : ''
        };
        var findDebugs = decodeSearch.getAll(this.options.param);
        var isDebug = decodeSearch.has(this.options.param);
        var allInUrl = hasControl && isDebug && this.find(findDebugs, this.options.debugAll);
        var inUrl = hasControl && isDebug && this.find(findDebugs, options.control);

        if (this.options.debug) {
            this.info(this.options.fileMode, this.options.debugAll);
        } else if (!options.debug && allInUrl && !inUrl) {
            this.options.debug = true;
            this.info(this.options.urlMode, this.options.debugAll);
        } else if (!options.debug && inUrl && !allInUrl) {
            this.options.debug = true;
            this.info(this.options.urlMode, options.control);
        } else if (options.debug && hasControl) {
            this.options.debug = true;
            this.info(this.options.fileMode, options.control);
        }
    }

    /**
     * @func find
     * @desc Search all cases of dexter:debug in the search params and match them
     * with the control name.
     *
     * @param findDebugs {Array} List of debug params
     * @param param {String} Control name to search for
     * @memberof Debug
     *
     * @returns {Boolean} True or False if it's matched the param
     */

    _createClass(Debug, [{
        key: 'find',
        value: function find(findDebugs, param) {
            return findDebugs.some(function (v) {
                return v === param;
            });
        }

        /**
         * @func logFactory
         * @desc Take a type and console out that type to this.printIt()
         * @param logType {String} log, warn, error, info, table, debug
         * @memberof Debug
         * @returns {Function | Boolean} Returns
         */

    }, {
        key: 'logFactory',
        value: function logFactory(logType) {
            var _this = this;

            return function () {
                for (var _len = arguments.length, log = Array(_len), _key = 0; _key < _len; _key++) {
                    log[_key] = arguments[_key];
                }

                return log.length ? _this.printIt(logType, log) : false;
            };
        }

        /**
         * @func log
         * @desc console.log output
         * @param log {String | Array | Object} Accepts any number of arguments of any type.
         * @memberof Debug
         * @returns {Function} Returns this.logFactory with the type
         */

        /**
         * @func warn
         * @desc console.warn output
         * @param log {String | Array | Object} Accepts any number of arguments of any type.
         * @memberof Debug
         * @returns {Function} Returns this.logFactory with the type
         */

        /**
         * @func error
         * @desc console.error output
         * @param log {String | Array | Object} Accepts any number of arguments of any type.
         * @memberof Debug
         * @returns {Function} Returns this.logFactory with the type
         */

        /**
         * @func info
         * @desc console.info output
         * @param log {String | Array | Object} Accepts any number of arguments of any type.
         * @memberof Debug
         * @returns {Function} Returns this.logFactory with the type
         */

        /**
         * @func debug
         * @desc console.debug output
         * @param log {String | Array | Object} Accepts any number of arguments of any type.
         * @memberof Debug
         * @returns {Function} Returns this.logFactory with the type
         */

        /**
         * @func table
         * @desc console.table output
         * @param log {Array | Object} Accepts any number of arguments of any type.
         * @memberof Debug
         * @returns {Function} Returns this.logFactory with the type
         */

        /**
         * @func trace
         * @desc console.trace output
         * @param log {Array | Object} Accepts any number of arguments of any type.
         * @memberof Debug
         * @returns {Function} Returns this.logFactory with the type
         */

    }, {
        key: 'printIt',

        /**
         * @func debug
         * @desc console.debug output
         * @param type {String} Type of logger to use
         * @param log {String | Array | Object} Accepts any number of arguments of any type.
         * @memberof Debug
         * @returns {Function} Returns this.logFactory with the type
         */
        value: function printIt(type, log) {
            var logger = void 0;
            var output = void 0;

            /* eslint-disable no-console */
            switch (type) {
                case 'error':
                    {
                        logger = console.error;
                        break;
                    }
                case 'warn':
                    {
                        logger = console.warn;
                        break;
                    }
                case 'log':
                    {
                        logger = console.log;
                        break;
                    }
                case 'info':
                    {
                        logger = console.info;
                        break;
                    }
                case 'debug':
                    {
                        logger = console.debug;
                        break;
                    }
                case 'table':
                    {
                        logger = console.table;
                        break;
                    }
                case 'trace':
                    {
                        logger = console.trace;
                        break;
                    }
                default:
                    {
                        logger = console.log;
                        break;
                    }
            }
            /* eslint-enable */

            if (type !== undefined && log !== undefined && this.options.debug) {
                // Place control tag as first array item
                output = [this.options.control + this.options.concatenator];

                log.forEach(function (val) {
                    output.push(val);
                });

                // Flatten the array once for output
                output = [].concat.apply(output);
                // pass the log array as arguments to console.*
                logger.apply(console, output);

                return true;
            }

            return false;
        }
    }]);

    return Debug;
}();

exports.default = Debug;

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/* eslint-disable */
/**
 * Determine if the element is in the viewport.
 * @param {HTMLElement} element
 */
var isVisible = function isVisible(element) {
    var _element$getBoundingC = element.getBoundingClientRect(),
        top = _element$getBoundingC.top,
        bottom = _element$getBoundingC.bottom;

    var vHeight = window.innerHeight || document.documentElement.clientHeight;
    return (top > 0 || bottom > 0) && top < vHeight;
};

exports.default = isVisible;

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * @desc This is an object contains the breakpoints and MatchMedia expressions
 * for all the supported breakpoints.
 */
var unit = 'rem';
var phoneOnly = 37.4375; // 599px
var tabletPortraitUp = phoneOnly + 0.0625; // 600px
var tabletPortraitMax = 56.1875; // 899px
var tabletLandscapeUp = tabletPortraitMax + 0.0625; // 900px
var tabletLandscapeMax = 74.9375; // 1199px
var desktop = tabletLandscapeMax + 0.0625; // 1200px

var mediaExpression = {
    mobile: '(max-width: ' + phoneOnly + unit + ')',
    tabletPortrait: '(min-width: ' + tabletPortraitUp + unit + ') and (max-width: ' + tabletPortraitMax + unit + ')',
    tabletLandscape: '(min-width: ' + tabletLandscapeUp + unit + ') and (max-width: ' + tabletLandscapeMax + unit + ')',
    desktop: '(min-width: ' + desktop + unit + ')'
};

exports.default = {
    phoneOnly: phoneOnly,
    tabletPortraitUp: tabletPortraitUp,
    tabletPortraitMax: tabletPortraitMax,
    tabletLandscapeUp: tabletLandscapeUp,
    tabletLandscapeMax: tabletLandscapeMax,
    desktop: desktop,
    mediaExpression: mediaExpression
};

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * @file thorttle.js
 * @desc Throttle / Debounce hybrid utilitly method
 * @author augur
 * @since 09/15/17 16:20
 *
 * @exports throttle
 */

/**
 * @func thottle
 * @desc Based on Timeout MS slows occurence of method calls
 *
 * @memberof Utilities
 *
 * @param delay {Integer} in MS
 * @param thorttled {Function} callback
 * @param opts {Object} confs for the callback
 * @example
 * window.addEventListener('scroll', this.utils.throttle(250, method, {options}))
 *
 * @returns {Lambda}
 */

var throttle = function throttle() {
    for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
        args[_key - 3] = arguments[_key];
    }

    var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 250;
    var throttled = arguments[1];
    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    var previousCall = null;
    return function () {
        var time = new Date().getTime();
        var timeout = null;
        if (timeout) {
            clearTimeout(timeout);
        }
        if (!previousCall || time - previousCall >= delay) {
            previousCall = time;
            throttled.apply(null, [opts, args]);
            timeout = setTimeout(function () {
                throttled.apply(null, [opts, args]);
                timeout = null;
            }, delay * 2);
        }
    };
};

exports.default = throttle;

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _environment = __webpack_require__(67);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BUTTON_CLASS = '.sl-cta';
var TEXT_FIELD = '.phone_number';
var SENDLINK_WRAPPER = '.sendLink-wrapper';
var DATA_ANDROID_REDIRECT = 'data-android-redirect';
var DATA_IOS_REDIRECT = 'data-ios-redirect';
var DATA_CUSTOM_TEXT = 'data-custom-text';
var PRODUCT_BRANCH_KEY = 'data-branch-key';
var SENDLINK_FORM = '.sendlinkform';
var SENDLINK_SUCCESS = '.success';
var ERROR_TOOLTIP = '.spectrum-Tooltip';
var HIDDEN_CLASS = 'hidden';
var INVALID_CLASS = 'is-invalid';
var TOOLTIP_CLASS = 'is-open';
var CLOSE_CTA = '.close-cta';
var ANALYTICS_ATTB = 'data-product-name';
var EVENT_SEND = 'send';
var EVENT_SUCCESS = 'success';
var EVENT_ERROR = 'error';
var CHANNEL = 'Adobe.com';
var BRANCH_FEATURE = 'Text-Me-The-App';

var SendLink = function () {
    function SendLink(element) {
        _classCallCheck(this, SendLink);

        if (element) {
            this.element = element;
            this.button = this.element.querySelector(BUTTON_CLASS);
            this.phone = this.element.querySelector(TEXT_FIELD);
            this.wrapper = this.element.querySelector(SENDLINK_WRAPPER);
            this.branchKey = this.wrapper.getAttribute(PRODUCT_BRANCH_KEY);
            this.sendLinkForm = this.element.querySelector(SENDLINK_FORM);
            this.sendLinkSuccess = this.element.querySelector(SENDLINK_SUCCESS);
            this.tooltip = this.element.querySelector(ERROR_TOOLTIP);
            this.closeCta = this.element.querySelector(CLOSE_CTA);
            this.linkData = {
                $android_url: this.wrapper.getAttribute(DATA_ANDROID_REDIRECT),
                $custom_sms_text: this.wrapper.getAttribute(DATA_CUSTOM_TEXT) !== null ? this.wrapper.getAttribute(DATA_CUSTOM_TEXT).concat('{{link}}') : '',
                $ios_url: this.wrapper.getAttribute(DATA_IOS_REDIRECT)
            };
            this.analyticsLink = this.wrapper.getAttribute(ANALYTICS_ATTB);
            this.setUpBranchAndBind();
            if ((0, _environment.isEditor)()) {
                this.element.parentElement.classList.add('sendlink-desktop-auto');
            }
        }
    }

    _createClass(SendLink, [{
        key: 'openView',
        value: function openView() {
            // Always show send-a-link form when modal is opened.
            this.sendLinkForm.classList.remove(HIDDEN_CLASS);
            this.sendLinkSuccess.classList.add(HIDDEN_CLASS);
            // Clear form whenever modal is opened.
            this.phone.value = '';
            this.phone.classList.remove(INVALID_CLASS);
            this.tooltip.classList.remove(TOOLTIP_CLASS);
        }
    }, {
        key: 'bindEvents',
        value: function bindEvents() {
            var _this = this;

            this.button.addEventListener('click', function () {
                _this.sendCustomAnalytics(EVENT_SEND);
                _this.sendSMS();
            });
            this.phone.addEventListener('click', function () {
                _this.phone.classList.remove(INVALID_CLASS);
                _this.tooltip.classList.remove(TOOLTIP_CLASS);
            });
            this.closeCta.addEventListener('click', function () {
                var parentModal = _this.wrapper.closest('.dexter-Modal');
                if (parentModal && parentModal.querySelector('.dexter-CloseButton')) {
                    parentModal.querySelector('.dexter-CloseButton').click();
                }
            });
        }
    }, {
        key: 'defBranch',
        value: function defBranch() {
            /*
            snippet picked from: https://help.branch.io/developers-hub/docs/web-basic-integration
            */
            // eslint-disable-next-line
            (function (b, r, a, n, c, h, _, s, d, k) {
                if (!b[n] || !b[n]._q) {
                    for (; s < _.length;) {
                        c(h, _[s++]);
                    }d = r.createElement(a);d.async = 1;d.src = "https://cdn.branch.io/branch-latest.min.js";k = r.getElementsByTagName(a)[0];k.parentNode.insertBefore(d, k);b[n] = h;
                }
            })(window, document, "script", "branch", function (b, r) {
                b[r] = function () {
                    b._q.push([r, arguments]);
                };
            }, { _q: [], _v: 1 }, "addListener applyCode autoAppIndex banner closeBanner closeJourney creditHistory credits data deepview deepviewCta first getCode init link logout redeem referrals removeListener sendSMS setBranchViewData setIdentity track validateCode trackCommerceEvent logEvent disableTracking".split(" "), 0);
        }
    }, {
        key: 'setUpBranchAndBind',
        value: function setUpBranchAndBind() {
            var _this2 = this;

            if (this.branchKey && !window.branchPromise) {
                this.defBranch();
                this.initBranch();
            }
            if (window.branchPromise) {
                window.branchPromise.catch(function () {
                    _this2.initBranch({ doBind: false });
                }).finally(function () {
                    _this2.bindEvents();
                });
            }
        }
    }, {
        key: 'initBranch',
        value: function initBranch() {
            var _this3 = this;

            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                _ref$doBind = _ref.doBind,
                doBind = _ref$doBind === undefined ? true : _ref$doBind;

            var privacyConsent = !!window.adobePrivacy && window.adobePrivacy.hasUserProvidedConsent();
            window.branch.init(this.branchKey, { tracking_disabled: !privacyConsent }, function () {
                if (doBind) {
                    _this3.bindEvents();
                }
            });
        }
    }, {
        key: 'populateMessage',
        value: function populateMessage(err) {
            if (err) {
                this.phone.classList.add(INVALID_CLASS);
                this.tooltip.classList.add(TOOLTIP_CLASS);
                this.sendCustomAnalytics(EVENT_ERROR);
            } else {
                this.sendLinkForm.classList.add(HIDDEN_CLASS);
                this.sendLinkSuccess.classList.remove(HIDDEN_CLASS);
                this.sendCustomAnalytics(EVENT_SUCCESS);
            }
        }
    }, {
        key: 'sendSMS',
        value: function sendSMS() {
            if (typeof window.branch !== 'undefined') {
                window.branch.sendSMS(this.phone.value, { channel: CHANNEL, feature: BRANCH_FEATURE, data: this.linkData }, { make_new_link: false }, this.populateMessage.bind(this));
            } else {
                this.phone.classList.add(INVALID_CLASS);
                this.tooltip.classList.add(TOOLTIP_CLASS);
                this.sendCustomAnalytics(EVENT_ERROR);
            }
        }
    }, {
        key: 'sendCustomAnalytics',
        value: function sendCustomAnalytics(event) {
            /* eslint-disable no-underscore-dangle */
            if (window.digitalData && window._satellite && this.analyticsLink !== null) {
                window.digitalData._set('primaryEvent.eventInfo.eventName', 'branch:' + this.analyticsLink + ':text_app_link:' + event);
                window.digitalData._set('primaryEvent.eventInfo.interaction.click', 'branch:' + this.analyticsLink + ':text_app_link:' + event);
                window._satellite.track('event', {
                    digitalData: window.digitalData._snapshot()
                });
            }
            /* eslint-enable no-underscore-dangle */
        }
    }]);

    return SendLink;
}();

exports.default = SendLink;

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getActiveModalEl = exports.focusActiveModal = undefined;

var _focusTrap = __webpack_require__(260);

var focusTrap = _interopRequireWildcard(_focusTrap);

var _getPropertySafely = __webpack_require__(262);

var _getPropertySafely2 = _interopRequireDefault(_getPropertySafely);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var NO_SCROLL = 'u-noScroll';
var OPEN_MODAL_SELECTOR = '.dexter-Modal_overlay.is-Open';
var CLOSE_BUTTON_CLASS = 'dexter-CloseButton';
var isDesktop = (0, _getPropertySafely2.default)(window, 'dexter.personalization.technology.platform.type') === 'desktop';

var getActiveModalEl = function getActiveModalEl() {
    var topEl = document.elementFromPoint(0, 0);
    if (!topEl) return null;
    return topEl.closest(OPEN_MODAL_SELECTOR);
};

/* focus-trap works best as a singleton. This is to prevent scope collision
 * when the modal is imported from a consumer project.
 */
var getModalFocusTrap = function getModalFocusTrap() {
    window.dexter = window.dexter || {};
    window.dexter.utils = window.dexter.utils || {};
    if (window.dexter.utils.modalFocusTrap) {
        return window.dexter.utils.modalFocusTrap;
    }
    window.dexter.utils.modalFocusTrap = focusTrap.createFocusTrap(OPEN_MODAL_SELECTOR, {
        escapeDeactivates: false,
        clickOutsideDeactivates: false,
        preventScroll: false,
        allowOutsideClick: true,
        onActivate: function onActivate() {
            if (isDesktop) {
                document.body.classList.add(NO_SCROLL);
            }
            var activeModalEl = getActiveModalEl();
            var listener = function listener() {
                activeModalEl.removeEventListener('focusin', listener);
                if (!document.activeElement || !document.activeElement.classList.contains(CLOSE_BUTTON_CLASS)) {
                    return;
                }
                // if the close button has the focus, that means the modal doesn't have any
                // focusable element. Make the container focusable
                // so that it can be scrolled with arrow keys.
                var grid = activeModalEl.querySelector('.dexter-Modal > .aem-Grid');
                if (grid) {
                    grid.tabIndex = '0';
                }
            };
            activeModalEl.addEventListener('focusin', listener);
        },
        onDeactivate: function onDeactivate() {
            if (isDesktop) {
                document.body.classList.remove(NO_SCROLL);
            }
        },
        fallbackFocus: document.body
    });
    return window.dexter.utils.modalFocusTrap;
};

var focusActiveModal = function focusActiveModal() {
    var activeModalEl = getActiveModalEl();
    var modalFocusTrap = getModalFocusTrap();
    modalFocusTrap.deactivate();
    if (!activeModalEl || !activeModalEl.enableFocusTrap) return;
    modalFocusTrap.updateContainerElements(activeModalEl);
    modalFocusTrap.activate();
};

exports.focusActiveModal = focusActiveModal;
exports.getActiveModalEl = getActiveModalEl;

/***/ }),
/* 260 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFocusTrap", function() { return createFocusTrap; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tabbable__ = __webpack_require__(261);
/*!
* focus-trap 7.5.4
* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE
*/


function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}

var activeFocusTraps = {
  activateTrap: function activateTrap(trapStack, trap) {
    if (trapStack.length > 0) {
      var activeTrap = trapStack[trapStack.length - 1];
      if (activeTrap !== trap) {
        activeTrap.pause();
      }
    }
    var trapIndex = trapStack.indexOf(trap);
    if (trapIndex === -1) {
      trapStack.push(trap);
    } else {
      // move this existing trap to the front of the queue
      trapStack.splice(trapIndex, 1);
      trapStack.push(trap);
    }
  },
  deactivateTrap: function deactivateTrap(trapStack, trap) {
    var trapIndex = trapStack.indexOf(trap);
    if (trapIndex !== -1) {
      trapStack.splice(trapIndex, 1);
    }
    if (trapStack.length > 0) {
      trapStack[trapStack.length - 1].unpause();
    }
  }
};
var isSelectableInput = function isSelectableInput(node) {
  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';
};
var isEscapeEvent = function isEscapeEvent(e) {
  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;
};
var isTabEvent = function isTabEvent(e) {
  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;
};

// checks for TAB by default
var isKeyForward = function isKeyForward(e) {
  return isTabEvent(e) && !e.shiftKey;
};

// checks for SHIFT+TAB by default
var isKeyBackward = function isKeyBackward(e) {
  return isTabEvent(e) && e.shiftKey;
};
var delay = function delay(fn) {
  return setTimeout(fn, 0);
};

// Array.find/findIndex() are not supported on IE; this replicates enough
//  of Array.findIndex() for our needs
var findIndex = function findIndex(arr, fn) {
  var idx = -1;
  arr.every(function (value, i) {
    if (fn(value)) {
      idx = i;
      return false; // break
    }

    return true; // next
  });

  return idx;
};

/**
 * Get an option's value when it could be a plain value, or a handler that provides
 *  the value.
 * @param {*} value Option's value to check.
 * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.
 * @returns {*} The `value`, or the handler's returned value.
 */
var valueOrHandler = function valueOrHandler(value) {
  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    params[_key - 1] = arguments[_key];
  }
  return typeof value === 'function' ? value.apply(void 0, params) : value;
};
var getActualTarget = function getActualTarget(event) {
  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the
  //  shadow host. However, event.target.composedPath() will be an array of
  //  nodes "clicked" from inner-most (the actual element inside the shadow) to
  //  outer-most (the host HTML document). If we have access to composedPath(),
  //  then use its first element; otherwise, fall back to event.target (and
  //  this only works for an _open_ shadow DOM; otherwise,
  //  composedPath()[0] === event.target always).
  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;
};

// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this
//  current instance use the same stack if `userOptions.trapStack` isn't specified
var internalTrapStack = [];
var createFocusTrap = function createFocusTrap(elements, userOptions) {
  // SSR: a live trap shouldn't be created in this type of environment so this
  //  should be safe code to execute if the `document` option isn't specified
  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;
  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;
  var config = _objectSpread2({
    returnFocusOnDeactivate: true,
    escapeDeactivates: true,
    delayInitialFocus: true,
    isKeyForward: isKeyForward,
    isKeyBackward: isKeyBackward
  }, userOptions);
  var state = {
    // containers given to createFocusTrap()
    // @type {Array<HTMLElement>}
    containers: [],
    // list of objects identifying tabbable nodes in `containers` in the trap
    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap
    //  is active, but the trap should never get to a state where there isn't at least one group
    //  with at least one tabbable node in it (that would lead to an error condition that would
    //  result in an error being thrown)
    // @type {Array<{
    //   container: HTMLElement,
    //   tabbableNodes: Array<HTMLElement>, // empty if none
    //   focusableNodes: Array<HTMLElement>, // empty if none
    //   posTabIndexesFound: boolean,
    //   firstTabbableNode: HTMLElement|undefined,
    //   lastTabbableNode: HTMLElement|undefined,
    //   firstDomTabbableNode: HTMLElement|undefined,
    //   lastDomTabbableNode: HTMLElement|undefined,
    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined
    // }>}
    containerGroups: [],
    // same order/length as `containers` list

    // references to objects in `containerGroups`, but only those that actually have
    //  tabbable nodes in them
    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__
    //  the same length
    tabbableGroups: [],
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: false,
    paused: false,
    // timer ID for when delayInitialFocus is true and initial focus in this trap
    //  has been delayed during activation
    delayInitialFocusTimer: undefined,
    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any
    recentNavEvent: undefined
  };
  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later

  /**
   * Gets a configuration option value.
   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,
   *  value will be taken from this object. Otherwise, value will be taken from base configuration.
   * @param {string} optionName Name of the option whose value is sought.
   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`
   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.
   */
  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {
    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];
  };

  /**
   * Finds the index of the container that contains the element.
   * @param {HTMLElement} element
   * @param {Event} [event] If available, and `element` isn't directly found in any container,
   *  the event's composed path is used to see if includes any known trap containers in the
   *  case where the element is inside a Shadow DOM.
   * @returns {number} Index of the container in either `state.containers` or
   *  `state.containerGroups` (the order/length of these lists are the same); -1
   *  if the element isn't found.
   */
  var findContainerIndex = function findContainerIndex(element, event) {
    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;
    // NOTE: search `containerGroups` because it's possible a group contains no tabbable
    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)
    //  and we still need to find the element in there
    return state.containerGroups.findIndex(function (_ref) {
      var container = _ref.container,
        tabbableNodes = _ref.tabbableNodes;
      return container.contains(element) || ( // fall back to explicit tabbable search which will take into consideration any
      //  web components if the `tabbableOptions.getShadowRoot` option was used for
      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't
      //  look inside web components even if open)
      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {
        return node === element;
      });
    });
  };

  /**
   * Gets the node for the given option, which is expected to be an option that
   *  can be either a DOM node, a string that is a selector to get a node, `false`
   *  (if a node is explicitly NOT given), or a function that returns any of these
   *  values.
   * @param {string} optionName
   * @returns {undefined | false | HTMLElement | SVGElement} Returns
   *  `undefined` if the option is not specified; `false` if the option
   *  resolved to `false` (node explicitly not given); otherwise, the resolved
   *  DOM node.
   * @throws {Error} If the option is set, not `false`, and is not, or does not
   *  resolve to a node.
   */
  var getNodeForOption = function getNodeForOption(optionName) {
    var optionValue = config[optionName];
    if (typeof optionValue === 'function') {
      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        params[_key2 - 1] = arguments[_key2];
      }
      optionValue = optionValue.apply(void 0, params);
    }
    if (optionValue === true) {
      optionValue = undefined; // use default value
    }

    if (!optionValue) {
      if (optionValue === undefined || optionValue === false) {
        return optionValue;
      }
      // else, empty string (invalid), null (invalid), 0 (invalid)

      throw new Error("`".concat(optionName, "` was specified but was not a node, or did not return a node"));
    }
    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point

    if (typeof optionValue === 'string') {
      node = doc.querySelector(optionValue); // resolve to node, or null if fails
      if (!node) {
        throw new Error("`".concat(optionName, "` as selector refers to no known node"));
      }
    }
    return node;
  };
  var getInitialFocusNode = function getInitialFocusNode() {
    var node = getNodeForOption('initialFocus');

    // false explicitly indicates we want no initialFocus at all
    if (node === false) {
      return false;
    }
    if (node === undefined || !Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["c" /* isFocusable */])(node, config.tabbableOptions)) {
      // option not specified nor focusable: use fallback options
      if (findContainerIndex(doc.activeElement) >= 0) {
        node = doc.activeElement;
      } else {
        var firstTabbableGroup = state.tabbableGroups[0];
        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;

        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)
        node = firstTabbableNode || getNodeForOption('fallbackFocus');
      }
    }
    if (!node) {
      throw new Error('Your focus-trap needs to have at least one focusable element');
    }
    return node;
  };
  var updateTabbableNodes = function updateTabbableNodes() {
    state.containerGroups = state.containers.map(function (container) {
      var tabbableNodes = Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["e" /* tabbable */])(container, config.tabbableOptions);

      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes
      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes
      //  are focusable but not tabbable
      var focusableNodes = Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["a" /* focusable */])(container, config.tabbableOptions);
      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;
      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;
      var firstDomTabbableNode = focusableNodes.find(function (node) {
        return Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["d" /* isTabbable */])(node);
      });
      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {
        return Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["d" /* isTabbable */])(node);
      });
      var posTabIndexesFound = !!tabbableNodes.find(function (node) {
        return Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["b" /* getTabIndex */])(node) > 0;
      });
      return {
        container: container,
        tabbableNodes: tabbableNodes,
        focusableNodes: focusableNodes,
        /** True if at least one node with positive `tabindex` was found in this container. */
        posTabIndexesFound: posTabIndexesFound,
        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */
        firstTabbableNode: firstTabbableNode,
        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */
        lastTabbableNode: lastTabbableNode,
        // NOTE: DOM order is NOT NECESSARILY "document position" order, but figuring that out
        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
        //  because that API doesn't work with Shadow DOM as well as it should (@see
        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,
        //  to address an edge case related to positive tabindex support, this seems like a much easier,
        //  "close enough most of the time" alternative for positive tabindexes which should generally
        //  be avoided anyway...
        /** First tabbable node in container, __DOM__ order; `undefined` if none. */
        firstDomTabbableNode: firstDomTabbableNode,
        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */
        lastDomTabbableNode: lastDomTabbableNode,
        /**
         * Finds the __tabbable__ node that follows the given node in the specified direction,
         *  in this container, if any.
         * @param {HTMLElement} node
         * @param {boolean} [forward] True if going in forward tab order; false if going
         *  in reverse.
         * @returns {HTMLElement|undefined} The next tabbable node, if any.
         */
        nextTabbableNode: function nextTabbableNode(node) {
          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
          var nodeIdx = tabbableNodes.indexOf(node);
          if (nodeIdx < 0) {
            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):
            //  since `node` should at least have been focusable, we assume that's the case and mimic
            //  what browsers do, which is set focus to the next node in __document position order__,
            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE
            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to
            //  basic DOM order
            if (forward) {
              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {
                return Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["d" /* isTabbable */])(el);
              });
            }
            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {
              return Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["d" /* isTabbable */])(el);
            });
          }
          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];
        }
      };
    });
    state.tabbableGroups = state.containerGroups.filter(function (group) {
      return group.tabbableNodes.length > 0;
    });

    // throw if no groups have tabbable nodes and we don't have a fallback focus node either
    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option
    ) {
      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');
    }

    // NOTE: Positive tabindexes are only properly supported in single-container traps because
    //  doing it across multiple containers where tabindexes could be all over the place
    //  would require Tabbable to support multiple containers, would require additional
    //  specialized Shadow DOM support, and would require Tabbable's multi-container support
    //  to look at those containers in document position order rather than user-provided
    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on
    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.
    if (state.containerGroups.find(function (g) {
      return g.posTabIndexesFound;
    }) && state.containerGroups.length > 1) {
      throw new Error("At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.");
    }
  };

  /**
   * Gets the current activeElement. If it's a web-component and has open shadow-root
   * it will recursively search inside shadow roots for the "true" activeElement.
   *
   * @param {Document | ShadowRoot} el
   *
   * @returns {HTMLElement} The element that currently has the focus
   **/
  var getActiveElement = function getActiveElement(el) {
    var activeElement = el.activeElement;
    if (!activeElement) {
      return;
    }
    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {
      return getActiveElement(activeElement.shadowRoot);
    }
    return activeElement;
  };
  var tryFocus = function tryFocus(node) {
    if (node === false) {
      return;
    }
    if (node === getActiveElement(document)) {
      return;
    }
    if (!node || !node.focus) {
      tryFocus(getInitialFocusNode());
      return;
    }
    node.focus({
      preventScroll: !!config.preventScroll
    });
    // NOTE: focus() API does not trigger focusIn event so set MRU node manually
    state.mostRecentlyFocusedNode = node;
    if (isSelectableInput(node)) {
      node.select();
    }
  };
  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {
    var node = getNodeForOption('setReturnFocus', previousActiveElement);
    return node ? node : node === false ? false : previousActiveElement;
  };

  /**
   * Finds the next node (in either direction) where focus should move according to a
   *  keyboard focus-in event.
   * @param {Object} params
   * @param {Node} [params.target] Known target __from which__ to navigate, if any.
   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event
   *  will be used to determine the `target`). Ignored if `target` is specified.
   * @param {boolean} [params.isBackward] True if focus should move backward.
   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be
   *  determined given the current state of the trap.
   */
  var findNextNavNode = function findNextNavNode(_ref2) {
    var target = _ref2.target,
      event = _ref2.event,
      _ref2$isBackward = _ref2.isBackward,
      isBackward = _ref2$isBackward === void 0 ? false : _ref2$isBackward;
    target = target || getActualTarget(event);
    updateTabbableNodes();
    var destinationNode = null;
    if (state.tabbableGroups.length > 0) {
      // make sure the target is actually contained in a group
      // NOTE: the target may also be the container itself if it's focusable
      //  with tabIndex='-1' and was given initial focus
      var containerIndex = findContainerIndex(target, event);
      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;
      if (containerIndex < 0) {
        // target not found in any group: quite possible focus has escaped the trap,
        //  so bring it back into...
        if (isBackward) {
          // ...the last node in the last group
          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;
        } else {
          // ...the first node in the first group
          destinationNode = state.tabbableGroups[0].firstTabbableNode;
        }
      } else if (isBackward) {
        // REVERSE

        // is the target the first tabbable node in a group?
        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {
          var firstTabbableNode = _ref3.firstTabbableNode;
          return target === firstTabbableNode;
        });
        if (startOfGroupIndex < 0 && (containerGroup.container === target || Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["c" /* isFocusable */])(target, config.tabbableOptions) && !Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["d" /* isTabbable */])(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {
          // an exception case where the target is either the container itself, or
          //  a non-tabbable node that was given focus (i.e. tabindex is negative
          //  and user clicked on it or node was programmatically given focus)
          //  and is not followed by any other tabbable node, in which
          //  case, we should handle shift+tab as if focus were on the container's
          //  first tabbable node, and go to the last tabbable node of the LAST group
          startOfGroupIndex = containerIndex;
        }
        if (startOfGroupIndex >= 0) {
          // YES: then shift+tab should go to the last tabbable node in the
          //  previous group (and wrap around to the last tabbable node of
          //  the LAST group if it's the first tabbable node of the FIRST group)
          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;
          var destinationGroup = state.tabbableGroups[destinationGroupIndex];
          destinationNode = Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["b" /* getTabIndex */])(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;
        } else if (!isTabEvent(event)) {
          // user must have customized the nav keys so we have to move focus manually _within_
          //  the active group: do this based on the order determined by tabbable()
          destinationNode = containerGroup.nextTabbableNode(target, false);
        }
      } else {
        // FORWARD

        // is the target the last tabbable node in a group?
        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref4) {
          var lastTabbableNode = _ref4.lastTabbableNode;
          return target === lastTabbableNode;
        });
        if (lastOfGroupIndex < 0 && (containerGroup.container === target || Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["c" /* isFocusable */])(target, config.tabbableOptions) && !Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["d" /* isTabbable */])(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {
          // an exception case where the target is the container itself, or
          //  a non-tabbable node that was given focus (i.e. tabindex is negative
          //  and user clicked on it or node was programmatically given focus)
          //  and is not followed by any other tabbable node, in which
          //  case, we should handle tab as if focus were on the container's
          //  last tabbable node, and go to the first tabbable node of the FIRST group
          lastOfGroupIndex = containerIndex;
        }
        if (lastOfGroupIndex >= 0) {
          // YES: then tab should go to the first tabbable node in the next
          //  group (and wrap around to the first tabbable node of the FIRST
          //  group if it's the last tabbable node of the LAST group)
          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;
          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];
          destinationNode = Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["b" /* getTabIndex */])(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;
        } else if (!isTabEvent(event)) {
          // user must have customized the nav keys so we have to move focus manually _within_
          //  the active group: do this based on the order determined by tabbable()
          destinationNode = containerGroup.nextTabbableNode(target);
        }
      }
    } else {
      // no groups available
      // NOTE: the fallbackFocus option does not support returning false to opt-out
      destinationNode = getNodeForOption('fallbackFocus');
    }
    return destinationNode;
  };

  // This needs to be done on mousedown and touchstart instead of click
  // so that it precedes the focus event.
  var checkPointerDown = function checkPointerDown(e) {
    var target = getActualTarget(e);
    if (findContainerIndex(target, e) >= 0) {
      // allow the click since it ocurred inside the trap
      return;
    }
    if (valueOrHandler(config.clickOutsideDeactivates, e)) {
      // immediately deactivate the trap
      trap.deactivate({
        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,
        //  which will result in the outside click setting focus to the node
        //  that was clicked (and if not focusable, to "nothing"); by setting
        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused
        //  on activation (or the configured `setReturnFocus` node), whether the
        //  outside click was on a focusable node or not
        returnFocus: config.returnFocusOnDeactivate
      });
      return;
    }

    // This is needed for mobile devices.
    // (If we'll only let `click` events through,
    // then on mobile they will be blocked anyways if `touchstart` is blocked.)
    if (valueOrHandler(config.allowOutsideClick, e)) {
      // allow the click outside the trap to take place
      return;
    }

    // otherwise, prevent the click
    e.preventDefault();
  };

  // In case focus escapes the trap for some strange reason, pull it back in.
  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected
  //  scrolling if the node that got focused was out of view; there's nothing we can do to
  //  prevent that from happening by the time we discover that focus escaped
  var checkFocusIn = function checkFocusIn(event) {
    var target = getActualTarget(event);
    var targetContained = findContainerIndex(target, event) >= 0;

    // In Firefox when you Tab out of an iframe the Document is briefly focused.
    if (targetContained || target instanceof Document) {
      if (targetContained) {
        state.mostRecentlyFocusedNode = target;
      }
    } else {
      // escaped! pull it back in to where it just left
      event.stopImmediatePropagation();

      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;
      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward
      //  toward a node with a positive tab index
      var nextNode; // next node to focus, if we find one
      var navAcrossContainers = true;
      if (state.mostRecentlyFocusedNode) {
        if (Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["b" /* getTabIndex */])(state.mostRecentlyFocusedNode) > 0) {
          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...
          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);
          // there MAY not be any tabbable nodes in the container if there are at least 2 containers
          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container
          //  with at least one tabbable node in order to function, so this could be the other container
          //  with nothing tabbable in it)
          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;
          if (tabbableNodes.length > 0) {
            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable
            var mruTabIdx = tabbableNodes.findIndex(function (node) {
              return node === state.mostRecentlyFocusedNode;
            });
            if (mruTabIdx >= 0) {
              if (config.isKeyForward(state.recentNavEvent)) {
                if (mruTabIdx + 1 < tabbableNodes.length) {
                  nextNode = tabbableNodes[mruTabIdx + 1];
                  navAcrossContainers = false;
                }
                // else, don't wrap within the container as focus should move to next/previous
                //  container
              } else {
                if (mruTabIdx - 1 >= 0) {
                  nextNode = tabbableNodes[mruTabIdx - 1];
                  navAcrossContainers = false;
                }
                // else, don't wrap within the container as focus should move to next/previous
                //  container
              }
              // else, don't find in container order without considering direction too
            }
          }
          // else, no tabbable nodes in that container (which means we must have at least one other
          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown
          //  an error the last time updateTabbableNodes() was run): find next node among all known
          //  containers
        } else {
          // check to see if there's at least one tabbable node with a positive tab index inside
          //  the trap because focus seems to escape when navigating backward from a tabbable node
          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with
          //  the greatest positive tab index like it should)
          if (!state.containerGroups.some(function (g) {
            return g.tabbableNodes.some(function (n) {
              return Object(__WEBPACK_IMPORTED_MODULE_0_tabbable__["b" /* getTabIndex */])(n) > 0;
            });
          })) {
            // no containers with tabbable nodes with positive tab indexes which means the focus
            //  escaped for some other reason and we should just execute the fallback to the
            //  MRU node or initial focus node, if any
            navAcrossContainers = false;
          }
        }
      } else {
        // no MRU node means we're likely in some initial condition when the trap has just
        //  been activated and initial focus hasn't been given yet, in which case we should
        //  fall through to trying to focus the initial focus node, which is what should
        //  happen below at this point in the logic
        navAcrossContainers = false;
      }
      if (navAcrossContainers) {
        nextNode = findNextNavNode({
          // move FROM the MRU node, not event-related node (which will be the node that is
          //  outside the trap causing the focus escape we're trying to fix)
          target: state.mostRecentlyFocusedNode,
          isBackward: config.isKeyBackward(state.recentNavEvent)
        });
      }
      if (nextNode) {
        tryFocus(nextNode);
      } else {
        tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
      }
    }
    state.recentNavEvent = undefined; // clear
  };

  // Hijack key nav events on the first and last focusable nodes of the trap,
  // in order to prevent focus from escaping. If it escapes for even a
  // moment it can end up scrolling the page and causing confusion so we
  // kind of need to capture the action at the keydown phase.
  var checkKeyNav = function checkKeyNav(event) {
    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    state.recentNavEvent = event;
    var destinationNode = findNextNavNode({
      event: event,
      isBackward: isBackward
    });
    if (destinationNode) {
      if (isTabEvent(event)) {
        // since tab natively moves focus, we wouldn't have a destination node unless we
        //  were on the edge of a container and had to move to the next/previous edge, in
        //  which case we want to prevent default to keep the browser from moving focus
        //  to where it normally would
        event.preventDefault();
      }
      tryFocus(destinationNode);
    }
    // else, let the browser take care of [shift+]tab and move the focus
  };

  var checkKey = function checkKey(event) {
    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {
      event.preventDefault();
      trap.deactivate();
      return;
    }
    if (config.isKeyForward(event) || config.isKeyBackward(event)) {
      checkKeyNav(event, config.isKeyBackward(event));
    }
  };
  var checkClick = function checkClick(e) {
    var target = getActualTarget(e);
    if (findContainerIndex(target, e) >= 0) {
      return;
    }
    if (valueOrHandler(config.clickOutsideDeactivates, e)) {
      return;
    }
    if (valueOrHandler(config.allowOutsideClick, e)) {
      return;
    }
    e.preventDefault();
    e.stopImmediatePropagation();
  };

  //
  // EVENT LISTENERS
  //

  var addListeners = function addListeners() {
    if (!state.active) {
      return;
    }

    // There can be only one listening focus trap at a time
    activeFocusTraps.activateTrap(trapStack, trap);

    // Delay ensures that the focused element doesn't capture the event
    // that caused the focus trap activation.
    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {
      tryFocus(getInitialFocusNode());
    }) : tryFocus(getInitialFocusNode());
    doc.addEventListener('focusin', checkFocusIn, true);
    doc.addEventListener('mousedown', checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener('touchstart', checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener('click', checkClick, {
      capture: true,
      passive: false
    });
    doc.addEventListener('keydown', checkKey, {
      capture: true,
      passive: false
    });
    return trap;
  };
  var removeListeners = function removeListeners() {
    if (!state.active) {
      return;
    }
    doc.removeEventListener('focusin', checkFocusIn, true);
    doc.removeEventListener('mousedown', checkPointerDown, true);
    doc.removeEventListener('touchstart', checkPointerDown, true);
    doc.removeEventListener('click', checkClick, true);
    doc.removeEventListener('keydown', checkKey, true);
    return trap;
  };

  //
  // MUTATION OBSERVER
  //

  var checkDomRemoval = function checkDomRemoval(mutations) {
    var isFocusedNodeRemoved = mutations.some(function (mutation) {
      var removedNodes = Array.from(mutation.removedNodes);
      return removedNodes.some(function (node) {
        return node === state.mostRecentlyFocusedNode;
      });
    });

    // If the currently focused is removed then browsers will move focus to the
    // <body> element. If this happens, try to move focus back into the trap.
    if (isFocusedNodeRemoved) {
      tryFocus(getInitialFocusNode());
    }
  };

  // Use MutationObserver - if supported - to detect if focused node is removed
  // from the DOM.
  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;
  var updateObservedNodes = function updateObservedNodes() {
    if (!mutationObserver) {
      return;
    }
    mutationObserver.disconnect();
    if (state.active && !state.paused) {
      state.containers.map(function (container) {
        mutationObserver.observe(container, {
          subtree: true,
          childList: true
        });
      });
    }
  };

  //
  // TRAP DEFINITION
  //

  trap = {
    get active() {
      return state.active;
    },
    get paused() {
      return state.paused;
    },
    activate: function activate(activateOptions) {
      if (state.active) {
        return this;
      }
      var onActivate = getOption(activateOptions, 'onActivate');
      var onPostActivate = getOption(activateOptions, 'onPostActivate');
      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');
      if (!checkCanFocusTrap) {
        updateTabbableNodes();
      }
      state.active = true;
      state.paused = false;
      state.nodeFocusedBeforeActivation = doc.activeElement;
      onActivate === null || onActivate === void 0 || onActivate();
      var finishActivation = function finishActivation() {
        if (checkCanFocusTrap) {
          updateTabbableNodes();
        }
        addListeners();
        updateObservedNodes();
        onPostActivate === null || onPostActivate === void 0 || onPostActivate();
      };
      if (checkCanFocusTrap) {
        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);
        return this;
      }
      finishActivation();
      return this;
    },
    deactivate: function deactivate(deactivateOptions) {
      if (!state.active) {
        return this;
      }
      var options = _objectSpread2({
        onDeactivate: config.onDeactivate,
        onPostDeactivate: config.onPostDeactivate,
        checkCanReturnFocus: config.checkCanReturnFocus
      }, deactivateOptions);
      clearTimeout(state.delayInitialFocusTimer); // noop if undefined
      state.delayInitialFocusTimer = undefined;
      removeListeners();
      state.active = false;
      state.paused = false;
      updateObservedNodes();
      activeFocusTraps.deactivateTrap(trapStack, trap);
      var onDeactivate = getOption(options, 'onDeactivate');
      var onPostDeactivate = getOption(options, 'onPostDeactivate');
      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');
      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');
      onDeactivate === null || onDeactivate === void 0 || onDeactivate();
      var finishDeactivation = function finishDeactivation() {
        delay(function () {
          if (returnFocus) {
            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));
          }
          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();
        });
      };
      if (returnFocus && checkCanReturnFocus) {
        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);
        return this;
      }
      finishDeactivation();
      return this;
    },
    pause: function pause(pauseOptions) {
      if (state.paused || !state.active) {
        return this;
      }
      var onPause = getOption(pauseOptions, 'onPause');
      var onPostPause = getOption(pauseOptions, 'onPostPause');
      state.paused = true;
      onPause === null || onPause === void 0 || onPause();
      removeListeners();
      updateObservedNodes();
      onPostPause === null || onPostPause === void 0 || onPostPause();
      return this;
    },
    unpause: function unpause(unpauseOptions) {
      if (!state.paused || !state.active) {
        return this;
      }
      var onUnpause = getOption(unpauseOptions, 'onUnpause');
      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');
      state.paused = false;
      onUnpause === null || onUnpause === void 0 || onUnpause();
      updateTabbableNodes();
      addListeners();
      updateObservedNodes();
      onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();
      return this;
    },
    updateContainerElements: function updateContainerElements(containerElements) {
      var elementsAsArray = [].concat(containerElements).filter(Boolean);
      state.containers = elementsAsArray.map(function (element) {
        return typeof element === 'string' ? doc.querySelector(element) : element;
      });
      if (state.active) {
        updateTabbableNodes();
      }
      updateObservedNodes();
      return this;
    }
  };

  // initialize container elements
  trap.updateContainerElements(elements);
  return trap;
};


//# sourceMappingURL=focus-trap.esm.js.map


/***/ }),
/* 261 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return focusable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getTabIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return isFocusable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return isTabbable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return tabbable; });
/*!
* tabbable 6.2.0
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/
// NOTE: separate `:not()` selectors has broader browser support than the newer
//  `:not([inert], [inert] *)` (Feb 2023)
// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes
//  the entire query to fail, resulting in no nodes found, which will break a lot
//  of things... so we have to rely on JS to identify nodes inside an inert container
var candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable="false"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];
var candidateSelector = /* #__PURE__ */candidateSelectors.join(',');
var NoElement = typeof Element === 'undefined';
var matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
var getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {
  var _element$getRootNode;
  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);
} : function (element) {
  return element === null || element === void 0 ? void 0 : element.ownerDocument;
};

/**
 * Determines if a node is inert or in an inert ancestor.
 * @param {Element} [node]
 * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to
 *  see if any of them are inert. If false, only `node` itself is considered.
 * @returns {boolean} True if inert itself or by way of being in an inert ancestor.
 *  False if `node` is falsy.
 */
var isInert = function isInert(node, lookUp) {
  var _node$getAttribute;
  if (lookUp === void 0) {
    lookUp = true;
  }
  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`
  //  JS API property; we have to check the attribute, which can either be empty or 'true';
  //  if it's `null` (not specified) or 'false', it's an active element
  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');
  var inert = inertAtt === '' || inertAtt === 'true';

  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`
  //  if it weren't for `matches()` not being a function on shadow roots; the following
  //  code works for any kind of node
  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`
  //  so it likely would not support `:is([inert] *)` either...
  var result = inert || lookUp && node && isInert(node.parentNode); // recursive

  return result;
};

/**
 * Determines if a node's content is editable.
 * @param {Element} [node]
 * @returns True if it's content-editable; false if it's not or `node` is falsy.
 */
var isContentEditable = function isContentEditable(node) {
  var _node$getAttribute2;
  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have
  //  to use the attribute directly to check for this, which can either be empty or 'true';
  //  if it's `null` (not specified) or 'false', it's a non-editable element
  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');
  return attValue === '' || attValue === 'true';
};

/**
 * @param {Element} el container to check in
 * @param {boolean} includeContainer add container to check
 * @param {(node: Element) => boolean} filter filter candidates
 * @returns {Element[]}
 */
var getCandidates = function getCandidates(el, includeContainer, filter) {
  // even if `includeContainer=false`, we still have to check it for inertness because
  //  if it's inert, all its children are inert
  if (isInert(el)) {
    return [];
  }
  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));
  if (includeContainer && matches.call(el, candidateSelector)) {
    candidates.unshift(el);
  }
  candidates = candidates.filter(filter);
  return candidates;
};

/**
 * @callback GetShadowRoot
 * @param {Element} element to check for shadow root
 * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.
 */

/**
 * @callback ShadowRootFilter
 * @param {Element} shadowHostNode the element which contains shadow content
 * @returns {boolean} true if a shadow root could potentially contain valid candidates.
 */

/**
 * @typedef {Object} CandidateScope
 * @property {Element} scopeParent contains inner candidates
 * @property {Element[]} candidates list of candidates found in the scope parent
 */

/**
 * @typedef {Object} IterativeOptions
 * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;
 *  if a function, implies shadow support is enabled and either returns the shadow root of an element
 *  or a boolean stating if it has an undisclosed shadow root
 * @property {(node: Element) => boolean} filter filter candidates
 * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list
 * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;
 */

/**
 * @param {Element[]} elements list of element containers to match candidates from
 * @param {boolean} includeContainer add container list to check
 * @param {IterativeOptions} options
 * @returns {Array.<Element|CandidateScope>}
 */
var getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {
  var candidates = [];
  var elementsToCheck = Array.from(elements);
  while (elementsToCheck.length) {
    var element = elementsToCheck.shift();
    if (isInert(element, false)) {
      // no need to look up since we're drilling down
      // anything inside this container will also be inert
      continue;
    }
    if (element.tagName === 'SLOT') {
      // add shadow dom slot scope (slot itself cannot be focusable)
      var assigned = element.assignedElements();
      var content = assigned.length ? assigned : element.children;
      var nestedCandidates = getCandidatesIteratively(content, true, options);
      if (options.flatten) {
        candidates.push.apply(candidates, nestedCandidates);
      } else {
        candidates.push({
          scopeParent: element,
          candidates: nestedCandidates
        });
      }
    } else {
      // check candidate element
      var validCandidate = matches.call(element, candidateSelector);
      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {
        candidates.push(element);
      }

      // iterate over shadow content if possible
      var shadowRoot = element.shadowRoot ||
      // check for an undisclosed shadow
      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);

      // no inert look up because we're already drilling down and checking for inertness
      //  on the way down, so all containers to this root node should have already been
      //  vetted as non-inert
      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));
      if (shadowRoot && validShadowRoot) {
        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed
        //  shadow exists, so look at light dom children as fallback BUT create a scope for any
        //  child candidates found because they're likely slotted elements (elements that are
        //  children of the web component element (which has the shadow), in the light dom, but
        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,
        //  _after_ we return from this recursive call
        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);
        if (options.flatten) {
          candidates.push.apply(candidates, _nestedCandidates);
        } else {
          candidates.push({
            scopeParent: element,
            candidates: _nestedCandidates
          });
        }
      } else {
        // there's not shadow so just dig into the element's (light dom) children
        //  __without__ giving the element special scope treatment
        elementsToCheck.unshift.apply(elementsToCheck, element.children);
      }
    }
  }
  return candidates;
};

/**
 * @private
 * Determines if the node has an explicitly specified `tabindex` attribute.
 * @param {HTMLElement} node
 * @returns {boolean} True if so; false if not.
 */
var hasTabIndex = function hasTabIndex(node) {
  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));
};

/**
 * Determine the tab index of a given node.
 * @param {HTMLElement} node
 * @returns {number} Tab order (negative, 0, or positive number).
 * @throws {Error} If `node` is falsy.
 */
var getTabIndex = function getTabIndex(node) {
  if (!node) {
    throw new Error('No node provided');
  }
  if (node.tabIndex < 0) {
    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default
    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,
    // yet they are still part of the regular tab order; in FF, they get a default
    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab
    // order, consider their tab index to be 0.
    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;
    // so if they don't have a tabindex attribute specifically set, assume it's 0.
    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {
      return 0;
    }
  }
  return node.tabIndex;
};

/**
 * Determine the tab index of a given node __for sort order purposes__.
 * @param {HTMLElement} node
 * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,
 *  has tabIndex -1, but needs to be sorted by document order in order for its content to be
 *  inserted into the correct sort position.
 * @returns {number} Tab order (negative, 0, or positive number).
 */
var getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {
  var tabIndex = getTabIndex(node);
  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {
    return 0;
  }
  return tabIndex;
};
var sortOrderedTabbables = function sortOrderedTabbables(a, b) {
  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
};
var isInput = function isInput(node) {
  return node.tagName === 'INPUT';
};
var isHiddenInput = function isHiddenInput(node) {
  return isInput(node) && node.type === 'hidden';
};
var isDetailsWithSummary = function isDetailsWithSummary(node) {
  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {
    return child.tagName === 'SUMMARY';
  });
  return r;
};
var getCheckedRadio = function getCheckedRadio(nodes, form) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked && nodes[i].form === form) {
      return nodes[i];
    }
  }
};
var isTabbableRadio = function isTabbableRadio(node) {
  if (!node.name) {
    return true;
  }
  var radioScope = node.form || getRootNode(node);
  var queryRadios = function queryRadios(name) {
    return radioScope.querySelectorAll('input[type="radio"][name="' + name + '"]');
  };
  var radioSet;
  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {
    radioSet = queryRadios(window.CSS.escape(node.name));
  } else {
    try {
      radioSet = queryRadios(node.name);
    } catch (err) {
      // eslint-disable-next-line no-console
      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);
      return false;
    }
  }
  var checked = getCheckedRadio(radioSet, node.form);
  return !checked || checked === node;
};
var isRadio = function isRadio(node) {
  return isInput(node) && node.type === 'radio';
};
var isNonTabbableRadio = function isNonTabbableRadio(node) {
  return isRadio(node) && !isTabbableRadio(node);
};

// determines if a node is ultimately attached to the window's document
var isNodeAttached = function isNodeAttached(node) {
  var _nodeRoot;
  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise
  //  (but NOT _the_ document; see second 'If' comment below for more).
  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow
  //  is attached, and the one we need to check if it's in the document or not (because the
  //  shadow, and all nodes it contains, is never considered in the document since shadows
  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,
  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's
  //  visibility, including all the nodes it contains). The host could be any normal node,
  //  or a custom element (i.e. web component). Either way, that's the one that is considered
  //  part of the document, not the shadow root, nor any of its children (i.e. the node being
  //  tested).
  // To further complicate things, we have to look all the way up until we find a shadow HOST
  //  that is attached (or find none) because the node might be in nested shadows...
  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the
  //  document (per the docs) and while it's a Document-type object, that document does not
  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer
  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,
  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when
  //  node is actually detached.
  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible
  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed
  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then
  //  `ownerDocument` will be `null`, hence the optional chaining on it.
  var nodeRoot = node && getRootNode(node);
  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;

  // in some cases, a detached node will return itself as the root instead of a document or
  //  shadow root object, in which case, we shouldn't try to look further up the host chain
  var attached = false;
  if (nodeRoot && nodeRoot !== node) {
    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;
    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));
    while (!attached && nodeRootHost) {
      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;
      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,
      //  which means we need to get the host's host and check if that parent host is contained
      //  in (i.e. attached to) the document
      nodeRoot = getRootNode(nodeRootHost);
      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;
      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));
    }
  }
  return attached;
};
var isZeroArea = function isZeroArea(node) {
  var _node$getBoundingClie = node.getBoundingClientRect(),
    width = _node$getBoundingClie.width,
    height = _node$getBoundingClie.height;
  return width === 0 && height === 0;
};
var isHidden = function isHidden(node, _ref) {
  var displayCheck = _ref.displayCheck,
    getShadowRoot = _ref.getShadowRoot;
  // NOTE: visibility will be `undefined` if node is detached from the document
  //  (see notes about this further down), which means we will consider it visible
  //  (this is legacy behavior from a very long way back)
  // NOTE: we check this regardless of `displayCheck="none"` because this is a
  //  _visibility_ check, not a _display_ check
  if (getComputedStyle(node).visibility === 'hidden') {
    return true;
  }
  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');
  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;
  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {
    return true;
  }
  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {
    if (typeof getShadowRoot === 'function') {
      // figure out if we should consider the node to be in an undisclosed shadow and use the
      //  'non-zero-area' fallback
      var originalNode = node;
      while (node) {
        var parentElement = node.parentElement;
        var rootNode = getRootNode(node);
        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow
        ) {
          // node has an undisclosed shadow which means we can only treat it as a black box, so we
          //  fall back to a non-zero-area test
          return isZeroArea(node);
        } else if (node.assignedSlot) {
          // iterate up slot
          node = node.assignedSlot;
        } else if (!parentElement && rootNode !== node.ownerDocument) {
          // cross shadow boundary
          node = rootNode.host;
        } else {
          // iterate up normal dom
          node = parentElement;
        }
      }
      node = originalNode;
    }
    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support
    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or
    //  it might be a falsy value, which means shadow DOM support is disabled

    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)
    //  now we can just test to see if it would normally be visible or not, provided it's
    //  attached to the main document.
    // NOTE: We must consider case where node is inside a shadow DOM and given directly to
    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.

    if (isNodeAttached(node)) {
      // this works wherever the node is: if there's at least one client rect, it's
      //  somehow displayed; it also covers the CSS 'display: contents' case where the
      //  node itself is hidden in place of its contents; and there's no need to search
      //  up the hierarchy either
      return !node.getClientRects().length;
    }

    // Else, the node isn't attached to the document, which means the `getClientRects()`
    //  API will __always__ return zero rects (this can happen, for example, if React
    //  is used to render nodes onto a detached tree, as confirmed in this thread:
    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)
    //
    // It also means that even window.getComputedStyle(node).display will return `undefined`
    //  because styles are only computed for nodes that are in the document.
    //
    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable
    //  somehow. Though it was never stated officially, anyone who has ever used tabbable
    //  APIs on nodes in detached containers has actually implicitly used tabbable in what
    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck="none"` mode -- essentially
    //  considering __everything__ to be visible because of the innability to determine styles.
    //
    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached
    //  nodes as visible with the 'none' fallback.__
    if (displayCheck !== 'legacy-full') {
      return true; // hidden
    }
    // else, fallback to 'none' mode and consider the node visible
  } else if (displayCheck === 'non-zero-area') {
    // NOTE: Even though this tests that the node's client rect is non-zero to determine
    //  whether it's displayed, and that a detached node will __always__ have a zero-area
    //  client rect, we don't special-case for whether the node is attached or not. In
    //  this mode, we do want to consider nodes that have a zero area to be hidden at all
    //  times, and that includes attached or not.
    return isZeroArea(node);
  }

  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume
  //  it's visible
  return false;
};

// form fields (nested) inside a disabled fieldset are not focusable/tabbable
//  unless they are in the _first_ <legend> element of the top-most disabled
//  fieldset
var isDisabledFromFieldset = function isDisabledFromFieldset(node) {
  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {
    var parentNode = node.parentElement;
    // check if `node` is contained in a disabled <fieldset>
    while (parentNode) {
      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {
        // look for the first <legend> among the children of the disabled <fieldset>
        for (var i = 0; i < parentNode.children.length; i++) {
          var child = parentNode.children.item(i);
          // when the first <legend> (in document order) is found
          if (child.tagName === 'LEGEND') {
            // if its parent <fieldset> is not nested in another disabled <fieldset>,
            // return whether `node` is a descendant of its first <legend>
            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);
          }
        }
        // the disabled <fieldset> containing `node` has no <legend>
        return true;
      }
      parentNode = parentNode.parentElement;
    }
  }

  // else, node's tabbable/focusable state should not be affected by a fieldset's
  //  enabled/disabled state
  return false;
};
var isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {
  if (node.disabled ||
  // we must do an inert look up to filter out any elements inside an inert ancestor
  //  because we're limited in the type of selectors we can use in JSDom (see related
  //  note related to `candidateSelectors`)
  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||
  // For a details element with a summary, the summary element gets the focus
  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {
    return false;
  }
  return true;
};
var isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {
  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {
    return false;
  }
  return true;
};
var isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {
  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);
  if (isNaN(tabIndex) || tabIndex >= 0) {
    return true;
  }
  // If a custom element has an explicit negative tabindex,
  // browsers will not allow tab targeting said element's children.
  return false;
};

/**
 * @param {Array.<Element|CandidateScope>} candidates
 * @returns Element[]
 */
var sortByOrder = function sortByOrder(candidates) {
  var regularTabbables = [];
  var orderedTabbables = [];
  candidates.forEach(function (item, i) {
    var isScope = !!item.scopeParent;
    var element = isScope ? item.scopeParent : item;
    var candidateTabindex = getSortOrderTabIndex(element, isScope);
    var elements = isScope ? sortByOrder(item.candidates) : element;
    if (candidateTabindex === 0) {
      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        item: item,
        isScope: isScope,
        content: elements
      });
    }
  });
  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {
    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);
    return acc;
  }, []).concat(regularTabbables);
};
var tabbable = function tabbable(container, options) {
  options = options || {};
  var candidates;
  if (options.getShadowRoot) {
    candidates = getCandidatesIteratively([container], options.includeContainer, {
      filter: isNodeMatchingSelectorTabbable.bind(null, options),
      flatten: false,
      getShadowRoot: options.getShadowRoot,
      shadowRootFilter: isValidShadowRootTabbable
    });
  } else {
    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));
  }
  return sortByOrder(candidates);
};
var focusable = function focusable(container, options) {
  options = options || {};
  var candidates;
  if (options.getShadowRoot) {
    candidates = getCandidatesIteratively([container], options.includeContainer, {
      filter: isNodeMatchingSelectorFocusable.bind(null, options),
      flatten: true,
      getShadowRoot: options.getShadowRoot
    });
  } else {
    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));
  }
  return candidates;
};
var isTabbable = function isTabbable(node, options) {
  options = options || {};
  if (!node) {
    throw new Error('No node provided');
  }
  if (matches.call(node, candidateSelector) === false) {
    return false;
  }
  return isNodeMatchingSelectorTabbable(options, node);
};
var focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');
var isFocusable = function isFocusable(node, options) {
  options = options || {};
  if (!node) {
    throw new Error('No node provided');
  }
  if (matches.call(node, focusableCandidateSelector) === false) {
    return false;
  }
  return isNodeMatchingSelectorFocusable(options, node);
};


//# sourceMappingURL=index.esm.js.map


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = getPropertySafely;
/* eslint-disable */
var _typeof = typeof Symbol === 'function' && _typeof2(Symbol.iterator) === 'symbol' ? function (obj) {
    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
} : function (obj) {
    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
};

/**
 * @method getPropertySafely
 * @description Safe way to get a nested property. It can be used to safely retrieve
 * a nested property from an object without having to do all the checks (e.g. if an
 * object is undefined and you're trying to get `obj.property.nested.property` it will
 * throw an error).
 *
 * @memberOf Lang
 *
 * @param {Object} obj Object to retrieve nested property from
 * @param {String} path Path to the property to be retrieved
 *
 * @return {String|Array|Object|Function|undefined} Returns the value of the property or undefined
 *
 * @example
 * getPropertySafely({a: {b: 'c'}}, 'a.b') -> 'c'
 * getPropertySafely({a: {b: 'c'}}, 'a') -> {b: 'c'}
 * getPropertySafely({a: {b: 'c'}}, 'd.b') -> undefined
 */
function getPropertySafely(obj, propPath) {
    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && typeof propPath === 'string' && obj !== null && Object.keys(obj).length && propPath.length) {
        var path = propPath.split('.');
        var len = path.length;
        var current = obj;

        for (var i = 0; i < len; i += 1) {
            if (current === null || current === undefined || Number.isNaN(current)) {
                return i === len ? current : undefined;
            }

            if (Object.prototype.hasOwnProperty.call(current, path[i])) {
                current = current[path[i]];
            } else {
                return undefined;
            }
        }

        return current;
    }
    return undefined;
}

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _hooks = __webpack_require__(5);

var _general = __webpack_require__(6);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    linkHint: '',
    title: '',
    tabIndex: 0
};

/**
 * Link Infobit (shown in 3:2 Card Footer)
 *
 * @component
 * @example
 * const props= {
    href: String,
    linkHint: String,
    text: String,
 * }
 * return (
 *   <Link {...props}/>
 * )
 */
var Link = function Link(_ref) {
    var href = _ref.href,
        linkHint = _ref.linkHint,
        text = _ref.text,
        title = _ref.title,
        tabIndex = _ref.tabIndex;

    /**
     **** Authored Configs ****
     */
    var getConfig = (0, _hooks.useConfig)();
    var ctaAction = getConfig('collection', 'ctaAction');
    var ariaLabel = text + ' ' + title;

    var target = (0, _general.getLinkTarget)(href, ctaAction);
    return _react2.default.createElement(
        'a',
        {
            className: 'consonant-LinkInfobit',
            'data-testid': 'consonant-LinkInfobit',
            'daa-ll': text,
            href: href,
            target: target,
            title: linkHint,
            rel: 'noopener noreferrer',
            tabIndex: tabIndex,
            'aria-label': ariaLabel },
        text
    );
};

Link.defaultProps = defaultProps;

exports.default = Link;

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var maxAllowedStars = 5;
var defaultFilledStars = 0;

var defaultProps = {
    label: '',
    totalStars: maxAllowedStars,
    starsFilled: defaultFilledStars
};

/**
 * Will calculate the rating (percentage) that is shown
 * @param {Number} id - How many stars should be filled
 * @param {Number} id - Total amount of stars to display
 * @returns {Number} - Rating Percentage
 */
var getRating = function getRating(starsFilled, totalStars) {
    var starsFilledNotValid = starsFilled < 0 || starsFilled > totalStars;
    var totalStarsNotValid = totalStars <= 0 || totalStars > maxAllowedStars;

    if (starsFilledNotValid) {
        /* eslint-disable-next-line no-param-reassign */
        starsFilled = defaultFilledStars;
    }

    if (totalStarsNotValid) {
        /* eslint-disable-next-line no-param-reassign */
        totalStars = Number.MAX_SAFE_INTEGER;
    }

    var scalingFactor = 100;
    var ratingPercentage = starsFilled / totalStars;
    var rating = Math.round(ratingPercentage * scalingFactor);
    return rating;
};

/**
 * Rating Infobit (shown in 3:2 Card Footer)
 *
 * Displays how many stars should be shown for a giving rating
 *
 * @component
 * @example
 * const props= {
    totalStars: Int,
    starsFilled: Int,
    label: String,
 * }
 * return (
 *   <Rating {...props}/>
 * )
 */
var Rating = function Rating(_ref) {
    var label = _ref.label,
        totalStars = _ref.totalStars,
        starsFilled = _ref.starsFilled;

    var className = (0, _classnames2.default)({
        'consonant-RatingInfobit': true,
        'consonant-RatingInfobit--negMargin': !label
    });

    var ratingToDisplay = getRating(starsFilled, totalStars);

    return _react2.default.createElement(
        'div',
        {
            className: className,
            'data-stars': totalStars },
        _react2.default.createElement('span', {
            'data-testid': 'consonant-RatingInfobit-stars',
            className: 'consonant-RatingInfobit-stars',
            'data-rating': ratingToDisplay }),
        label && _react2.default.createElement(
            'span',
            {
                className: 'consonant-RatingInfobit-text' },
            label
        )
    );
};

Rating.defaultProps = defaultProps;

exports.default = Rating;

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    label: '',
    percentage: '0',
    color: '#1473E6',
    completionText: ''
};

/**
 * Progress Bar infobit (shown in 3:2 Card Footer)
 *
 * @component
 * @example
 * const props= {
    label: String,
    completionText: String,
    percentage: String,
    color: String
 * }
 * return (
 *   <Progress {...props}/>
 * )
 */
var Progress = function Progress(_ref) {
    var label = _ref.label,
        completionText = _ref.completionText,
        percentage = _ref.percentage,
        color = _ref.color;

    var valueStyles = {
        width: 'calc(' + percentage + ' + 2px)',
        backgroundColor: color
    };

    var BASE_10 = 10;
    /**
     * Percentage as int to be used in Aria Label
     *
     * This is different than Percentage prop @type {String} which is diplayed
     * to user
     * @type {Number}
     */
    var percentageInt = parseInt(percentage, BASE_10);

    return _react2.default.createElement(
        'div',
        {
            className: 'consonant-ProgressInfobit' },
        _react2.default.createElement(
            'div',
            {
                className: 'consonant-ProgressInfobit-wrapper' },
            _react2.default.createElement(
                'span',
                {
                    className: 'consonant-ProgressInfobit-text',
                    title: label },
                label
            ),
            _react2.default.createElement(
                'span',
                {
                    className: 'consonant-ProgressInfobit-text consonant-ProgressInfobit-text--italic',
                    title: completionText },
                completionText
            )
        ),
        _react2.default.createElement(
            'div',
            {
                className: 'consonant-ProgressInfobit-el' },
            _react2.default.createElement(
                'span',
                {
                    className: 'consonant-ProgressInfobit-val',
                    style: valueStyles,
                    role: 'progressbar',
                    'aria-valuenow': percentageInt,
                    'aria-valuemin': '0',
                    'aria-valuemax': '100' },
                percentage
            )
        )
    );
};

Progress.defaultProps = defaultProps;

exports.default = Progress;

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    src: '',
    text: '',
    srcAltText: ''
};

/**
 * Icon With Text Infobit (shown in 3:2 Card Footer)
 *
 * @component
 * @example
 * const props= {
    src: String,
    srcAltText: String,
    text: String,
 * }
 * return (
 *   <IconWithText {...props}/>
 * )
 */
var IconWithText = function IconWithText(_ref) {
    var src = _ref.src,
        srcAltText = _ref.srcAltText,
        text = _ref.text;
    return _react2.default.createElement(
        'div',
        {
            className: 'consonant-IconWithTextInfobit' },
        src && _react2.default.createElement('img', {
            src: src,
            height: '22',
            alt: srcAltText,
            loading: 'lazy' }),
        _react2.default.createElement(
            'span',
            {
                className: 'consonant-IconWithTextInfobit-text' },
            text
        )
    );
};

IconWithText.defaultProps = defaultProps;

exports.default = IconWithText;

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    src: '',
    href: '',
    text: '',
    linkHint: '',
    srcAltText: '',
    openInNewTab: true
};

/**
 * LinkWithIcon Infobit (shown in 3:2 Card Footer)
 *
 * @component
 * @example
 * const props= {
    href: String,
    openInNewTab: Boolean,
    linkHint: String,
    text: String,
    src: String,
    srcAltText: String,
 * }
 * return (
 *   <LinkWithIcon {...props}/>
 * )
 */
var LinkWithIcon = function LinkWithIcon(_ref) {
    var href = _ref.href,
        openInNewTab = _ref.openInNewTab,
        linkHint = _ref.linkHint,
        text = _ref.text,
        src = _ref.src,
        srcAltText = _ref.srcAltText;
    return _react2.default.createElement(
        'a',
        {
            'daa-ll': text,
            href: href,
            'data-testid': 'consonant-LinkWithIcoInfobit',
            target: openInNewTab ? '_blank' : '_self',
            className: 'consonant-LinkWithIcoInfobit',
            title: linkHint,
            rel: 'noopener noreferrer',
            tabIndex: '0' },
        src && _react2.default.createElement('img', { src: src, alt: srcAltText, loading: 'lazy', height: '18' }),
        _react2.default.createElement(
            'span',
            null,
            text
        )
    );
};

LinkWithIcon.defaultProps = defaultProps;

exports.default = LinkWithIcon;

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _prettyFormat = __webpack_require__(113);

var _prettyFormat2 = _interopRequireDefault(_prettyFormat);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Date Interval Infobit (shown in 3:2 Card Footer)
 *
 * @component
 * @example
 * const props= {
    startTime: String,
    endTime: String,
    locale: String,
    dateFormat: String,
 * }
 * return (
 *   <DateInterval {...props}/>
 * )
 */
var DateInterval = function DateInterval(_ref) {
    var startTime = _ref.startTime,
        endTime = _ref.endTime,
        locale = _ref.locale,
        dateFormat = _ref.dateFormat;

    var prettyDateInterval = (0, _prettyFormat2.default)(startTime, endTime, locale, dateFormat);
    return _react2.default.createElement(
        'span',
        {
            title: prettyDateInterval,
            'data-testid': 'consonant-DateIntervalInfobit',
            className: 'consonant-DateIntervalInfobit' },
        prettyDateInterval
    );
};

exports.default = DateInterval;

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _Tooltip = __webpack_require__(270);

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _hooks = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    saveCardIcon: '',
    unsaveCardIcon: '',
    isBookmarked: false,
    isProductCard: false
};

/**
 * Bookmark Infobit (shown in 3:2 Card Footer)
 * Used to save/unsave a card to local storage
 *
 * @component
 * @example
 * const props= {
    cardId: String,
    isBookmarked: String,
    saveCardIcon: String,
    unsaveCardIcon: String,
    cardSaveText: String,
    cardUnsaveText: String,
    onClick: Function,
    disableBookmarkIco: Boolean,
 * }
 * return (
 *   <Bookmark {...props}/>
 * )
 */
var Bookmark = function Bookmark(_ref) {
    var cardId = _ref.cardId,
        isBookmarked = _ref.isBookmarked,
        saveCardIcon = _ref.saveCardIcon,
        unsaveCardIcon = _ref.unsaveCardIcon,
        onClick = _ref.onClick,
        disableBookmarkIco = _ref.disableBookmarkIco,
        isProductCard = _ref.isProductCard;

    var getConfig = (0, _hooks.useConfig)();
    var showOnCards = getConfig('bookmarks', 'showOnCards');

    /**
     * Authored Configs with defaults for accessibility
     */
    var defaultSaveCardText = 'Add to bookmarks';
    var defaultUnsaveCardText = 'Remove from bookmarks';
    var saveCardText = getConfig('bookmarks', 'i18n.card.saveText') || defaultSaveCardText;
    var unsaveCardText = getConfig('bookmarks', 'i18n.card.unsaveText') || defaultUnsaveCardText;

    var bookmarkInfobitClass = (0, _classnames2.default)({
        'consonant-BookmarkInfobit': true,
        'is-active': isBookmarked,
        'is-disabled': disableBookmarkIco
    });

    var bookmarkIcon = function bookmarkIcon() {
        var cardIcon = isBookmarked ? saveCardIcon : unsaveCardIcon;
        return _react2.default.createElement('span', {
            'data-testid': 'consonant-BookmarkInfobit-ico',
            className: 'consonant-BookmarkInfobit-ico',
            'daa-ll': 'bookmark',
            style: { backgroundImage: cardIcon ? 'url(' + cardIcon + ')' : '' } });
    };

    var handleClick = function handleClick(clickEvt) {
        clickEvt.stopPropagation();
        onClick(cardId);
    };

    var tooltipText = isBookmarked ? unsaveCardText : saveCardText;

    return !isProductCard && showOnCards && _react2.default.createElement(
        'button',
        {
            'data-testid': 'consonant-BookmarkInfobit',
            'data-tooltip-wrapper': true,
            type: 'button',
            className: bookmarkInfobitClass,
            onClick: handleClick,
            tabIndex: '0',
            'aria-label': tooltipText,
            title: tooltipText },
        showOnCards && bookmarkIcon(),
        showOnCards && _react2.default.createElement(_Tooltip2.default, {
            'data-testid': 'consonant-Tooltip',
            text: tooltipText })
    );
};

Bookmark.defaultProps = defaultProps;

exports.default = Bookmark;

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = { text: '' };

/**
 * Tooltip (shown in 3:2 Card Footer -- primarily used with bookmark infobit)
 * Used on hover to indicate to users that they do or not do an actino
 *
 * @component
 * @example
 * const props= {
    text: String,
 * }
 * return (
 *   <Tooltip {...props}/>
 * )
 */
var Tooltip = function Tooltip(_ref) {
    var text = _ref.text;
    return _react2.default.createElement(
        'span',
        {
            className: 'consonant-Tooltip' },
        text
    );
};

Tooltip.defaultProps = defaultProps;

exports.default = Tooltip;

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gated Icon svg
 */
var Gated = function Gated() {
    return _react2.default.createElement(
        "span",
        { className: "consonant-GatedInfobit", "data-testid": "consonant-GatedInfobit" },
        _react2.default.createElement(
            "svg",
            { xmlns: "http://www.w3.org/2000/svg", height: "20", viewBox: "0 0 15 20", width: "15" },
            _react2.default.createElement("path", {
                fill: "#747474",
                d: "M14.38,8.66h-0.62v-2.3c0.06-3.45-2.69-6.3-6.14-6.36c-3.45-0.06-6.3,2.69-6.36,6.14 c0,0.07,0,0.15,0,0.22v2.3H0.63C0.28,8.66,0,8.95,0,9.29c0,0,0,0,0,0v10.07C0,19.71,0.28,20,0.62,20c0,0,0,0,0,0h13.75 c0.35,0,0.63-0.29,0.62-0.63c0,0,0,0,0,0V9.29C15,8.95,14.72,8.66,14.38,8.66C14.38,8.66,14.38,8.66,14.38,8.66z M3.75,6.36 c0-2.07,1.68-3.75,3.75-3.75s3.75,1.68,3.75,3.75v2.3h-7.5V6.36z M8.75,15.09v1.76c0,0.35-0.28,0.63-0.62,0.63c0,0,0,0,0,0H6.88 c-0.35,0-0.63-0.29-0.62-0.63c0,0,0,0,0,0v-1.76c-0.58-0.53-0.78-1.36-0.5-2.09c0.36-0.97,1.43-1.46,2.4-1.1 c0.51,0.19,0.91,0.59,1.1,1.1C9.53,13.73,9.33,14.56,8.75,15.09z" })
        )
    );
};

exports.default = Gated;

/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Immer", function() { return un; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyPatches", function() { return pn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "castDraft", function() { return K; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "castImmutable", function() { return $; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDraft", function() { return ln; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "current", function() { return R; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableAllPlugins", function() { return J; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableES5", function() { return F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableMapSet", function() { return C; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enablePatches", function() { return T; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "finishDraft", function() { return dn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "freeze", function() { return d; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "immerable", function() { return L; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDraft", function() { return r; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDraftable", function() { return t; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nothing", function() { return H; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "original", function() { return e; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "produce", function() { return fn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "produceWithPatches", function() { return cn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setAutoFreeze", function() { return sn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUseProxies", function() { return vn; });
function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(false){var i=Y[n],o=i?"function"==typeof i?i.apply(null,t):i:"unknown error nr: "+n;throw Error("[Immer] "+o)}throw Error("[Immer] minified error nr: "+n+(t.length?" "+t.map((function(n){return"'"+n+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function r(n){return!!n&&!!n[Q]}function t(n){var r;return!!n&&(function(n){if(!n||"object"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,"constructor")&&r.constructor;return t===Object||"function"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!(null===(r=n.constructor)||void 0===r?void 0:r[L])||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&"symbol"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?n.add(t):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)||(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0)),n}function h(){n(2)}function y(n){return null==n||"object"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return"production"==="production"||U||n(0),U}function j(n,r){r&&(b("Patches"),n.u=[],n.s=[],n.v=r)}function g(n){O(n),n.p.forEach(S),n.p=null}function O(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.g=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.O||b("ES5").S(e,r,o),o?(i[Q].P&&(g(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b("Patches").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),g(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o,u=o,a=!1;3===e.i&&(u=new Set(o),o.clear(),a=!0),i(u,(function(r,i){return A(n,e,o,r,i,t,a)})),x(n,o,!1),t&&n.u&&b("Patches").N(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s,v){if("production"!=="production"&&c===o&&n(5),r(c)){var p=M(e,c,s&&i&&3!==i.i&&!u(i.R,a)?s.concat(a):void 0);if(f(o,a,p),!r(p))return;e.m=!1}else v&&o.add(c);if(t(c)&&!y(c)){if(!e.h.D&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),!n.l&&n.h.D&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function N(n,r,t){var e=s(r)?b("MapSet").F(r,t):v(r)?b("MapSet").T(r,t):n.O?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,R:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b("ES5").J(r,t);return(t?t.A:_()).p.push(e),e}function R(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b("ES5").K(u)))return u.t;u.I=!0,e=D(r,c),u.I=!1}else e=D(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function D(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function F(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return"production"!=="production"&&f(r),en.get(r,n)},set:function(r){var t=this[Q];"production"!=="production"&&f(t),en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.g&&n(3,JSON.stringify(p(r)))}var s={};m("ES5",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,""+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,R:{},l:r,t:n,k:i,o:null,g:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&"object"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.R,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c="add";m("Patches",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=i[s];"string"!=typeof p&&"number"!=typeof p&&(p=""+p),0!==v&&1!==v||"__proto__"!==p&&"constructor"!==p||n(24),"function"==typeof f&&"prototype"===p&&n(24),"object"!=typeof(f=a(f,p))&&n(15,i.join("/"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case"replace":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return"-"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case"remove":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},N:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.R,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?"replace":c:"remove";if(v!==p||"replace"!==l){var d=r.concat(n);t.push("remove"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:"remove",path:d}:"remove"===l?{op:c,path:d,value:f(v)}:{op:"replace",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.R,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:"replace",path:p,value:f(u[v])}),e.push({op:"replace",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:"replace",path:r.concat(["length"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:"remove",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:"remove",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:"replace",path:[],value:r===H?void 0:r}),e.push({op:"replace",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.R=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=N(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.g&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,R:void 0,t:n,k:this,C:!1,g:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,"size",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.R.set(n,!0),t.o.set(n,r),t.R.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.R.set(n,!1):r.R.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.R=new Map,i(n.t,(function(r){n.R.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=N(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,g:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,"size",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m("MapSet",{F:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){F(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),X="undefined"!=typeof Map,q="undefined"!=typeof Set,B="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,H=W?Symbol.for("immer-nothing"):((G={})["immer-nothing"]=!0,G),L=W?Symbol.for("immer-draftable"):"__$immer_draftable",Q=W?Symbol.for("immer-state"):"__$immer_state",V="undefined"!=typeof Symbol&&Symbol.iterator||"@@iterator",Y={0:"Illegal state",1:"Immer drafts cannot have computed properties",2:"This object has been frozen and should not be mutated",3:function(n){return"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? "+n},4:"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.",5:"Immer forbids circular references",6:"The first or second argument to `produce` must be a function",7:"The third argument to `produce` must be a function or undefined",8:"First argument to `createDraft` must be a plain object, an array, or an immerable object",9:"First argument to `finishDraft` must be a draft returned by `createDraft`",10:"The given draft is already finalized",11:"Object.defineProperty() cannot be used on an Immer draft",12:"Object.setPrototypeOf() cannot be used on an Immer draft",13:"Immer only supports deleting array indices",14:"Immer only supports setting array indices and the 'length' property",15:function(n){return"Cannot apply patch, path doesn't resolve: "+n},16:'Sets cannot have "replace" patches.',17:function(n){return"Unsupported patch operation: "+n},18:function(n){return"The plugin for '"+n+"' has not been loaded into Immer. To enable the plugin, import and call `enable"+n+"()` when initializing your application."},20:"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available",21:function(n){return"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '"+n+"'"},22:function(n){return"'current' expects a draft, got: "+n},23:function(n){return"'original' expects a draft, got: "+n},24:"Patching reserved attributes like __proto__, prototype and constructor is not allowed"},Z=""+Object.prototype.constructor,nn="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?"value"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=N(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.R[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&(void 0!==t||r in n.o)||Number.isNaN(t)&&Number.isNaN(n.o[r])||(n.o[r]=t,n.R[r]=!0),!0},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.R[r]=!1,E(n),k(n)):delete n.R[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||"length"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return"production"!=="production"&&isNaN(parseInt(t))&&n(13),on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return"production"!=="production"&&"length"!==t&&isNaN(parseInt(t))&&n(14),en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.O=B,this.D=!0,this.produce=function(r,i,o){if("function"==typeof r&&"function"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if("function"!=typeof i&&n(6),void 0!==o&&"function"!=typeof o&&n(7),t(r)){var c=w(e),s=N(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?g(c):O(c)}return"undefined"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw g(c),n})):(j(c,o),P(f,c))}if(!r||"object"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.D&&d(f,!0),o){var p=[],l=[];b("Patches").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if("function"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return"undefined"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},"boolean"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),"boolean"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=R(e));var i=w(this),o=N(this,e,void 0);return o[Q].C=!0,O(i),o},i.finishDraft=function(r,t){var e=r&&r[Q];"production"!=="production"&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.D=n},i.setUseProxies=function(r){r&&!B&&n(20),this.O=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&"replace"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b("Patches").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);/* harmony default export */ __webpack_exports__["default"] = (fn);
//# sourceMappingURL=immer.esm.js.map


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.updateTimeOverride = exports.defineIsUpcoming = exports.defineIsOnDemandScheduled = exports.defineIsOnDemand = exports.defineIsLiveExpired = exports.convertDateStrToMs = exports.eventTiming = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _Helpers = __webpack_require__(21);

var _general = __webpack_require__(6);

/* eslint-disable */
function fixSpaceInDate(date) {
    var time = 'T';
    var splitDate = date.split(' ');

    if (splitDate.length > 1) return '' + splitDate[0] + time + splitDate[1];
    return date;
}

function lcdDateFormat(date) {
    var tTimeDateFix = fixSpaceInDate(date);
    /* eslint-disable no-useless-escape */
    return tTimeDateFix.replace(/([+\-]\d\d)(\d\d)$/, '$1:$2');
    /* eslint-enable no-useless-escape */
}
/* eslint-enable */

// Utility
/**
 * @func convertDateStrToMs
 * @desc Converts Date String to MS
 *
 * @param {String} dateStr, valid date string to be converted
 * @returns {Number} convertDateStrToMs
 */
var convertDateStrToMs = function convertDateStrToMs() {
    var dateStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    if (!dateStr) return 0;

    return new Date(lcdDateFormat(dateStr)).getTime();
};
// TIMING OVERRIDES, mainly for QA, can also support Akamai time in future
/**
 * @func timeOverride
 * @desc Pass in an EPOCH based value in order to override Date.now
 *
 * @returns {Number} either MS from URL param or 0
 */
var timeOverride = function timeOverride() {
    var _window = window,
        _window$location = _window.location;
    _window$location = _window$location === undefined ? {} : _window$location;
    var _window$location$sear = _window$location.search,
        search = _window$location$sear === undefined ? '' : _window$location$sear;

    var _qs$parse = _general.qs.parse(search),
        _qs$parse$servertime = _qs$parse.servertime,
        servertime = _qs$parse$servertime === undefined ? '' : _qs$parse$servertime;

    return servertime ? parseInt(servertime, 10) : undefined;
};
/**
 * @func updateTimeOverride
 * @desc SIDE EFFECT: If timeOverride is used this increments it for next pass
 *
 * @effect overrides URL "timeOverride" param with incremented time
 */
/* eslint-disable no-unused-vars */
var updateTimeOverride = function updateTimeOverride(base, increment) {
    // Build from current href to avoid jsdom Location quirks
    var url = new URL(window.location.href);
    // Remove prior servertime and set new one
    url.searchParams.delete('servertime');
    url.searchParams.append('servertime', String(base + increment));
    window.history.replaceState(null, '', url.toString());
};
// Definitions
/* eslint-disable no-useless-escape */
var liveExpiredRegEx = /[a-zA-Z0-9-]+:[a-zA-Z0-9-\/]+live-expired/;
var isOnDemandScheduledRegEx = /[a-zA-Z0-9-]+:[a-zA-Z0-9-\/]+on-demand-scheduled/;
/* eslint-enable no-useless-escape */
/**
 * @func defineIsLiveExpired
 * @desc Specific "Session (Card)" has "live expired" tag
 *
 * @param {Array} tags current session tags to seach for "live expired" tag
 * @returns {Boolean} isLiveExpired
 */
var defineIsLiveExpired = function defineIsLiveExpired(tags) {
    return (0, _Helpers.hasTag)(liveExpiredRegEx, tags);
};
/**
 * @func defineIsOnDemand
 * @desc Current Time is Greater than EndTime
 *
 * @param {Number} currentTime representation of current time in MS
 * @param {Number} endTime representation of session EndTime in MS
 * @returns {Boolean} isOnDemand
 */
var defineIsOnDemand = function defineIsOnDemand(currentTime, endTimeMls) {
    if (endTimeMls && currentTime) {
        return currentTime >= endTimeMls;
    }

    return false;
};
/**
 * @func defineIsOnDemandScheduled
 * @desc Specific "Session (Card)" has "onDemand scheduled" tag
 *
 * @param {Array} tags current session tags to seach for "onDemand scheduled" tag
 * @returns {Boolean} isLiveExpired
 */
var defineIsOnDemandScheduled = function defineIsOnDemandScheduled(tags) {
    return (0, _Helpers.hasTag)(isOnDemandScheduledRegEx, tags);
};
/**
 * @func defineIsUpcoming
 * @desc Current Time is Less than startTime
 *
 * @param {Number} currentTime representation of current time in MS
 * @param {Number} startTime representation of session StartTime in MS
 * @returns {Boolean} isOnDemand
 */
var defineIsUpcoming = function defineIsUpcoming(currentTime, startTimeMls) {
    if (startTimeMls) {
        return startTimeMls >= currentTime;
    }

    return false;
};

/**
 * @func eventTiming
 * @desc First Sorts sessions by startDate, and then partitions them by category
 *
 * @param {Array} sessions sessions to be sorted
 * @returns {Object} nextTransitionMs, value for setTimeout.
 * visibleSessions, sorted cards/sessions to be rendered.
 */
function eventTiming() {
    var sessions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var eventFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

    if (!sessions.length) return [];

    var overrideTime = timeOverride();

    var nextTransitionMs = void 0;

    function setNextTransitionMs(compareTime, curMs) {
        if (compareTime < curMs) return nextTransitionMs;
        // Therefore current time should be less than transTimeMs
        var countDownMs = compareTime - curMs;
        /* if the countdown > 1 day (86400000ms) do not set a timer
         * The max number of MS a timer can have is 2147483647ms
         * https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout
         */
        if (countDownMs > 86400000) return nextTransitionMs;

        return !nextTransitionMs && countDownMs > 0 || countDownMs < nextTransitionMs ? countDownMs : nextTransitionMs;
    }
    /*
        If msAsNumber from urlState.servertime use this value, otherwise epoch
        from Date.now(). This is mainly an override for QA purposes.
    */
    var timeSinceArrival = performance.now();
    var curMs = overrideTime + timeSinceArrival || Date.now();
    // Stack per category
    var live = [];
    var notTimed = [];
    var onDemand = [];
    var upComing = [];
    /*
        The data has no default order, therefore have to sort according to
        session data before partitioning by category
    */
    sessions.sort(function () {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            aStart = _ref.startDate;

        var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            bStart = _ref2.startDate;

        // "a" is what sort uses for the first item
        // converting the value to MS, therefore aMs
        var aMs = convertDateStrToMs(aStart);
        // "b" is what sort uses for the second item
        // converting the value to MS, therefore aMs
        var bMs = convertDateStrToMs(bStart);

        if (aMs === 0) return 1;

        if (bMs === 0) return -1;

        if (aMs < bMs) return -1;

        if (aMs > bMs) return 1;

        return 0;
    }).forEach(function () {
        var session = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var endDate = session.endDate,
            startDate = session.startDate,
            _session$tags = session.tags,
            tags = _session$tags === undefined ? [] : _session$tags;
        // Session Times in milliseconds

        var endMs = convertDateStrToMs(endDate);
        var startMs = convertDateStrToMs(startDate);
        // Timed categories
        var isTimed = !!(endMs && startMs);
        var isUpComing = isTimed ? defineIsUpcoming(curMs, startMs) : false;
        var isOnDemand = isTimed && !isUpComing ? defineIsOnDemand(curMs, endMs) : false;
        var isLive = !!(isTimed && !isUpComing && !isOnDemand && startMs);
        // Tagged Exceptions
        var isOnDemandScheduled = defineIsOnDemandScheduled(tags);
        var isLiveExpired = defineIsLiveExpired(tags);

        // Cards with no Date information, pushed to back of stack
        if (!isTimed) {
            notTimed.push(session);
        }

        // Upcoming and not tagged with On Demand Scheduled tag
        if (isUpComing && isTimed && !isOnDemandScheduled) {
            var upComingTransition = setNextTransitionMs(startMs, curMs);

            upComing.push(session);
            // GET Upcoming Badge here
            nextTransitionMs = upComingTransition && upComingTransition > 0 ? upComingTransition : nextTransitionMs;
        }
        // On demand and not tagged with Live Expired tag
        if (isOnDemand && isTimed && !isLiveExpired) {
            // Get OnDemand Badge here
            onDemand.push(session);
        }
        // Currently Live
        if (isLive && isTimed) {
            var liveTransition = setNextTransitionMs(startMs, curMs);

            live.push(session);
            // GET Live Badge here
            nextTransitionMs = liveTransition && liveTransition > 0 ? liveTransition : nextTransitionMs;
        }

        /* istanbul ignore if */
        if (isUpComing && isOnDemandScheduled && isTimed) {
            var odTransition = setNextTransitionMs(startMs, curMs);

            nextTransitionMs = odTransition && odTransition > 0 ? odTransition : nextTransitionMs;
        }
    });
    // If no transitions are needed zero out transition time
    if (!live.length && !upComing.length || !nextTransitionMs) {
        nextTransitionMs = 0;
    }

    if (overrideTime && nextTransitionMs) {
        // TO BE REFACTORED AFTER MAX -- commented out for now:
        // This line of code causes the following bugs:
        // 1. It always updates the query param (time) to be ahead of what should be shown
        // 2. It triggers additional time transitions on  load more clicks, pagination, etc.
        // updateTimeOverride(curMs, nextTransitionMs);
    }

    var cards = [];
    if (eventFilter.length === 0) {
        cards = [].concat(live, upComing, onDemand, notTimed);
        return _extends({
            visibleSessions: cards
        }, nextTransitionMs && { nextTransitionMs: nextTransitionMs });
    }if (eventFilter.indexOf('live') > -1) {
        cards = cards.concat(live);
    }if (eventFilter.indexOf('upcoming') > -1) {
        cards = cards.concat(upComing);
    }if (eventFilter.indexOf('on-demand') > -1) {
        cards = cards.concat(onDemand);
    }if (eventFilter.indexOf('not-timed') > -1) {
        cards = cards.concat(notTimed);
    }

    /*
        returns object
        - conditionally adds next sort transition time to returns
        - returns an Array of cards sorted by Category and then Date ASC
    */
    return _extends({
        visibleSessions: cards
    }, nextTransitionMs && { nextTransitionMs: nextTransitionMs });
}

exports.eventTiming = eventTiming;
exports.convertDateStrToMs = convertDateStrToMs;
exports.defineIsLiveExpired = defineIsLiveExpired;
exports.defineIsOnDemand = defineIsOnDemand;
exports.defineIsOnDemandScheduled = defineIsOnDemandScheduled;
exports.defineIsUpcoming = defineIsUpcoming;
exports.updateTimeOverride = updateTimeOverride;

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    link: '',
    target: '',
    title: '',
    ariaHidden: false,
    getsFocus: false,
    daa: ''
};

/**
 * Link Blocker
 *
 * @component
 * @example
 * const props= {
    link: String,
    target: String,
    title: String,
    daa: String,
 * }
 * return (
 *   <LinkBlocker {...props}/>
 * )
 */
var LinkBlocker = function LinkBlocker(props) {
    var link = props.link,
        target = props.target,
        title = props.title,
        getsFocus = props.getsFocus,
        ariaHidden = props.ariaHidden,
        daa = props.daa;

    return (
        // eslint-disable-next-line jsx-a11y/anchor-has-content
        _react2.default.createElement('a', {
            href: link,
            target: target,
            rel: 'noopener noreferrer',
            'aria-label': title,
            'aria-hidden': ariaHidden,
            tabIndex: !ariaHidden && getsFocus ? 0 : -1,
            'daa-ll': daa,
            className: 'consonant-LinkBlocker' })
    );
};

LinkBlocker.defaultProps = defaultProps;

exports.default = LinkBlocker;

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _hooks = __webpack_require__(5);

var _lana = __webpack_require__(48);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isValidURL(string) {
    try {
        // eslint-disable-next-line no-new
        new URL(string);
        return true;
    } catch (_) {
        return false;
    }
}

function transformLink(url, patterns) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = patterns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var pattern = _step.value;

            var regex = new RegExp(pattern.from);
            if (regex.test(url)) {
                return url.replace(regex, pattern.to);
            }
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }

    return url;
}

function transformNestedProps(obj, hostnameTransforms) {
    var seen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new WeakSet();

    // Skips React elements as they contain cycles
    if ((0, _react.isValidElement)(obj)) {
        return obj;
    }
    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) {
        return typeof obj === 'string' && isValidURL(obj) ? transformLink(obj, hostnameTransforms) : obj;
    }
    if (Array.isArray(obj)) {
        return obj.map(function (item) {
            return transformNestedProps(item, hostnameTransforms, seen);
        });
    }

    if (seen.has(obj)) {
        return obj;
    }
    seen.add(obj);

    var newObj = {};
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
        for (var _iterator2 = Object.entries(obj)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var _ref = _step2.value;

            var _ref2 = _slicedToArray(_ref, 2);

            var key = _ref2[0];
            var value = _ref2[1];

            if (typeof value === 'string' && isValidURL(value)) {
                newObj[key] = transformLink(value, hostnameTransforms, seen);
            } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null) {
                newObj[key] = transformNestedProps(value, hostnameTransforms, seen);
            } else {
                newObj[key] = value;
            }
        }
    } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
            }
        } finally {
            if (_didIteratorError2) {
                throw _iteratorError2;
            }
        }
    }

    return newObj;
}

function getLocalStorageSettings() {
    try {
        var settings = localStorage.getItem('linkTransformerSettings');
        return settings ? JSON.parse(settings) : {};
    } catch (error) {
        (0, _lana.logLana)({ message: 'Error reading from localStorage:', tags: 'linkTransformer', e: error }); // here
        return {}; // here
    }
}

function withLinkTransformer(Component) {
    return function WrappedComponent(props) {
        var getConfig = (0, _hooks.useConfig)();
        var configEnabled = getConfig('linkTransformer', 'enabled') || false;
        var configHostnameTransforms = getConfig('linkTransformer', 'hostnameTransforms') || [];

        var localStorageSettings = getLocalStorageSettings();
        // eslint-disable-next-line max-len
        var localStorageEnabled = localStorageSettings && localStorageSettings.enabled !== undefined ? localStorageSettings.enabled : false;

        var enabled = configEnabled || localStorageEnabled;
        // eslint-disable-next-line max-len
        var haveLocalStorageHostnameTransforms = localStorageEnabled && localStorageSettings.hostnameTransforms;
        // eslint-disable-next-line max-len
        var hostnameTransforms = haveLocalStorageHostnameTransforms ? localStorageSettings.hostnameTransforms : configHostnameTransforms;

        var transformedProps = _react2.default.useMemo(function () {
            if (!enabled) return props;
            return transformNestedProps(props, hostnameTransforms);
        }, [enabled, hostnameTransforms, props]);

        return _react2.default.createElement(Component, transformedProps);
    };
}

exports.default = withLinkTransformer;

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _rendering = __webpack_require__(38);

var _hooks = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    description: '',
    replaceValue: ''
};

/**
 * No results message that is shown when search returned 0 results;
 *
 * @component
 * @example
 * const props= {
    title: String
    description: String,
    replaceValue: String,
 * }
 * return (
 *   <NoResultsView {...props}/>
 * )
 */
var View = function View(props) {
    var title = props.title,
        description = props.description,
        replaceValue = props.replaceValue;


    var getConfig = (0, _hooks.useConfig)();

    var displayMsg = (0, _rendering.RenderDisplayMsg)(description, replaceValue);
    var useLightText = getConfig('collection', 'useLightText');

    /**
     * Class name for the NoResultsView:
     * whether we should apply dark or light theme
     * @type {String}
     */
    var noResultsViewClass = (0, _classnames2.default)({
        'consonant-NoResultsView': true,
        'consonant-NoResultsView--withLightText': useLightText
    });

    return _react2.default.createElement(
        'div',
        {
            'data-testid': 'consonant-NoResultsView',
            className: noResultsViewClass },
        _react2.default.createElement(
            'strong',
            {
                className: 'consonant-NoResultsView-title' },
            title
        ),
        description && _react2.default.createElement(
            'div',
            {
                className: 'consonant-NoResultsView-description' },
            displayMsg
        )
    );
};

View.defaultProps = defaultProps;

exports.default = View;

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _hooks = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Load More - Button That Naviates Users To The Next Page
 *
 * @component
 * @example
 * const props= {
    show: Int,
    total: Int,
    onClick: Function,
 * }
 * return (
 *   <LoadMore {...props}/>
 * )
 */
var LoadMore = function LoadMore(_ref) {
    var show = _ref.show,
        total = _ref.total,
        onClick = _ref.onClick;

    var getConfig = (0, _hooks.useConfig)();

    /**
     * Authored Button Style
     * @type {String}
     */
    var loadMoreButtonStyle = getConfig('pagination', 'loadMoreButton.style');

    /**
     * Whether we should show the quantity of results shown
     * @type {string}
     */
    var showQuantity = getConfig('pagination', 'resultsQuantityShown');

    /**
     * Whether we should apply theme "Three" for the load more button;
     * @type {String}
     */
    var useThemeThree = getConfig('pagination', 'loadMoreButton.useThemeThree');

    /**
     * Authored Button Text
     * @type {String}
     */
    var loadMoreButtonText = getConfig('pagination', 'i18n.loadMore.btnText');

    /**
     * Authored Summary Text
     * @type {String}
     */
    var loadMoreQuantityText = getConfig('pagination', 'i18n.loadMore.resultsQuantityText');

    /**
     * Class name for the load more component:
     * whether it should be primary or over background;
     * @type {String}
     */
    var loadMoreClass = (0, _classnames2.default)({
        'consonant-LoadMore': true,
        'consonant-LoadMore--overBg': loadMoreButtonStyle === 'over-background' && !useThemeThree,
        'consonant-LoadMore--themeThree': useThemeThree
    });

    /**
     * Summary Of Load More Results To Show To Users
     * @type {String}
     */
    var summaryText = loadMoreQuantityText.replace('{start}', show).replace('{end}', total);

    var shouldDisplayLoadMore = show > 0 && total > 0;
    var shouldDisplayLoadMoreBtn = show < total;

    return shouldDisplayLoadMore ? _react2.default.createElement(
        'div',
        {
            'data-testid': 'consonant-LoadMore',
            className: loadMoreClass },
        _react2.default.createElement(
            'div',
            { className: 'consonant-LoadMore-inner' },
            showQuantity && _react2.default.createElement(
                'p',
                {
                    'data-testid': 'consonant-LoadMore-text',
                    className: 'consonant-LoadMore-text' },
                summaryText
            ),
            shouldDisplayLoadMoreBtn && _react2.default.createElement(
                'button',
                {
                    type: 'button',
                    'data-testid': 'consonant-LoadMore-btn',
                    'daa-ll': loadMoreButtonText,
                    className: 'consonant-LoadMore-btn',
                    onClick: onClick,
                    tabIndex: '0' },
                loadMoreButtonText
            )
        )
    ) : null;
};

exports.default = LoadMore;

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _hooks = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    showBookmarks: false,
    savedCardsCount: 0
};

/**
 * Bookmarks button with the icon and quanity of the bookmarked cards
 *
 * @component
 * @example
 * const props= {
    showBookmarks: Boolean,
    onClick: Function,
    savedCardsCount: Number,
 * }
 * return (
 *   <Bookmarks {...props}/>
 * )
 */
var Bookmarks = function Bookmarks(props) {
    var onClick = props.onClick,
        showBookmarks = props.showBookmarks,
        savedCardsCount = props.savedCardsCount;


    var getConfig = (0, _hooks.useConfig)();

    /**
     **** Authored Configs ****
     */
    var bookmarkTitle = getConfig('bookmarks', 'i18n.leftFilterPanel.filterTitle');
    var bookmarkSelectedIcon = getConfig('bookmarks', 'leftFilterPanel.selectBookmarksIcon');
    var bookmarkUnselectedIcon = getConfig('bookmarks', 'leftFilterPanel.unselectBookmarksIcon');

    /**
     * Whether the bookmarks icon should be selected or not
     * @type {String}
     */
    var bookmarkIcon = showBookmarks ? bookmarkSelectedIcon : bookmarkUnselectedIcon;

    /**
     * Background image CSS styles for the bookmarks icon
     * @type {Object}
     */
    var iconStyles = {
        backgroundImage: bookmarkIcon ? 'url(' + bookmarkIcon + ')' : ''
    };

    /**
     * Class name for the bookmarks button:
     * CSS that handles whether the bookmarks icon is selected or not
     * @type {String}
     */
    var bookmarkClass = (0, _classnames2.default)({
        'consonant-Bookmarks': true,
        'is-selected': showBookmarks
    });

    return _react2.default.createElement(
        'button',
        {
            'data-testid': 'consonant-Bookmarks',
            type: 'button',
            onClick: onClick,
            className: bookmarkClass,
            tabIndex: '0' },
        _react2.default.createElement(
            'span',
            {
                className: 'consonant-Bookmarks-icoWrapper' },
            _react2.default.createElement('span', {
                style: iconStyles,
                className: 'consonant-Bookmarks-ico',
                'data-testid': 'consonant-Bookmarks-ico' }),
            _react2.default.createElement(
                'span',
                {
                    className: 'consonant-Bookmarks-title' },
                bookmarkTitle
            )
        ),
        _react2.default.createElement(
            'span',
            {
                'data-testid': 'consonant-Bookmarks-itemBadge',
                className: 'consonant-Bookmarks-itemBadge' },
            savedCardsCount
        )
    );
};

Bookmarks.defaultProps = defaultProps;

exports.default = Bookmarks;

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _hooks = __webpack_require__(5);

var _general = __webpack_require__(6);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Paginator - handles navigating between pages 1 to n for users
 *
 * @component
 * @example
 * const props= {
    pageCount: Int,
    currentPageNumber: Int,
    totalPages: Int,
    onClick: Function,
    showItemsPerPage: Boolean,
    totalResults: Int,
 * }
 * return (
 *   <Paginator {...props}/>
 * )
 */
var Paginator = function Paginator(props) {
    var pageCount = props.pageCount,
        currentPageNumber = props.currentPageNumber,
        totalPages = props.totalPages,
        onClick = props.onClick,
        showItemsPerPage = props.showItemsPerPage,
        totalResults = props.totalResults;


    var getConfig = (0, _hooks.useConfig)();

    /**
     * Authored Quantity Text
     * @type {String}
     */
    var quantityText = getConfig('pagination', 'i18n.paginator.resultsQuantityText');

    /**
     * Whether we should show the quantity of results shown
     * @type {string}
     */
    var showQuantity = getConfig('pagination', 'resultsQuantityShown');

    /**
     * Authored Previous Label
     * @type {String}
     */
    var prevLabel = getConfig('pagination', 'i18n.paginator.prevLabel');

    /**
     * Authored Next Label
     * @type {String}
     */
    var nextLabel = getConfig('pagination', 'i18n.paginator.nextLabel');

    /**
     * Use Light Text
     * @type {String}
     */
    var useLightText = getConfig('collection', 'useLightText');

    /**
     * pagination - used for aria group label
     * @type {String}
     */
    var pagination = getConfig('pagination', 'i18n.paginator.pagination');

    /**
     * Start and end indexes of pages to build
     * @type {Int, Int}
     */

    var _getPageStartEnd = (0, _general.getPageStartEnd)(currentPageNumber, pageCount, totalPages),
        _getPageStartEnd2 = _slicedToArray(_getPageStartEnd, 2),
        pageStart = _getPageStartEnd2[0],
        pageEnd = _getPageStartEnd2[1];
    /**
     * Range of pages to build
     * @type {Array}
     */


    var pageRange = (0, _general.generateRange)(pageStart, pageEnd);

    var BASE_10 = 10;
    var nextPageNotNegative = currentPageNumber - 1 > 0;
    var nextPageNotOutOfBounds = currentPageNumber + 1 < totalPages;

    /**
     * GlobalNab height needed for scrolling
     */
    var globalNavHeight = (0, _general.getGlobalNavHeight)();

    /**
     * Handles click of prev, next or number button
     *
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleClick = function handleClick(clickEvt) {
        var target = clickEvt.target;


        clickEvt.preventDefault();

        var nextPage = null;
        var previousButtonClicked = target.classList.contains('consonant-Pagination-btn--prev');
        var nextButtonClicked = target.classList.contains('consonant-Pagination-btn--next');

        if (previousButtonClicked) {
            nextPage = nextPageNotNegative ? currentPageNumber - 1 : 1;
        } else if (nextButtonClicked) {
            nextPage = nextPageNotOutOfBounds ? currentPageNumber + 1 : totalPages;
        } else {
            nextPage = parseInt(target.firstChild.nodeValue, BASE_10);
        }
        var caasWrapper = target.closest('.consonant-Wrapper') || target.closest('section');
        if (caasWrapper && caasWrapper.getBoundingClientRect().y < 0) {
            var scrollTargetPosition = caasWrapper.getBoundingClientRect().top + window.scrollY - globalNavHeight;
            window.scrollTo({ left: 0, top: scrollTargetPosition, behavior: 'smooth' });
        }
        onClick(nextPage);
    };

    /**
     * Summary Of Pagination Results
     * @type {String}
     */
    var paginationSummary = quantityText.replace('{start}', (0, _general.getStartNumber)(currentPageNumber, showItemsPerPage)).replace('{end}', (0, _general.getEndNumber)(currentPageNumber, showItemsPerPage, totalResults)).replace('{total}', totalResults);

    return _react2.default.createElement(
        'div',
        {
            role: 'group',
            'aria-labelledby': pagination || 'pagination',
            className: useLightText ? 'consonant-Pagination lightText' : 'consonant-Pagination' },
        _react2.default.createElement(
            'div',
            {
                className: 'consonant-Pagination-paginator' },
            _react2.default.createElement(
                'button',
                {
                    'data-testid': 'consonant-Pagination-btn--prev',
                    onClick: handleClick,
                    type: 'button',
                    className: 'consonant-Pagination-btn consonant-Pagination-btn--prev',
                    tabIndex: '0' },
                prevLabel
            ),
            _react2.default.createElement(
                'ul',
                {
                    className: 'consonant-Pagination-items' },
                pageRange.map(function (item) {
                    return _react2.default.createElement(
                        'li',
                        {
                            key: item,
                            className: currentPageNumber === item ? 'consonant-Pagination-item is-active' : 'consonant-Pagination-item' },
                        _react2.default.createElement(
                            'button',
                            {
                                'data-testid': 'consonant-Pagination-itemBtn',
                                onClick: handleClick,
                                type: 'button',
                                className: 'consonant-Pagination-itemBtn',
                                tabIndex: '0' },
                            item
                        )
                    );
                })
            ),
            _react2.default.createElement(
                'button',
                {
                    'data-testid': 'consonant-Pagination-btn--next',
                    onClick: handleClick,
                    type: 'button',
                    className: 'consonant-Pagination-btn consonant-Pagination-btn--next',
                    tabIndex: '0' },
                nextLabel
            )
        ),
        showQuantity && _react2.default.createElement(
            'div',
            {
                'data-testid': 'consonant-Pagination-summary',
                className: 'consonant-Pagination-summary' },
            _react2.default.createElement(
                'strong',
                null,
                paginationSummary
            )
        )
    );
};

exports.default = Paginator;

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Helpers = __webpack_require__(21);

var _constants = __webpack_require__(14);

var _cards = __webpack_require__(281);

var _general = __webpack_require__(6);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class that will constrain result set based on current state of the component
 *
 * @export
 * @class CardFilterer
 */
var CardFilterer = function () {
    /**
     * Creates an instance of a CardFilterer
     *
     * @param {*} cardsToFilter
     * @param {*} randomSortId
     * @param {*} reservoirSize
     * @memberof CardFilterer
     */
    function CardFilterer(cardsToFilter, randomSortId, sampleSize, reservoirSize) {
        var ids = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];

        _classCallCheck(this, CardFilterer);

        this.sampleSize = sampleSize;
        this.filteredCards = cardsToFilter;
        this.randomSortId = randomSortId;
        this.reservoirSize = reservoirSize;
        this.featuredCards = (0, _Helpers.getFeaturedCards)(ids, this.filteredCards);
    }

    /**
     * Given a set of filters a user selected, this method will return all cards that contain
     * those filtlers
     *
     * @param {*} activeFilters
     * @param {*} activePanels
     * @param {*} filterType
     * @param {*} filterTypes
     * @return {*} Chainable
     * @memberof CardFilterer
     */


    _createClass(CardFilterer, [{
        key: 'filterCards',
        value: function filterCards(activeFilters, activePanels, filterType, filterTypes, currCategories) {
            this.filteredCards = (0, _Helpers.getFilteredCards)(this.filteredCards, activeFilters, activePanels, filterType, filterTypes, currCategories);
            return this;
        }

        /**
         * Given a user search query and the fields to search, this method will return all cards that
         * match that query.
         *
         * @param {*} searchQuery
         * @param {*} searchFields
         * @return {*} Chainable
         * @memberof CardFilterer
         */

    }, {
        key: 'searchCards',
        value: function searchCards(searchQuery, searchFields, cardStyle) {
            var query = searchQuery.trim().toLowerCase();
            var cardsMatchingSearch = (0, _Helpers.getCardsMatchingSearch)(searchQuery, this.filteredCards, searchFields);

            if (query.length >= 3 && cardStyle !== 'custom-card') {
                this.filteredCards = cardsMatchingSearch.map(function (card) {
                    return searchFields.reduce(function (baseCard, searchField) {
                        return (0, _Helpers.highlightCard)(baseCard, searchField, query);
                    }, card);
                });
            } else {
                this.filteredCards = cardsMatchingSearch;
            }

            return this;
        }

        /**
         * This method will return a chainable of all cards sorted by a given sort option
         *
         * @param {*} sortOption
         * @return {*} Chainable
         * @memberof CardFilterer
         */

    }, {
        key: 'sortCards',
        value: function sortCards(sortOption) {
            var eventFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
            var featuredCardIds = arguments[2];
            var hideCtaIds = arguments[3];
            var isFirstLoad = arguments[4];

            if (!this.filteredCards.length) return this;

            var sortType = sortOption ? sortOption.sort.toLowerCase() : null;
            if (eventFilter.length > 0) {
                var _getEventSort = (0, _Helpers.getEventSort)(this.filteredCards, eventFilter),
                    _getEventSort$visible = _getEventSort.visibleSessions,
                    visibleSessions = _getEventSort$visible === undefined ? [] : _getEventSort$visible;

                this.filteredCards = visibleSessions;
            }
            switch (sortType) {
                case _constants.SORT_TYPES.DATEASC:
                    this.filteredCards = (0, _Helpers.getDateAscSort)(this.filteredCards);
                    break;
                case _constants.SORT_TYPES.DATEDESC:
                    this.filteredCards = (0, _Helpers.getDateDescSort)(this.filteredCards);
                    break;
                case _constants.SORT_TYPES.MODIFIEDDESC:
                    this.filteredCards = (0, _Helpers.getModifiedDescSort)(this.filteredCards);
                    break;
                case _constants.SORT_TYPES.MODIFIEDASC:
                    this.filteredCards = (0, _Helpers.getModifiedAscSort)(this.filteredCards);
                    break;
                case _constants.SORT_TYPES.EVENTSORT:
                    {
                        var _getEventSort2 = (0, _Helpers.getEventSort)(this.filteredCards, eventFilter),
                            nextTransitionMs = _getEventSort2.nextTransitionMs,
                            _getEventSort2$visibl = _getEventSort2.visibleSessions,
                            _visibleSessions = _getEventSort2$visibl === undefined ? [] : _getEventSort2$visibl;

                        this.filteredCards = _visibleSessions;

                        if (nextTransitionMs > 0) {
                            this.nextTransitionMs = nextTransitionMs;
                        } else {
                            this.nextTransitionMs = 0;
                        }

                        break;
                    }
                case _constants.SORT_TYPES.FEATURED:
                    this.filteredCards = (0, _Helpers.getFeaturedSort)(this.filteredCards);
                    break;
                case _constants.SORT_TYPES.TITLEASC:
                    this.filteredCards = (0, _Helpers.getTitleAscSort)(this.filteredCards);
                    break;
                case _constants.SORT_TYPES.TITLEDESC:
                    this.filteredCards = (0, _Helpers.getTitleDescSort)(this.filteredCards);
                    break;
                case _constants.SORT_TYPES.RANDOM:
                    this.filteredCards = (0, _Helpers.getRandomSort)(this.filteredCards, this.randomSortId, this.sampleSize, this.reservoirSize);
                    break;
                default:
                    break;
            }
            if (isFirstLoad || sortType === _constants.SORT_TYPES.FEATURED) {
                this.filteredCards = (0, _general.removeDuplicatesByKey)(this.featuredCards.concat(this.filteredCards), 'id');
            }
            return this;
        }
        /**
         * If cards were authored to be shown or hidden based off a given date range, this method
         * constrains the result set to only cards that should be shown within that date interval.
         *
         * @return {*} Chainable
         * @memberof CardFilterer
         */

    }, {
        key: 'keepCardsWithinDateRange',
        value: function keepCardsWithinDateRange() {
            if (!this.filteredCards.length) return this;

            this.filteredCards = (0, _cards.filterCardsByDateRange)(this.filteredCards);

            return this;
        }
        /**
         * If a bookmark only collection is authored, this method will constrain result set to only
         * cards that were saved.
         *
         * @param {*} onlyShowBookmarks
         * @param {*} bookmarkedCardIds
         * @param {*} showBookmarks
         * @return {*} Chainable
         * @memberof CardFilterer
         */

    }, {
        key: 'keepBookmarkedCardsOnly',
        value: function keepBookmarkedCardsOnly(onlyShowBookmarks, bookmarkedCardIds, showBookmarks) {
            if (onlyShowBookmarks || showBookmarks) {
                this.filteredCards = this.filteredCards.filter(function (card) {
                    return bookmarkedCardIds.includes(card.id);
                });
            }
            return this;
        }
    }, {
        key: 'removeCards',
        value: function removeCards(ids) {
            this.filteredCards = this.filteredCards.filter(function (card) {
                return !ids.has(card.id);
            });
            return this;
        }

        /**
         * If a total card limit is authored, this method will truncate returned cards to adhere to
         * that limit.
         *
         * @param {*} totalCardLimit
         * @return {*} Chainable
         * @memberof CardFilterer
         */

    }, {
        key: 'truncateList',
        value: function truncateList(totalCardLimit) {
            if (!this.filteredCards.length) return this;

            this.filteredCards = (0, _general.truncateList)(totalCardLimit, this.filteredCards);

            return this;
        }
    }]);

    return CardFilterer;
}();

exports.default = CardFilterer;

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.filterCardsByDateRange = exports.getCardDate = undefined;

var _general = __webpack_require__(6);

/**
 * Converts date to milliseconds
 * @param {String} date - date as a string
 * @returns {Number} - a number representing the milliseconds elapsed between
 * 1 January 1970 00:00:00 UTC and the given date
 */
var getCardDate = exports.getCardDate = function getCardDate(date) {
  return new Date(date).getTime();
};

/**
 * Removes cards that are outside the show card date window set in the card
 * @param {Array} cards - cards array
 * @returns {Array} - All cards that are inside the show card date window
 */
var filterCardsByDateRange = exports.filterCardsByDateRange = function filterCardsByDateRange() {
  var cards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

  var currentDate = new Date().getTime();

  return cards.filter(function (card) {
    var showCardFromField = (0, _general.getByPath)(card, 'showCard.from', '');
    var showCardUntilField = (0, _general.getByPath)(card, 'showCard.until', '');

    if (!showCardFromField || !showCardUntilField) return true;

    var showCardFromDate = getCardDate(showCardFromField);
    var showCardUntilDate = getCardDate(showCardUntilField);

    return currentDate >= showCardFromDate && currentDate <= showCardUntilDate;
  });
};

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _config = __webpack_require__(19);

var _SearchIcon = __webpack_require__(283);

var _SearchIcon2 = _interopRequireDefault(_SearchIcon);

var _Group = __webpack_require__(284);

var _rendering = __webpack_require__(38);

var _general = __webpack_require__(6);

var _hooks = __webpack_require__(5);

var _constants = __webpack_require__(14);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    resQty: 0,
    filters: [],
    searchQuery: '',
    showLimitedFiltersQty: false
};

/**
 * Top filters panel
 *
 * @component
 * @example
 * const props= {
    filters: Array,
    resQty: Number,
    onCheckboxClick: Function,
    onFilterClick: Function,
    onClearAllFilters: Function,
    onClearFilterItems: Function,
    showLimitedFiltersQty: Boolean,
    onShowAllClick: Function,
    windowWidth: Number,
    searchComponent: Node,
    sortComponent: Node,
    filterPanelEnabled: Boolean,
 * }
 * return (
 *   <FiltersPanelTop {...props}/>
 * )
 */
var FiltersPanelTop = function FiltersPanelTop(props) {
    var filters = props.filters,
        resQty = props.resQty,
        onCheckboxClick = props.onCheckboxClick,
        onFilterClick = props.onFilterClick,
        onClearAllFilters = props.onClearAllFilters,
        onClearFilterItems = props.onClearFilterItems,
        showLimitedFiltersQty = props.showLimitedFiltersQty,
        onShowAllClick = props.onShowAllClick,
        windowWidth = props.windowWidth,
        searchComponent = props.searchComponent,
        searchQuery = props.searchQuery,
        sortComponent = props.sortComponent,
        filterPanelEnabled = props.filterPanelEnabled;


    var getConfig = (0, _hooks.useConfig)();

    /**
     **** Authored Configs ****
     */
    var searchEnabled = getConfig('search', 'enabled');
    var searchTitle = getConfig('search', 'i18n.leftFilterPanel.searchTitle');
    var clearFilterText = getConfig('filterPanel', 'i18n.topPanel.mobile.group.clearFilterText');
    var clearAllFiltersText = getConfig('filterPanel', 'i18n.topPanel.clearAllFiltersText');
    var blurMobileFilters = getConfig('filterPanel', 'topPanel.mobile.blurFilters');
    var showTotalResults = getConfig('collection', 'showTotalResults');
    var showTotalResultsText = getConfig('collection', 'i18n.totalResultsText');
    var sortEnabled = getConfig('sort', 'enabled');
    var sortOptions = getConfig('sort', 'options');
    var filterGroupLabel = getConfig('filterPanel', 'i18n.topPanel.groupLabel');
    var moreFiltersBtnText = getConfig('filterPanel', 'i18n.topPanel.moreFiltersBtnText');
    var HeadingLevel = getConfig('collection', 'i18n.titleHeadingLevel');
    var title = getConfig('collection', 'i18n.title');
    var useLightText = getConfig('collection', 'useLightText');
    var layoutContainer = getConfig('collection', 'layout.container');
    var isCategoryPage = layoutContainer === 'categories';

    /**
     * Top search bar identifier
     * @type {String}
     */
    var searchId = 'top-search';

    /**
     **** Hooks ****
     */

    /**
     * @typedef {String} openExpandableState - Id of the <Search /> component
     * @description — defined in the searchId constant
     *
     * @typedef {Function} ExpandableToggleSetter - Handles toggling opened/closed state of
     * the <Search /> component
     * @description
     *
     * @type {[String, Function]} openExpandable
     */

    var _useExpandable = (0, _hooks.useExpandable)(searchId),
        _useExpandable2 = _slicedToArray(_useExpandable, 2),
        openExpandable = _useExpandable2[0],
        handleExpandableToggle = _useExpandable2[1];

    /**
     **** Constants ****
     */

    /**
     * Total results HTML
     * @type {Array}
     */


    var totalResultsHtml = (0, _rendering.RenderTotalResults)(showTotalResultsText, resQty);

    /**
     * Whether at least one filter is selected
     * @type {Boolean}
     */
    var atleastOneFilterSelected = (0, _general.isAtleastOneFilterSelected)(filters);

    /**
     * Whether the current viewport width fits mobile devices or tablets
     * @type {Boolean}
     */
    var TABLET_OR_MOBILE_SCREEN_SIZE = windowWidth < _constants.TABLET_MIN_WIDTH;

    /**
     * Whether the current viewport width fits tablets or desktops/laptops
     * @type {Boolean}
     */
    var TABLET_OR_DESKTOP_SCREEN_SIZE = windowWidth >= _constants.TABLET_MIN_WIDTH;

    /**
     * Whether we should hide all filters after quantity defined in MAX_TRUNCATED_FILTERS constant
     * @type {Boolean}
     */
    var shouldHideSomeFilters = layoutContainer !== 'categories' && filters.length > _constants.MAX_TRUNCATED_FILTERS;

    /**
     * Whether the sort dropdown should be displayed
     * @type {Boolean}
     */
    var shouldDisplaySortComponent = sortEnabled && sortOptions.length > 0;

    /**
     * Whether the filters should be displayed
     * @type {Boolean}
     */
    var shouldDisplayFilters = filters.length > 0 && filterPanelEnabled;

    /**
     * Whether the "Show all filters" button should be displayed
     * @type {Boolean}
     */
    var shouldDisplayMoreFiltersBtn = shouldHideSomeFilters && TABLET_OR_DESKTOP_SCREEN_SIZE && showLimitedFiltersQty;

    /**
     * Whether the title of the collection and the quantity of the filtered cards
     * should be displayed
     * @type {Boolean}
     */
    var shouldDisplayCollectionInfo = (title || showTotalResults) && !isCategoryPage;

    /**
     * Whether the search bar should be displayed
     * @type {Boolean}
     */
    var shouldDisplaySearchBar = searchEnabled && searchComponent && TABLET_OR_MOBILE_SCREEN_SIZE;

    /**
     * Whether the "Clear all filters" button should be displayed
     * @type {Boolean}
     */
    var shouldShowClearButtonWrapper = atleastOneFilterSelected || filters.length >= _constants.MIN_FILTERS_SHOW_BG;

    /**
     * Class name for the top filters:
     * whether we should apply dark or light theme
     * @type {String}
     */
    var topFiltersClass = (0, _classnames2.default)({
        'consonant-TopFilters': true,
        'consonant-TopFilters--withLightText': useLightText
    });

    /**
     * Class name for the top filters:
     * whether we should hide all filters after quantity defined in MAX_TRUNCATED_FILTERS constant
     * @type {String}
     */
    var showLimitedFiltersQtyClass = (0, _classnames2.default)({
        'consonant-TopFilters-filters': true,
        'consonant-TopFilters-filters--truncated': showLimitedFiltersQty
    });

    /**
     * Class name for the "Clear filters" button:
     * whether the blur effect should be applied to the container
     * @type {String}
     */
    var clearBtnWrapperClass = (0, _classnames2.default)({
        'consonant-TopFilters-clearBtnWrapper': true,
        'consonant-TopFilters-clearBtnWrapper--withBlur': blurMobileFilters && filters.length > 1
    });

    /**
     * Whether the search bar should be visible
     * @type {Boolean}
     */
    var shouldShowSearchBar = searchQuery.length || openExpandable === searchId;

    var shouldRenderInnerWrapper = shouldDisplayFilters || searchEnabled || shouldDisplaySortComponent || shouldDisplayCollectionInfo;

    return _react2.default.createElement(
        'div',
        {
            'data-testid': 'consonant-TopFilters',
            'daa-lh': 'Filters',
            className: topFiltersClass },
        shouldDisplaySearchBar && _react2.default.createElement(
            'div',
            {
                'data-testid': 'consonant-TopFilters-searchWrapper',
                className: 'consonant-TopFilters-searchWrapper' },
            searchComponent
        ),
        shouldRenderInnerWrapper && _react2.default.createElement(
            'div',
            {
                className: 'consonant-TopFilters-inner' },
            shouldDisplayFilters && _react2.default.createElement(
                'div',
                {
                    className: 'consonant-TopFilters-filtersWrapper' },
                TABLET_OR_DESKTOP_SCREEN_SIZE && _react2.default.createElement(
                    'strong',
                    {
                        className: 'consonant-TopFilters-title' },
                    filterGroupLabel
                ),
                _react2.default.createElement(
                    'div',
                    {
                        'data-testid': 'consonant-TopFilters-filters',
                        className: showLimitedFiltersQtyClass },
                    filters.map(function (filter) {
                        return _react2.default.createElement(_Group.Group, {
                            key: filter.id,
                            name: filter.group,
                            items: filter.items,
                            numItemsSelected: (0, _general.getSelectedItemsCount)(filter.items),
                            results: resQty,
                            id: filter.id,
                            isOpened: filter.opened,
                            onCheck: onCheckboxClick,
                            onClick: onFilterClick,
                            onClearAll: onClearFilterItems,
                            clearFilterText: clearFilterText,
                            isTopFilter: true });
                    }),
                    shouldDisplayMoreFiltersBtn && _react2.default.createElement(
                        'button',
                        {
                            type: 'button',
                            'data-testid': 'consonant-TopFilters-moreBtn',
                            className: 'consonant-TopFilters-moreBtn',
                            onClick: onShowAllClick },
                        moreFiltersBtnText
                    )
                ),
                shouldShowClearButtonWrapper && _react2.default.createElement(
                    'div',
                    {
                        'data-testid': 'consonant-TopFilters-clearBtnWrapper',
                        className: clearBtnWrapperClass },
                    atleastOneFilterSelected && _react2.default.createElement(
                        'button',
                        {
                            type: 'button',
                            'data-testid': 'consonant-TopFilters-clearBtn',
                            className: 'consonant-TopFilters-clearBtn',
                            onClick: onClearAllFilters,
                            tabIndex: '0' },
                        clearAllFiltersText
                    )
                )
            ),
            searchEnabled && TABLET_OR_DESKTOP_SCREEN_SIZE && _react2.default.createElement(
                'div',
                {
                    'data-testid': 'consonant-TopFilters-searchIcoWrapper',
                    className: 'consonant-TopFilters-searchIcoWrapper' },
                shouldShowSearchBar && searchComponent,
                TABLET_OR_DESKTOP_SCREEN_SIZE && _react2.default.createElement(_SearchIcon2.default, {
                    searchTitle: searchTitle,
                    onClick: handleExpandableToggle })
            ),
            shouldDisplaySortComponent && _react2.default.createElement(
                'div',
                {
                    'data-testid': 'consonant-TopFilters-selectWrapper',
                    className: 'consonant-TopFilters-selectWrapper' },
                sortComponent
            ),
            shouldDisplayCollectionInfo && _react2.default.createElement(
                'div',
                { className: 'consonant-TopFilters-infoWrapper' },
                title && _react2.default.createElement(
                    HeadingLevel,
                    {
                        'data-testid': 'consonant-TopFilters-collectionTitle',
                        className: 'consonant-TopFilters-collectionTitle' },
                    title
                ),
                showTotalResults && _react2.default.createElement(
                    'div',
                    {
                        'data-testid': 'consonant-TopFilters-results',
                        className: 'consonant-TopFilters-results' },
                    totalResultsHtml
                )
            )
        )
    );
};

FiltersPanelTop.defaultProps = defaultProps;

exports.default = FiltersPanelTop;

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Search Icon (Used in Top Filter View Only)
 *
 * Only function it has is to toggle Search Box
 *
 * @component
 * @example
 * const props= {
    onClick: Function,
 * }
 * return (
 *   <Select {...props}/>
 * )
 */
var SearchIcon = function SearchIcon(props) {
    var searchTitle = props.searchTitle,
        onClick = props.onClick;


    return _react2.default.createElement(
        'button',
        {
            'data-testid': 'search-icon',
            'aria-label': searchTitle,
            type: 'button',
            className: 'consonant-SearchIco',
            onClick: onClick,
            tabIndex: '0' },
        _react2.default.createElement('span', null)
    );
};

exports.default = SearchIcon;

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Group = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _Items = __webpack_require__(285);

var _Footer = __webpack_require__(286);

var _config = __webpack_require__(19);

var _general = __webpack_require__(6);

var _hooks = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    numItemsSelected: 0,
    clearFilterText: ''
};

/**
 * Minimum quantity of the top filter options to apply blur on options' wrapper
 * @type {Number}
 */
var clipWrapperItemsCount = 9;

/**
 * Top filter
 *
 * @component
 * @example
 * const props= {
    name: String,
    id: String,
    items: Array,
    numItemsSelected: Number,
    onCheck: Function,
    onClearAll: Function,
    results: Number,
    clearFilterText: String,
 * }
 * return (
 *   <Group {...props}/>
 * )
 */
var Group = function Group(props) {
    var name = props.name,
        id = props.id,
        items = props.items,
        numItemsSelected = props.numItemsSelected,
        onCheck = props.onCheck,
        onClearAll = props.onClearAll,
        results = props.results,
        clearFilterText = props.clearFilterText;


    var getConfig = (0, _hooks.useConfig)();

    /**
     **** Authored Configs ****
     */
    var mobileGroupTotalResultsText = getConfig('filterPanel', 'i18n.topPanel.mobile.group.totalResultsText').replace('{total}', results);
    var mobileGroupApplyBtnText = getConfig('filterPanel', 'i18n.topPanel.mobile.group.applyBtnText');
    var mobileGroupDoneBtnText = getConfig('filterPanel', 'i18n.topPanel.mobile.group.doneBtnText');
    var isCategoriesPage = getConfig('collection', 'layout.container') === 'categories';
    var isProductsFilter = id === 'caas:all-products';

    var showFilter = isCategoriesPage && isProductsFilter || isCategoriesPage && !id.startsWith('caas:product-categories') // don't show product filters
    || isCategoriesPage && id.includes(name) // include custom product filter
    || !isCategoriesPage && !isProductsFilter; // do not show custom product filter

    /**
     **** Hooks ****
     */

    /**
     * @typedef {String} openDropdownState -  Id of the top filter
     * @description — defined in the component props
     *
     * @typedef {Function} ToggleSetter - Handles toggling opened/closed state of
     * the top filter
     * @description
     *
     * @type {[String, Function]} openDropdown
     */

    var _useExpandable = (0, _hooks.useExpandable)(id),
        _useExpandable2 = _slicedToArray(_useExpandable, 2),
        openDropdown = _useExpandable2[0],
        handleToggle = _useExpandable2[1];

    /**
     **** Constants ****
     */

    /**
     * Whether the top filter is opened
     * @type {Boolean}
     */


    var isOpened = openDropdown === id;

    /**
     * Whether at least one top filter option is selected
     * @type {Boolean}
     */
    var atleastOneItemSelected = numItemsSelected > 0;

    /**
     * Text of the top filter footer button:
     * whether the "Apply changes" text should be shown or "Done"
     * @type {String}
     */
    var mobileFooterBtnText = atleastOneItemSelected ? mobileGroupApplyBtnText : mobileGroupDoneBtnText;

    /**
     * Handles unselection of the top filter options
     * when the "Clear filter options" link is clicked
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleClear = function handleClear(e) {
        e.stopPropagation();
        onClearAll(id);
    };

    /**
     * Handles toggling the selected/unselected state of the top filter option
     * when the filter option is checked/unchecked
     * @param {ChangeEvent} e
     * @listens ChangeEvent
     */
    var handleCheck = function handleCheck(e) {
        e.stopPropagation();
        onCheck(id, e.target.value, e.target.checked);
    };

    /**
     * Array of the top filter selected options
     * @type {Array}
     */
    var selectedFilters = items.filter(function (item) {
        return item.selected;
    });

    /**
     * Whether at least one top filter option is selected
     * @type {Boolean}
     */
    var atleastOneFilterSelected = selectedFilters.length > 0;

    /**
     * Text indicating the quantity of the selected top filter options
     * @type {String}
     */
    var selectedItemQtyText = selectedFilters.length > 0 ? '' + selectedFilters.length : '';

    /**
     * Whether the top filter is opened
     * @type {Boolean}
     */
    var filterGroupOpened = isOpened;

    /**
     * Whether the top filter is closed
     * @type {Boolean}
     */
    var filterGroupNotOpened = !isOpened;

    /**
     * Whether the top filter options should be blurred at the bottom of the parent container
     * @type {Boolean}
     */
    var shouldClipFilters = items.length >= clipWrapperItemsCount;

    /**
     * Class name for the top filter:
     * whether the top filter is opened
     * whether the top filter contains at least one selected option
     * @type {String}
     */
    var containerClassname = (0, _classnames2.default)({
        'consonant-TopFilter': true,
        'is-opened': filterGroupOpened,
        'is-selected': atleastOneFilterSelected && filterGroupNotOpened
    });

    // Update filter label for categories page if needed
    var filterLabel = isCategoriesPage && id.includes(name) ? 'All ' + name.replaceAll('-', ' ') : name;

    filterLabel = isCategoriesPage && id === 'caas:events/series' ? 'All event series' : filterLabel;
    filterLabel = isCategoriesPage && id.startsWith('caas:events/region') ? 'All locations' : filterLabel;

    /**
     * Impression Tracking
     */
    var filterName = name + ' ' + (isOpened ? 'Close' : 'Open');

    return _react2.default.createElement(
        _react.Fragment,
        null,
        showFilter && _react2.default.createElement(
            'div',
            {
                'data-testid': 'consonant-TopFilter',
                'daa-lh': name,
                className: containerClassname + ' FILTER-ID-' + id },
            _react2.default.createElement(
                'div',
                {
                    className: 'consonant-TopFilter-inner' },
                _react2.default.createElement(
                    'div',
                    {
                        className: 'consonant-TopFilter-name',
                        'daa-ll': filterName },
                    _react2.default.createElement(
                        'button',
                        {
                            type: 'button',
                            className: 'consonant-TopFilter-link',
                            'data-testid': 'consonant-TopFilter-link',
                            onClick: handleToggle,
                            tabIndex: '0' },
                        filterLabel,
                        _react2.default.createElement(
                            'span',
                            {
                                className: 'consonant-TopFilter-selectedItemsQty' },
                            selectedItemQtyText
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    {
                        className: 'consonant-TopFilter-selectedItems' },
                    _react2.default.createElement(
                        'div',
                        {
                            className: 'consonant-TopFilter-absoluteWrapper' },
                        _react2.default.createElement(_Items.Items, {
                            clipWrapperItemsCount: clipWrapperItemsCount,
                            handleCheck: handleCheck,
                            stopPropagation: _general.stopPropagation,
                            items: items }),
                        shouldClipFilters && _react2.default.createElement('aside', {
                            className: 'consonant-TopFilter-bg' }),
                        _react2.default.createElement(_Footer.Footer, {
                            mobileFooterBtnText: mobileFooterBtnText,
                            handleToggle: handleToggle,
                            clearFilterText: clearFilterText,
                            handleClear: handleClear,
                            numItemsSelected: numItemsSelected,
                            mobileGroupTotalResultsText: mobileGroupTotalResultsText })
                    )
                )
            )
        )
    );
};

Group.defaultProps = defaultProps;

/* eslint-disable-next-line import/prefer-default-export */
exports.Group = Group;

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Items = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _config = __webpack_require__(19);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Options of the top filter
 *
 * @component
 * @example
 * const props= {
    items: Array,
    handleCheck: Function,
    stopPropagation: Function,
    clipWrapperItemsCount: Number,
 * }
 * return (
 *   <Items {...props}/>
 * )
 */
var Items = function Items(props) {
    var items = props.items,
        handleCheck = props.handleCheck,
        stopPropagation = props.stopPropagation,
        clipWrapperItemsCount = props.clipWrapperItemsCount;

    /**
     **** Constants ****
     */

    /**
     * Whether the top filter options should be blurred at the bottom of the parent container
     * @type {Boolean}
     */

    var shouldClipItems = items.length >= clipWrapperItemsCount;

    /**
     * Class name for the top filter options wrapper:
     * whether the top filter options should be blurred at the bottom of the parent container
     * @type {String}
     */
    var clipFilterItemsClass = (0, _classnames2.default)({
        'consonant-TopFilter-items': true,
        'consonant-TopFilter-items--clipped': shouldClipItems
    });

    var set = new Set();
    return _react2.default.createElement(
        'ul',
        {
            'data-testid': 'consonant-TopFilter-items',
            className: clipFilterItemsClass },
        items.map(function (item) {
            var category = item.id.split('/')[0];
            var title = void 0;
            if (!set.has(category)) {
                title = category.replaceAll('-', ' ');
                set.add(category);
            }
            return _react2.default.createElement(
                _react.Fragment,
                { key: item.id },
                item.fromCategory && title && _react2.default.createElement(
                    'span',
                    { className: 'filter-group-title', 'data-testid': 'filter-group-title-' + category },
                    title
                ),
                _react2.default.createElement(
                    'li',
                    {
                        key: item.id,
                        'data-testid': 'consonant-TopFilter-item',
                        'daa-ll': item.label,
                        className: 'consonant-TopFilter-item' },
                    _react2.default.createElement(
                        'label',
                        {
                            htmlFor: item.id,
                            className: 'consonant-TopFilter-itemLabel',
                            onClick: stopPropagation },
                        _react2.default.createElement('input', {
                            'data-testid': 'consonant-TopFilter-itemCheckbox',
                            id: item.id,
                            value: item.id,
                            type: 'checkbox',
                            onChange: handleCheck,
                            checked: item.selected,
                            tabIndex: '0' }),
                        _react2.default.createElement('span', { className: 'consonant-TopFilter-itemCheckmark' }),
                        _react2.default.createElement(
                            'span',
                            { className: 'consonant-TopFilter-itemName' },
                            item.group || item.label
                        )
                    )
                )
            );
        })
    );
};

/* eslint-disable-next-line import/prefer-default-export */
exports.Items = Items;

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Footer = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    numItemsSelected: 0,
    clearFilterText: '',
    mobileFooterBtnText: '',
    mobileGroupTotalResultsText: ''
};

/**
 * Top filter footer
 *
 * @component
 * @example
 * const props= {
    mobileGroupTotalResultsText: String,
    numItemsSelected: Number,
    handleClear: Function,
    clearFilterText: String,
    handleToggle: Function,
    mobileFooterBtnText: String,
 * }
 * return (
 *   <Footer {...props}/>
 * )
 */
var Footer = function Footer(props) {
    var mobileGroupTotalResultsText = props.mobileGroupTotalResultsText,
        numItemsSelected = props.numItemsSelected,
        handleClear = props.handleClear,
        clearFilterText = props.clearFilterText,
        handleToggle = props.handleToggle,
        mobileFooterBtnText = props.mobileFooterBtnText;

    /**
     **** Constants ****
     */

    /**
     * Whether the "Clear options" button should be displayed
     * @type {Boolean}
     */

    var shouldShowClearButton = numItemsSelected > 0;

    return _react2.default.createElement(
        'div',
        {
            className: 'consonant-TopFilter-footer' },
        _react2.default.createElement(
            'span',
            {
                className: 'consonant-TopFilter-footerResQty' },
            mobileGroupTotalResultsText
        ),
        shouldShowClearButton && _react2.default.createElement(
            'button',
            {
                'data-testid': 'consonant-TopFilter-footerClearBtn',
                type: 'button',
                onClick: handleClear,
                className: 'consonant-TopFilter-footerClearBtn',
                tabIndex: '0' },
            clearFilterText
        ),
        _react2.default.createElement(
            'button',
            {
                type: 'button',
                onClick: handleToggle,
                className: 'consonant-TopFilter-footerBtn',
                tabIndex: '0' },
            mobileFooterBtnText
        )
    );
};

Footer.defaultProps = defaultProps;

/* eslint-disable-next-line import/prefer-default-export */
exports.Footer = Footer;

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _Item = __webpack_require__(288);

var _Item2 = _interopRequireDefault(_Item);

var _hooks = __webpack_require__(5);

var _config = __webpack_require__(19);

var _ChosenItem = __webpack_require__(292);

var _ChosenItem2 = _interopRequireDefault(_ChosenItem);

var _Title = __webpack_require__(293);

var _Title2 = __webpack_require__(294);

var _PanelFooter = __webpack_require__(295);

var _ClearButton = __webpack_require__(296);

var _general = __webpack_require__(6);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    resQty: 0,
    filters: [],
    selectedFiltersQty: 0,
    showMobileFilters: false,
    windowWidth: window.innerWidth
};

/**
 * Left filters panel
 *
 * @component
 * @example
 * const props= {
    filters: Array,
    selectedFiltersQty: Number,
    showMobileFilters: Boolean,
    onFilterClick: Function,
    onClearAllFilters: Function,
    onClearFilterItems: Function,
    onCheckboxClick: Function,
    onMobileFiltersToggleClick: Function,
    onSelectedFilterClick: Function,
    resQty: Number,
    searchComponent: Node,
    bookmarkComponent: Node,
    windowWidth: Number,
 * }
 * return (
 *   <LeftFilterPanel {...props}/>
 * )
 */
var LeftFilterPanel = (0, _react.forwardRef)(function (_ref, ref) {
    var filters = _ref.filters,
        selectedFiltersQty = _ref.selectedFiltersQty,
        showMobileFilters = _ref.showMobileFilters,
        onFilterClick = _ref.onFilterClick,
        onClearAllFilters = _ref.onClearAllFilters,
        onClearFilterItems = _ref.onClearFilterItems,
        onCheckboxClick = _ref.onCheckboxClick,
        onMobileFiltersToggleClick = _ref.onMobileFiltersToggleClick,
        onSelectedFilterClick = _ref.onSelectedFilterClick,
        resQty = _ref.resQty,
        searchComponent = _ref.searchComponent,
        bookmarkComponent = _ref.bookmarkComponent,
        windowWidth = _ref.windowWidth;

    var getConfig = (0, _hooks.useConfig)();

    /**
     **** Authored Configs ****
     */
    var showTotalResults = getConfig('collection', 'showTotalResults');
    var clearAllFiltersText = getConfig('filterPanel', 'i18n.leftPanel.clearAllFiltersText');
    var bookmarksEnabled = getConfig('bookmarks', 'leftFilterPanel.showBookmarksFilter');
    var searchEnabled = getConfig('search', 'enabled');
    var panelHeader = getConfig('filterPanel', 'i18n.leftPanel.header');
    var showTotalResultsText = getConfig('filterPanel', 'i18n.leftPanel.mobile.panel.totalResultsText');
    var clearFilterText = getConfig('filterPanel', 'i18n.leftPanel.mobile.panel.clearFilterText');
    var leftPanelMobileHeader = getConfig('filterPanel', 'i18n.leftPanel.mobile.panel.header');
    var applyText = getConfig('filterPanel', 'i18n.leftPanel.mobile.panel.applyBtnText');
    var doneText = getConfig('filterPanel', 'i18n.leftPanel.mobile.panel.doneBtnText');

    /**
     **** Constants ****
     */

    /**
     * Whether at least one filter is selected
     * @type {Boolean}
     */
    var atleastOneFilterSelected = (0, _general.isAtleastOneFilterSelected)(filters);

    /**
     * Minimal viewport width to fit desktops/laptops
     * @type {Number}
     */
    var DESKTOP_MIN_WIDTH = 1200;

    /**
     * Whether the current viewport width fits desktops/laptops
     * @type {Boolean}
     */
    var DESKTOP_SCREEN_SIZE = windowWidth >= DESKTOP_MIN_WIDTH;

    /**
     * Whether the current viewport width fits tablets or mobile devices
     * @type {Boolean}
     */
    var NOT_DESKTOP_SCREEN_SIZE = windowWidth < DESKTOP_MIN_WIDTH;

    /**
     * Whether the search bar should be displayed
     * @type {Boolean}
     */
    var shouldRenderSearchComponent = windowWidth >= DESKTOP_MIN_WIDTH && searchEnabled;

    /**
     * Whether the chosen filters should be displayed
     * @type {Boolean}
     */
    var shouldRenderChosenFilters = windowWidth >= DESKTOP_MIN_WIDTH && selectedFiltersQty > 0;

    /**
     * Whether at least one filter exist
     * @type {Boolean}
     */
    var atleastOneFilter = filters.length > 0;

    /**
     * Class name for the left filters:
     * whether the left filters panel is opened or closed
     * @type {String}
     */
    var filtersClass = (0, _classnames2.default)({
        'consonant-LeftFilters': true,
        'consonant-LeftFilters is-opened': showMobileFilters
    });

    /**
     * Creates a DOM reference to mobile footer button
     * @returns {Object} - footer button DOM reference
     */
    var mobileFooterRef = (0, _react.createRef)();

    /**
     * Handles Tab on mobile footer button to trap focus in dialog
     *
     * @param event
     */
    var handleMobileFooterButtonTab = function handleMobileFooterButtonTab(event) {
        if (event.key !== 'Tab' || event.shiftKey) return;
        ref.current.focusMobBack();
        event.preventDefault();
    };

    /**
     * Handles Shift + Tab on mob back button to trap focus in dialog
     *
     * @param event
     */
    var handleMobileBackButtonShiftTab = function handleMobileBackButtonShiftTab(event) {
        if (event.key !== 'Tab' || !event.shiftKey) return;
        mobileFooterRef.current.focusFooterButton();
        event.preventDefault();
    };

    return _react2.default.createElement(
        'div',
        {
            'data-testid': 'consonant-LeftFilters',
            'daa-lh': 'Filters',
            className: filtersClass },
        _react2.default.createElement(
            'div',
            {
                className: 'consonant-LeftFilters-header' },
            NOT_DESKTOP_SCREEN_SIZE && _react2.default.createElement(_Title.Title, {
                onClick: onMobileFiltersToggleClick,
                leftPanelMobileHeader: leftPanelMobileHeader,
                ref: ref,
                onKeyDown: handleMobileBackButtonShiftTab }),
            DESKTOP_SCREEN_SIZE && _react2.default.createElement(_Title2.Title, {
                panelHeader: panelHeader }),
            DESKTOP_SCREEN_SIZE && _react2.default.createElement(_ClearButton.ClearBtn, {
                clearAllFiltersText: clearAllFiltersText,
                onClearAllFilters: onClearAllFilters,
                panelHeader: panelHeader })
        ),
        shouldRenderSearchComponent && searchComponent,
        shouldRenderChosenFilters && _react2.default.createElement(
            'div',
            {
                className: 'consonant-LeftFilters-chosenFilters' },
            filters.map(function (el) {
                return el.items.map(function (filter) {
                    return filter.selected && _react2.default.createElement(_ChosenItem2.default, {
                        key: filter.id,
                        name: filter.label,
                        id: filter.id,
                        parentId: el.id,
                        onClick: onSelectedFilterClick });
                });
            })
        ),
        bookmarksEnabled && bookmarkComponent,
        atleastOneFilter && _react2.default.createElement(
            'div',
            { className: 'consonant-LeftFilters-list' },
            filters.map(function (filter) {
                return _react2.default.createElement(_Item2.default, {
                    key: filter.id,
                    name: filter.group,
                    icon: filter.icon,
                    items: filter.items,
                    numItemsSelected: (0, _general.getSelectedItemsCount)(filter.items),
                    results: resQty,
                    id: filter.id,
                    isOpened: filter.opened,
                    onCheck: onCheckboxClick,
                    onClick: onFilterClick,
                    onClearAll: onClearFilterItems,
                    clearFilterText: clearFilterText });
            })
        ),
        NOT_DESKTOP_SCREEN_SIZE && _react2.default.createElement(_PanelFooter.PanelFooter, {
            doneText: doneText,
            applyText: applyText,
            someFiltersAreSelected: atleastOneFilterSelected,
            showTotalResultsText: showTotalResultsText,
            onMobileFiltersToggleClick: onMobileFiltersToggleClick,
            clearAllFiltersText: clearAllFiltersText,
            onClearAllFilters: onClearAllFilters,
            resQty: resQty,
            showTotalResults: showTotalResults,
            ref: mobileFooterRef,
            handleMobileFooterButtonTab: handleMobileFooterButtonTab })
    );
});

LeftFilterPanel.defaultProps = defaultProps;

exports.default = LeftFilterPanel;

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _Items = __webpack_require__(289);

var _hooks = __webpack_require__(5);

var _config = __webpack_require__(19);

var _GroupFooter = __webpack_require__(290);

var _SelectedItem = __webpack_require__(291);

var _Helpers = __webpack_require__(21);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    icon: '',
    isOpened: false,
    numItemsSelected: 0,
    clearFilterText: ''
};

/**
 * Left filter
 *
 * @component
 * @example
 * const props= {
    name: String,
    icon: String,
    id: String,
    items: Array,
    numItemsSelected: Number,
    isOpened: Boolean,
    onCheck: Function,
    onClick: Function,
    onClearAll: Function,
    results: Number,
    clearFilterText: String,
 * }
 * return (
 *   <Item {...props}/>
 * )
 */
var Item = function Item(props) {
    var name = props.name,
        icon = props.icon,
        id = props.id,
        items = props.items,
        numItemsSelected = props.numItemsSelected,
        isOpened = props.isOpened,
        onCheck = props.onCheck,
        onClick = props.onClick,
        onClearAll = props.onClearAll,
        results = props.results,
        clearFilterText = props.clearFilterText;


    var getConfig = (0, _hooks.useConfig)();

    /**
     **** Authored Configs ****
     */
    var mobileGroupTotalResultsText = getConfig('filterPanel', 'i18n.leftPanel.mobile.group.totalResultsText').replace('{total}', results);
    var applyBtnText = getConfig('filterPanel', 'i18n.leftPanel.mobile.group.applyBtnText');
    var doneBtnText = getConfig('filterPanel', 'i18n.leftPanel.mobile.group.doneBtnText');

    /**
     **** Constants ****
     */

    /**
     * Text of the left filter footer button on the mobile and tablet breakpoints:
     * whether the "Apply changes" text should be shown or "Done"
     * @type {String}
     */
    var buttonText = numItemsSelected > 0 ? applyBtnText : doneBtnText;

    /**
     * Text indicating the quantity of the selected left filter options
     * @type {String}
     */
    var dataQtyTxt = numItemsSelected > 0 ? '+' + numItemsSelected : '';

    /**
     * Whether the left filter selected options badge should be shown on desktop breakpoint
     * @type {Boolean}
     */
    var shouldRenderSelectedBadge = numItemsSelected > 0;

    /**
     * Array of the left filter selected options
     * @type {Array}
     */
    var selectedFilters = items.filter(function (item) {
        return item.selected;
    });

    /**
     * Array of the selected filters labels shown on mobile and tablet breakpoints
     * @type {Array}
     */
    var mobileTagsSelectedText = selectedFilters.map(function (item, index) {
        var lastItem = index === selectedFilters.length - 1;
        return !lastItem ? item.label + ', ' : item.label;
    });

    /**
     * Handles toggling the opened/closed state of the left filter
     * when the filter is clicked
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleClick = function handleClick(e) {
        e.preventDefault();
        onClick(id);
    };

    /**
     * Handles unselection of the left filter options
     * when the "Clear filter options" button is clicked
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleClear = function handleClear() {
        onClearAll(id, name);
    };

    /**
     * Handles toggling the selected/unselected state of the left filter option
     * when the filter option is checked/unchecked
     * @param {ChangeEvent} e
     * @listens ChangeEvent
     */
    var handleCheck = function handleCheck(evt) {
        evt.stopPropagation();
        onCheck(id, evt.target.value, evt.target.checked);
    };

    /**
     * Class name for the left filter:
     * whether the left filter is opened
     * @type {String}
     */
    var leftFilterClassName = (0, _classnames2.default)({
        'consonant-LeftFilter': true,
        'consonant-LeftFilter is-opened': isOpened
    });

    /**
     * Impression Tracking
     */
    var filterName = name + ' ' + (isOpened ? 'Close' : 'Open');
    var showFilter = id !== 'caas:all-products';

    return _react2.default.createElement(
        'div',
        {
            'data-testid': 'consonant-LeftFilter',
            'daa-lh': name,
            className: leftFilterClassName },
        showFilter && _react2.default.createElement(
            'div',
            {
                className: 'consonant-LeftFilter-inner' },
            _react2.default.createElement(
                'p',
                {
                    'data-testid': 'consonant-LeftFilter-name',
                    className: 'consonant-LeftFilter-name',
                    'daa-ll': filterName },
                icon && _react2.default.createElement('img', {
                    src: icon,
                    width: '16',
                    alt: '',
                    loading: 'lazy' }),
                _react2.default.createElement(
                    'button',
                    {
                        type: 'button',
                        'aria-expanded': isOpened,
                        'data-testid': 'consonant-LeftFilter-link',
                        className: 'consonant-LeftFilter-link',
                        'aria-controls': id + '-panel',
                        id: id + '-link',
                        onClick: handleClick,
                        tabIndex: '0' },
                    name && (0, _Helpers.sanitizeStr)(name),
                    _react2.default.createElement(
                        'div',
                        {
                            className: 'consonant-LeftFilter-selectedItemsQty',
                            'data-qty': dataQtyTxt },
                        mobileTagsSelectedText
                    )
                )
            ),
            shouldRenderSelectedBadge && _react2.default.createElement(_SelectedItem.SelectedItem, {
                name: (0, _Helpers.sanitizeStr)(name),
                handleClear: handleClear,
                numItemsSelected: numItemsSelected }),
            _react2.default.createElement(
                'section',
                {
                    id: id + '-panel',
                    role: 'group',
                    'aria-labelledby': id + '-link' },
                _react2.default.createElement(_Items.Items, {
                    items: items,
                    handleCheck: handleCheck })
            ),
            _react2.default.createElement(_GroupFooter.GroupFooter, {
                ctaText: buttonText,
                handleClick: handleClick,
                clearFilterText: clearFilterText,
                handleClear: handleClear,
                numItemsSelected: numItemsSelected,
                mobileGroupTotalResultsText: mobileGroupTotalResultsText })
        )
    );
};

Item.defaultProps = defaultProps;

exports.default = Item;

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Items = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _config = __webpack_require__(19);

var _Helpers = __webpack_require__(21);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Options of the left filter item
 *
 * @component
 * @example
 * const props= {
    items: Array,
    handleCheck: Function,
 * }
 * return (
 *   <Items {...props}/>
 * )
 */
var Items = function Items(props) {
    var items = props.items,
        handleCheck = props.handleCheck;


    return _react2.default.createElement(
        'ul',
        {
            'data-testid': 'consonant-LeftFilter-items',
            className: 'consonant-LeftFilter-items' },
        items.map(function (item) {
            return _react2.default.createElement(
                'li',
                {
                    key: item.id,
                    'data-testid': 'consonant-LeftFilter-itemsItem',
                    'daa-ll': item.label,
                    className: 'consonant-LeftFilter-itemsItem' },
                _react2.default.createElement(
                    'label',
                    {
                        htmlFor: item.id,
                        className: 'consonant-LeftFilter-itemsItemLabel' },
                    _react2.default.createElement('input', {
                        'data-testid': 'consonant-LeftFilter-itemsItemCheckbox',
                        id: item.id,
                        value: item.id,
                        'daa-im': item.label,
                        type: 'checkbox',
                        onChange: handleCheck,
                        checked: item.selected,
                        tabIndex: '0' }),
                    _react2.default.createElement('span', {
                        className: 'consonant-LeftFilter-itemsItemCheckmark' }),
                    _react2.default.createElement(
                        'span',
                        {
                            className: 'consonant-LeftFilter-itemsItemName' },
                        item.label && (0, _Helpers.sanitizeStr)(item.label.toString())
                    )
                )
            );
        })
    );
};

/* eslint-disable-next-line import/prefer-default-export */
exports.Items = Items;

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GroupFooter = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    ctaText: '',
    numItemsSelected: 0,
    clearFilterText: '',
    mobileGroupTotalResultsText: ''
};

/**
 * Footer for the left filter for mobile and tablet breakpoints
 *
 * @component
 * @example
 * const props= {
    mobileGroupTotalResultsText: String,
    numItemsSelected: Number,
    handleClear: Function,
    clearFilterText: String,
    handleClick: Function,
    ctaText: String,
 * }
 * return (
 *   <GroupFooter {...props}/>
 * )
 */
var GroupFooter = function GroupFooter(props) {
    var mobileGroupTotalResultsText = props.mobileGroupTotalResultsText,
        numItemsSelected = props.numItemsSelected,
        handleClear = props.handleClear,
        clearFilterText = props.clearFilterText,
        handleClick = props.handleClick,
        ctaText = props.ctaText;


    return _react2.default.createElement(
        'div',
        {
            className: 'consonant-LeftFilter-footer' },
        _react2.default.createElement(
            'span',
            {
                className: 'consonant-LeftFilter-footerResQty' },
            mobileGroupTotalResultsText
        ),
        numItemsSelected > 0 && _react2.default.createElement(
            'button',
            {
                type: 'button',
                onClick: handleClear,
                className: 'consonant-LeftFilter-footerClearBtn' },
            clearFilterText
        ),
        _react2.default.createElement(
            'button',
            {
                type: 'button',
                onClick: handleClick,
                className: 'consonant-LeftFilter-footerBtn' },
            ctaText
        )
    );
};

GroupFooter.defaultProps = defaultProps;

/* eslint-disable-next-line import/prefer-default-export */
exports.GroupFooter = GroupFooter;

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SelectedItem = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _hooks = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    numItemsSelected: 0
};

/**
 * Badge displaying how many filter options were selected
 * (Only for Left Filter Panel - on desktop breakpoint)
 *
 * @component
 * @example
 * const props= {
    numItemsSelected: Number,
    handleClear: Function,
 * }
 * return (
 *   <SelectedItem {...props}/>
 * )
 */
var SelectedItem = function SelectedItem(props) {
    var name = props.name,
        numItemsSelected = props.numItemsSelected,
        handleClear = props.handleClear;

    /**
     **** Authored Configs ****
        */

    var getConfig = (0, _hooks.useConfig)();
    var removeAllFiltersAria = getConfig('collection', 'i18n.removeAllFiltersAria');

    /**
     * Text - quantity of selected left filter options
     * @type {String}
     */
    var displayNumItemsSelected = numItemsSelected > 0 ? '' + numItemsSelected : '';

    var ariaLabel = removeAllFiltersAria && removeAllFiltersAria.replace('{num}', displayNumItemsSelected).replace('{filter}', name);

    return _react2.default.createElement(
        'button',
        {
            'data-testid': 'consonant-LeftFilter-itemBadge',
            type: 'button',
            className: 'consonant-LeftFilter-itemBadge',
            onClick: handleClear,
            tabIndex: '0',
            'aria-label': ariaLabel },
        displayNumItemsSelected
    );
};

SelectedItem.defaultProps = defaultProps;

/* eslint-disable-next-line import/prefer-default-export */
exports.SelectedItem = SelectedItem;

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _Helpers = __webpack_require__(21);

var _hooks = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Component for what filter item was chosen
 * (Only shows up for the Left Filter Panel - on desktop breakpoint)
 *
 * @component
 * @example
 * const props= {
    name: String,
    id: String,
    parentId: String,
    onClick: Function,
 * }
 * return (
 *   <ChosenFilterItem {...props}/>
 * )
 */
var ChosenFilterItem = function ChosenFilterItem(props) {
    var name = props.name,
        id = props.id,
        parentId = props.parentId,
        onClick = props.onClick;

    /**
     **** Authored Configs ****
        */

    var getConfig = (0, _hooks.useConfig)();
    var removeFilterAria = getConfig('collection', 'i18n.removeFilterAria');

    /**
     * Unselects the chosen filter option when the filter is clicked
     * @param {ClickEvent} e
     * @listens ClickEvent
     */
    var handleClick = function handleClick() {
        onClick(parentId, id, false);
    };

    return _react2.default.createElement(
        'button',
        {
            type: 'button',
            onClick: handleClick,
            'data-testid': 'consonant-ChosenFilter',
            className: 'consonant-ChosenFilter',
            'aria-label': removeFilterAria && removeFilterAria.replace('{filter}', (0, _Helpers.sanitizeStr)(name)),
            tabIndex: '0' },
        (0, _Helpers.sanitizeStr)(name)
    );
};

exports.default = ChosenFilterItem;

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Title = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    leftPanelMobileHeader: ''
};

/**
 * Title of the left filters panel for mobile and tablet breakpoints
 *
 * @component
 * @example
 * const props= {
    onClick: Function,
    leftPanelMobileHeader: String,
 * }
 * return (
 *   <Title {...props}/>
 * )
 */
var Title = (0, _react.forwardRef)(function (props, ref) {
    var onClick = props.onClick,
        leftPanelMobileHeader = props.leftPanelMobileHeader,
        onKeyDown = props.onKeyDown;

    /**
     * Creates a DOM reference to mob title element
     * @returns {Object} - mob title DOM reference
     */

    var mobTitleRef = (0, _react.useRef)();

    /**
     * Creates a DOM reference to mob back button
     * @returns {Object} - mob back button DOM reference
     */
    var mobBackRef = (0, _react.useRef)();

    /**
     * Allows multiple refs to be used in parent component
     */
    (0, _react.useImperativeHandle)(ref, function () {
        return {
            focusMobTitle: function focusMobTitle() {
                mobTitleRef.current.focus();
            },
            focusMobBack: function focusMobBack() {
                mobBackRef.current.focus();
            }
        };
    });

    return _react2.default.createElement(
        'div',
        {
            className: 'consonant-LeftFilters-mobTitle' },
        _react2.default.createElement('button', {
            'data-testid': 'consonant-LeftFilters-mobBack',
            type: 'button',
            onClick: onClick,
            className: 'consonant-LeftFilters-mobBack',
            onKeyDown: onKeyDown,
            ref: mobBackRef }),
        _react2.default.createElement(
            'span',
            { tabIndex: '-1', ref: mobTitleRef },
            leftPanelMobileHeader
        )
    );
});

Title.defaultProps = defaultProps;

/* eslint-disable-next-line import/prefer-default-export */
exports.Title = Title;

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Title = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    panelHeader: ''
};

/**
 * Title for the left filter panel for the desktop breakpoint
 *
 * @component
 * @example
 * const props= {
    panelHeader: String,
 * }
 * return (
 *   <Title {...props}/>
 * )
 */
var Title = function Title(props) {
    var panelHeader = props.panelHeader;


    return _react2.default.createElement(
        'p',
        { className: 'consonant-LeftFilters-deskTitle' },
        panelHeader
    );
};

Title.defaultProps = defaultProps;

/* eslint-disable-next-line import/prefer-default-export */
exports.Title = Title;

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PanelFooter = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    resQty: 0,
    doneText: '',
    applyText: '',
    showTotalResults: false,
    clearAllFiltersText: '',
    showTotalResultsText: '',
    someFiltersAreSelected: false
};

/**
 * Footer of the left filter panel for mobile and tablet breakpoints
 *
 * @component
 * @example
 * const props= {
    showTotalResults: Boolean,
    resQty: Number,
    onClearAllFilters: Function,
    clearAllFiltersText: String,
    onMobileFiltersToggleClick: Function,
    someFiltersAreSelected: Boolean,
    applyText: String,
    doneText: String,
    showTotalResultsText: String,
 * }
 * return (
 *   <PanelFooter {...props}/>
 * )
 */
var PanelFooter = (0, _react.forwardRef)(function (props, ref) {
    var showTotalResults = props.showTotalResults,
        resQty = props.resQty,
        onClearAllFilters = props.onClearAllFilters,
        clearAllFiltersText = props.clearAllFiltersText,
        onMobileFiltersToggleClick = props.onMobileFiltersToggleClick,
        someFiltersAreSelected = props.someFiltersAreSelected,
        applyText = props.applyText,
        doneText = props.doneText,
        showTotalResultsText = props.showTotalResultsText,
        handleMobileFooterButtonTab = props.handleMobileFooterButtonTab;

    /**
     * Text of the left filters footer button for mobile and tablet breakpoints:
     * whether the "Apply changes" text should be shown or "Done"
     * @type {String}
     */

    var buttonText = someFiltersAreSelected ? applyText : doneText;

    /**
     * Creates a DOM reference to footer button
     * @returns {Object} - footer button DOM reference
     */
    var footerBtnRef = (0, _react.useRef)();

    /**
     * Allows multiple refs to be used in parent component
     */
    (0, _react.useImperativeHandle)(ref, function () {
        return {
            focusFooterButton: function focusFooterButton() {
                footerBtnRef.current.focus();
            }
        };
    });

    return _react2.default.createElement(
        'div',
        {
            className: 'consonant-LeftFilters-mobileFooter' },
        showTotalResults && _react2.default.createElement(
            'span',
            {
                'data-testid': 'consonant-LeftFilters-mobileFooterTotalResQty',
                className: 'consonant-LeftFilters-mobileFooterTotalResQty' },
            showTotalResultsText.replace('{total}', resQty)
        ),
        someFiltersAreSelected && _react2.default.createElement(
            'button',
            {
                type: 'button',
                'data-testid': 'consonant-LeftFilters-mobileFooterClearBtn',
                className: 'consonant-LeftFilters-mobileFooterClearBtn',
                onClick: onClearAllFilters },
            clearAllFiltersText
        ),
        _react2.default.createElement(
            'button',
            {
                type: 'button',
                'data-testid': 'consonant-LeftFilters-mobileFooterBtn',
                className: 'consonant-LeftFilters-mobileFooterBtn',
                onClick: onMobileFiltersToggleClick,
                ref: footerBtnRef,
                onKeyDown: handleMobileFooterButtonTab },
            buttonText
        )
    );
});

PanelFooter.defaultProps = defaultProps;

/* eslint-disable-next-line import/prefer-default-export */
exports.PanelFooter = PanelFooter;

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ClearBtn = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    clearAllFiltersText: ''
};

/**
 * This button
 * (1) clears all the chosen filters
 * (2) clears the search query
 * (3) and deselects "My bookmarks" feature if selected
 *
 * (This button only shows up for the Left Filter Panel - on desktop breakpoint)
 *
 * @component
 * @example
 * const props= {
    onClearAllFilters: Function,
    clearAllFiltersText: String,
 * }
 * return (
 *   <ClearBtn {...props}/>
 * )
 */
var ClearBtn = function ClearBtn(props) {
    var onClearAllFilters = props.onClearAllFilters,
        clearAllFiltersText = props.clearAllFiltersText;


    return _react2.default.createElement(
        'button',
        {
            type: 'button',
            'data-testid': 'consonant-LeftFilters-clearLink',
            className: 'consonant-LeftFilters-clearLink',
            onClick: onClearAllFilters,
            tabIndex: '0' },
        clearAllFiltersText
    );
};

ClearBtn.defaultProps = defaultProps;

/* eslint-disable-next-line import/prefer-default-export */
exports.ClearBtn = ClearBtn;

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _general = __webpack_require__(6);

var _Helpers = __webpack_require__(21);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class that handles parsing raw JSON data and returning a set of processed cards
 * that can be used within a card collection.
 *
 * @export
 * @class JsonProcessor
 */
var JsonProcessor = function () {
    /**
     * Creates an instance of JsonProcessor.
     * @param {*} cardsToProcess
     * @memberof JsonProcessor
     */
    function JsonProcessor(cardsToProcess) {
        _classCallCheck(this, JsonProcessor);

        this.processedCards = cardsToProcess;
    }
    /**
     * This method handles removing duplicate cards for the following cases:
     *
     * (1) API Repsonse contains duplicate cards
     * (2) Authored Featured Cards contains duplicate cards
     * (3) Duplicates between API responese and authored feature cards
     *
     * @return {*}
     * @memberof JsonProcessor
     */


    _createClass(JsonProcessor, [{
        key: 'removeDuplicateCards',
        value: function removeDuplicateCards() {
            this.processedCards = (0, _general.removeDuplicatesByKey)(this.processedCards, 'id');
            return this;
        }

        /**
         * This method joins authored featured caards with cards returned from API responsee
         *
         * @param {*} featuredCards
         * @return {*}
         * @memberof JsonProcessor
         */

    }, {
        key: 'addFeaturedCards',
        value: function addFeaturedCards(featuredCards) {
            var someFeaturedCards = featuredCards.map(function (card) {
                return _extends({}, card, {
                    isFeatured: true
                });
            });
            this.processedCards = someFeaturedCards.concat(this.processedCards);
            return this;
        }
        /**
         * This method adds necessary card metadata to cards such as:
         * (1) Whether a card should be bookmarked or not
         * (2) Initial Fields Before Pre-Processing occurs
         * (3) Whether cards should behave as if they are in a Bookmark Only Collection
         *
         * @param {*} truncateTextQty
         * @param {*} onlyShowBookmarks
         * @param {*} bookmarkedCardIds
         * @param {*} hideCtaIds
         * @param {*} hideCtaTags
         * @return {*}
         * @memberof JsonProcessor
         */

    }, {
        key: 'addCardMetaData',
        value: function addCardMetaData(truncateTextQty, onlyShowBookmarks, bookmarkedCardIds, hideCtaIds, hideCtaTags) {
            this.processedCards = this.processedCards.map(function (card) {
                return _extends({}, card, {
                    description: (0, _general.truncateString)((0, _general.getByPath)(card, 'contentArea.description', ''), truncateTextQty),
                    isBookmarked: bookmarkedCardIds.some(function (i) {
                        return i === card.id;
                    }),
                    disableBookmarkIco: onlyShowBookmarks,
                    hideCtaId: hideCtaIds.some(function (i) {
                        return i === card.id;
                    })
                }, hideCtaTags.length && hideCtaTags[0] !== '' ? {
                    hideCtaTags: hideCtaTags.some(function (tag) {
                        var re = new RegExp(tag);
                        return (0, _Helpers.hasTag)(re, card.tags);
                    })
                } : { hideCtaTags: false }, {
                    initial: {
                        title: (0, _general.getByPath)(card, 'contentArea.title', ''),
                        description: (0, _general.getByPath)(card, 'contentArea.description', ''),
                        bannerText: (0, _general.getByPath)(card, 'overlays.banner.description', ''),
                        dateDetailText: (0, _general.getByPath)(card, 'contentArea.dateTetailText', ''),
                        detailText: (0, _general.getByPath)(card, 'contentArea.detailText', '')
                    }
                });
            });
            return this;
        }
    }]);

    return JsonProcessor;
}();

exports.default = JsonProcessor;

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Info = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _hooks = __webpack_require__(5);

var _config = __webpack_require__(19);

var _Info = __webpack_require__(299);

var _rendering = __webpack_require__(38);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    cardsQty: 0,
    filtersQty: 0,
    selectedFiltersQty: 0,
    windowWidth: window.innerWidth
};

/**
 * Left filter info panel
 *
 * @component
 * @example
 * const props= {
    enabled: Boolean,
    filtersQty: Number,
    cardsQty: Number,
    selectedFiltersQty: Number,
    onMobileFiltersToggleClick: Function,
    searchComponent: Node,
    sortComponent: Node,
    sortOptions: Array,
    windowWidth: Number,
 * }
 * return (
 *   <Info {...props}/>
 * )
 */
var Info = (0, _react.forwardRef)(function (props, ref) {
    var enabled = props.enabled,
        filtersQty = props.filtersQty,
        cardsQty = props.cardsQty,
        selectedFiltersQty = props.selectedFiltersQty,
        onMobileFiltersToggleClick = props.onMobileFiltersToggleClick,
        searchComponent = props.searchComponent,
        sortComponent = props.sortComponent,
        sortOptions = props.sortOptions,
        windowWidth = props.windowWidth;


    var getConfig = (0, _hooks.useConfig)();

    /**
     **** Authored Configs ****
     */
    var title = getConfig('collection', 'i18n.title');
    var HeadingLevel = getConfig('collection', 'i18n.titleHeadingLevel');
    var showTotalResults = getConfig('collection', 'showTotalResults');
    var showTotalResultsText = getConfig('collection', 'i18n.totalResultsText');
    var searchEnabled = getConfig('search', 'enabled');
    var sortEnabled = getConfig('sort', 'enabled');
    var mobileFilterBtnLabel = getConfig('filterPanel', 'i18n.leftPanel.mobile.filtersBtnLabel');
    var useLightText = getConfig('collection', 'useLightText');

    /**
     **** Constants ****
     */

    /**
     * Total results HTML
     * @type {Array}
     */
    var totalResultsHtml = (0, _rendering.RenderTotalResults)(showTotalResultsText, cardsQty);

    /**
     * Minimal viewport width to fit desktops/laptops
     * @type {Number}
     */
    var DESKTOP_MIN_WIDTH = 1200;

    /**
     * Whether the current viewport width fits tablets or mobile devices
     * @type {Boolean}
     */
    var NOT_DESKTOP_SCREEN_SIZE = windowWidth < DESKTOP_MIN_WIDTH;

    /**
     * Whether the sort dropdown should be displayed
     * @type {Boolean}
     */
    var shouldRenderSortPopup = sortEnabled && sortOptions.length > 0;

    /**
     * Whether the search bar should be displayed
     * @type {Boolean}
     */
    var shouldRenderSearch = searchEnabled && NOT_DESKTOP_SCREEN_SIZE;

    /**
     * Whether the left filters info block should be displayed
     * on mobile and tablet breakpoints
     * @type {Boolean}
     */
    var shouldRenderMobileInfo = NOT_DESKTOP_SCREEN_SIZE && filtersQty > 0 && enabled;

    var shouldRenderInnerWrapper = title || showTotalResults;

    /**
     * Class name for the left filters info:
     * whether the left filters info should be light or dark
     * @type {String}
     */
    var filtersInfoClassName = (0, _classnames2.default)({
        'consonant-FiltersInfo': true,
        'consonant-FiltersInfo--withLightText': useLightText
    });

    /**
     * Class name for the left filters info inner wrapper:
     * whether the left filters info inner wrapper should display a vertical separator
     * after the block with the quantity of the filtered cards
     * @type {String}
     */
    var wrapperClassName = (0, _classnames2.default)({
        'consonant-FiltersInfo-wrapper': true,
        'consonant-FiltersInfo-wrapper--noLine': !sortEnabled || !sortOptions.length
    });

    return _react2.default.createElement(
        'aside',
        {
            'data-testid': 'consonant-FiltersInfo',
            className: filtersInfoClassName },
        shouldRenderSearch && _react2.default.createElement(
            'div',
            {
                className: 'consonant-FiltersInfo-search' },
            searchComponent
        ),
        shouldRenderMobileInfo && _react2.default.createElement(_Info.Info, {
            selectedFiltersQty: selectedFiltersQty,
            mobileFilterBtnLabel: mobileFilterBtnLabel,
            onMobileFiltersToggleClick: onMobileFiltersToggleClick,
            ref: ref }),
        shouldRenderSortPopup && sortComponent,
        shouldRenderInnerWrapper && _react2.default.createElement(
            'div',
            {
                className: wrapperClassName },
            title && _react2.default.createElement(
                HeadingLevel,
                {
                    'data-testid': 'consonant-FiltersInfo-title',
                    className: 'consonant-FiltersInfo-title' },
                title
            ),
            showTotalResults && _react2.default.createElement(
                'div',
                {
                    'data-testid': 'consonant-FiltersInfo-results',
                    className: 'consonant-FiltersInfo-results' },
                totalResultsHtml
            )
        )
    );
});

Info.defaultProps = defaultProps;

/* eslint-disable-next-line import/prefer-default-export */
exports.Info = Info;

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Info = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
    selectedFiltersQty: 0,
    mobileFilterBtnLabel: ''
};

/**
 * Button with the count of selected filters
 * for mobile and tablet breakpoints
 *
 * @component
 * @example
 * const props= {
    onMobileFiltersToggleClick: Function,
    mobileFilterBtnLabel: String,
    selectedFiltersQty: Number,
 * }
 * return (
 *   <Info {...props}/>
 * )
 */
var Info = (0, _react.forwardRef)(function (_ref, ref) {
    var selectedFiltersQty = _ref.selectedFiltersQty,
        mobileFilterBtnLabel = _ref.mobileFilterBtnLabel,
        onMobileFiltersToggleClick = _ref.onMobileFiltersToggleClick;

    var atleastOneSelectedFilter = selectedFiltersQty > 0;

    /**
     * Class name for the button:
     * whether the button should display the quantity of the selected filters or not
     * @type {String}
     */
    var selectedFiltersQtyClassName = (0, _classnames2.default)({
        'consonant-FiltersInfo-btn': true,
        'consonant-FiltersInfo-btn--withFilters': atleastOneSelectedFilter
    });

    return _react2.default.createElement(
        'div',
        {
            'data-testid': 'consonant-FiltersInfo-btnWrapper',
            className: 'consonant-FiltersInfo-btnWrapper' },
        _react2.default.createElement(
            'button',
            {
                type: 'button',
                'data-testid': 'consonant-FiltersInfo-btn',
                className: selectedFiltersQtyClassName,
                onClick: onMobileFiltersToggleClick,
                ref: ref },
            _react2.default.createElement('span', {
                className: 'consonant-FiltersInfo-btnIco' }),
            _react2.default.createElement(
                'span',
                {
                    className: 'consonant-FiltersInfo-btnText' },
                mobileFilterBtnLabel
            ),
            atleastOneSelectedFilter && _react2.default.createElement(
                'span',
                {
                    'data-testid': 'consonant-FiltersInfo-btnSelected',
                    className: 'consonant-FiltersInfo-btnSelected' },
                selectedFiltersQty
            )
        )
    );
});

Info.defaultProps = defaultProps;

/* eslint-disable-next-line import/prefer-default-export */
exports.Info = Info;

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConsonantPageModel = undefined;

var _reactDomComponents = __webpack_require__(102);

var _Container = __webpack_require__(103);

var _Container2 = _interopRequireDefault(_Container);

var _decorators = __webpack_require__(301);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ConsonantPageModel = exports.ConsonantPageModel = function (_DOMModel) {
    _inherits(ConsonantPageModel, _DOMModel);

    function ConsonantPageModel(element) {
        _classCallCheck(this, ConsonantPageModel);

        var _this = _possibleConstructorReturn(this, (ConsonantPageModel.__proto__ || Object.getPrototypeOf(ConsonantPageModel)).call(this, element));

        _this.getAttribute('id', 'id');
        _this.getAttribute('data-config', 'dataConfig');
        return _this;
    }

    return ConsonantPageModel;
}(_reactDomComponents.DOMModel);

var consonantPageRDC = (0, _reactDomComponents.createRDC)('consonant-card-collection', ConsonantPageModel, (0, _decorators.parseDataConfig)(_Container2.default));
exports.default = consonantPageRDC;

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.parseDataConfig = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _general = __webpack_require__(6);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable react/prop-types  */
/* eslint-disable import/prefer-default-export  */
var parseDataConfig = exports.parseDataConfig = function parseDataConfig(Component) {
    return function (_ref) {
        var dataConfig = _ref.dataConfig;

        var config = (0, _general.parseToPrimitive)(dataConfig);

        return _react2.default.createElement(Component, { config: config });
    };
};

/***/ }),
/* 302 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })
/******/ ]);